                              @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 66   java.lang.String::indexOfSupplementary (71 bytes)   callee is too large
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
                              @ 9  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 43  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 16   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 16   java.lang.Math::min (11 bytes)
                              @ 48   java.lang.String::lastIndexOfSupplementary (70 bytes)   callee is too large
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 139   java.lang.Character::isSurrogate (18 bytes)
                              @ 157  sun/nio/cs/Surrogate$Parser::<init> (not loaded)   not inlineable
                              @ 175  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 186   java.nio.charset.CharsetEncoder::malformedInputAction (5 bytes)
                              @ 1   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 1   java.util.jar.Attributes$Name::isAlpha (30 bytes)
                              @ 8   java.util.jar.Attributes$Name::isDigit (18 bytes)
                              @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 13  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 65  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
                              @ 22   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 26   java.lang.CharacterData::toUpperCaseEx (6 bytes)   no static binding
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
                              @ 1   sun.misc.ASCIICaseInsensitiveComparator::isUpper (18 bytes)
                              @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 121   java.lang.String::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 31   java.lang.AbstractStringBuilder::hugeCapacity (28 bytes)
                                @ 11   java.lang.OutOfMemoryError::<init> (5 bytes)   don't inline Throwable constructors
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 7   java.util.ArrayList::elementData (7 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   callee is too large
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 33  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                                  @ 16   java.util.jar.JarFile$JarFileEntry::<init> (11 bytes)
                                    @ 7   java.util.jar.JarEntry::<init> (6 bytes)
                                      @ 2   java.util.zip.ZipEntry::<init> (146 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 71   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
                              @ 21   java.lang.String::indexOf (166 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 13   java.util.ArrayList::size (5 bytes)
                              @ 33   java.util.Stack::empty (13 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s               @ 47   java.util.Stack::pop (19 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s                 @ 6   java.util.Stack::peek (25 bytes)
              s                   @ 1   java.util.Vector::size (5 bytes)
                                  @ 13  java/util/EmptyStackException::<init> (not loaded)   not inlineable
              s                   @ 21   java.util.Vector::elementAt (48 bytes)   callee is too large
              s                 @ 14   java.util.Vector::removeElementAt (115 bytes)   callee is too large
                              @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 76   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
               !              @ 87   sun.misc.URLClassPath::getLoader (29 bytes)
                                @ 6   sun.misc.URLClassPath$3::<init> (15 bytes)
                                  @ 11   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 22   java.security.PrivilegedActionException::getException (5 bytes)
                              @ 94   sun.misc.URLClassPath$Loader::getClassPath (2 bytes)   no static binding
               !m             @ 107   sun.misc.URLClassPath::push (46 bytes)   callee is too large
                              @ 169   java.util.ArrayList::size (5 bytes)
              s               @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   callee is too large
                              @ 182   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 193   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 236   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
                              @ 26   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
              s!m             @ 84   sun.misc.URLClassPath::getLoader (243 bytes)   callee is too large
                              @ 9  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 44  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 75   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 21   java.lang.String::length (6 bytes)
                              @ 142   java.util.BitSet::get (69 bytes)   callee is too large
                              @ 152   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 193   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 212   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 230   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 252   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 270   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 313   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 332   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.lang.Character::toUpperCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 10   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 35   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 12   java.lang.Math::min (11 bytes)
                              @ 117   sun.nio.cs.UTF_8$Decoder::isNotContinuation (17 bytes)
                              @ 124   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 143   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 147   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 182   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 201   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 205   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 251   sun.nio.cs.UTF_8$Decoder::isMalformed3 (45 bytes)   callee is too large
                              @ 258   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 277   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 281   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 292   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                      @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 301   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 304   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::<init> (not loaded)   not inlineable
                              @ 334   java.lang.Character::isSurrogate (18 bytes)
                              @ 341   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 360   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 385   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 407   sun.nio.cs.UTF_8$Decoder::isMalformed3_2 (34 bytes)
                              @ 421   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 425   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 440   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 444   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 523   sun.nio.cs.UTF_8$Decoder::isMalformed4 (39 bytes)   callee is too large
                              @ 531   java.lang.Character::isSupplementaryCodePoint (18 bytes)
                              @ 601   java.lang.Character::highSurrogate (9 bytes)
                              @ 614   java.lang.Character::lowSurrogate (10 bytes)
                              @ 538   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 557   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 561   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 572   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                      @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 581   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 584   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::<init> (not loaded)   not inlineable
                              @ 622   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 664   sun.nio.cs.UTF_8$Decoder::isMalformed4_2 (56 bytes)   callee is too large
                              @ 701   sun.nio.cs.UTF_8$Decoder::isMalformed4_3 (17 bytes)
                              @ 715   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 719   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 734   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 738   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 678   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 682   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 746   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 765   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 769   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 121   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 192   java.lang.Object::equals (11 bytes)   no static binding
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 282  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 339   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 36   java.lang.String::regionMatches (149 bytes)   callee is too large
                              @ 5   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 23   sun.misc.VM::allowArraySyntax (4 bytes)
                              @ 31   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 12   sun.misc.URLClassPath$JarLoader$1::<init> (10 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 19   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 28   java.security.PrivilegedActionException::getException (5 bytes)
                              @ 10   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 22   java.util.zip.ZipFile::ensureOpen (37 bytes)   callee is too large
                              @ 34   java.util.zip.ZipCoder::getBytes (192 bytes)   callee is too large
                              @ 38   java.util.zip.ZipFile::getEntry (0 bytes)   native method
                              @ 57   java.util.zip.ZipFile::getZipEntry (251 bytes)   callee is too large
                              @ 76   java.util.zip.ZipFile::freeEntry (0 bytes)   native method
                              @ 1   java.lang.String::length (6 bytes)
                              @ 11   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 9  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 52   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 28   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 42   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
              s               @ 1   sun.misc.PerfCounter::get (9 bytes)
                                @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                              @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                              @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
               !              @ 23   java.lang.StringCoding::encode (120 bytes)   callee is too large
                              @ 3   java.lang.StringCoding::deref (19 bytes)
                                @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                                @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 32   java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
                              @ 35   java.lang.String::equals (81 bytes)   callee is too large
                              @ 45   java.lang.StringCoding$StringEncoder::charsetName (31 bytes)
                                @ 17   sun.nio.cs.HistoricallyNamedCharset::historicalName (0 bytes)   not inlineable
                                @ 27   java.nio.charset.Charset::name (5 bytes)
                              @ 48   java.lang.String::equals (81 bytes)   callee is too large
               !              @ 59   java.lang.StringCoding::lookupCharset (24 bytes)
                                @ 1   java.nio.charset.Charset::isSupported (13 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                @ 8   java.nio.charset.Charset::forName (20 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                  @ 16  java/nio/charset/UnsupportedCharsetException::<init> (not loaded)   not inlineable
                                @ 18   java.lang.Error::<init> (6 bytes)   don't inline Throwable constructors
                              @ 78   java.lang.StringCoding$StringEncoder::<init> (7 bytes)
                                @ 3   java.lang.StringCoding$StringEncoder::<init> (54 bytes)   callee is too large
                              @ 99  java/io/UnsupportedEncodingException::<init> (not loaded)   not inlineable
                              @ 108   java.lang.StringCoding::set (13 bytes)
                                @ 6   java.lang.ref.SoftReference::<init> (13 bytes)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                                @ 9   java.lang.ThreadLocal::set (30 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                                  @ 17   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                    @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                                  @ 26   java.lang.ThreadLocal::createMap (14 bytes)
                                    @ 7   java.lang.ThreadLocal$ThreadLocalMap::<init> (53 bytes)   callee is too large
               !              @ 116   java.lang.StringCoding$StringEncoder::encode (179 bytes)   callee is too large
                              @ 12   java.nio.charset.Charset::newEncoder (0 bytes)   no static binding
                              @ 18   java.nio.charset.CharsetEncoder::onMalformedInput (26 bytes)
                                @ 21   java.nio.charset.CharsetEncoder::implOnMalformedInput (1 bytes)
                              @ 24   java.nio.charset.CharsetEncoder::onUnmappableCharacter (26 bytes)
                                @ 21   java.nio.charset.CharsetEncoder::implOnUnmappableCharacter (1 bytes)
                              @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)
                              @ 13   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.String::replace (127 bytes)   callee is too large
                              @ 14   java.net.URLStreamHandler::parseURL (1193 bytes)   callee is too large
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
                              @ 2   java.lang.ClassLoader::getClassLoadingLock (35 bytes)
                                @ 13   java.lang.Object::<init> (1 bytes)
                                @ 23   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 10   java.lang.ClassLoader::findLoadedClass (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findLoadedClass0 (0 bytes)   native method
                              @ 20   java.lang.System::nanoTime (0 bytes)   intrinsic
               !m             @ 38   java.lang.ClassLoader::loadClass (122 bytes)   no static binding
                              @ 48   java.lang.ClassLoader::findBootstrapClassOrNull (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findBootstrapClass (0 bytes)   native method
                              @ 63   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 70   java.lang.ClassLoader::findClass (9 bytes)   no static binding
                              @ 75   sun.misc.PerfCounter::getParentDelegationTime (4 bytes)
                              @ 83   sun.misc.PerfCounter::addTime (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 86   sun.misc.PerfCounter::getFindClassTime (4 bytes)
                              @ 91   sun.misc.PerfCounter::addElapsedTimeFrom (10 bytes)
                                @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s                 @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 94   sun.misc.PerfCounter::getFindClasses (4 bytes)
                              @ 97   sun.misc.PerfCounter::increment (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 107   java.lang.ClassLoader::resolveClass (6 bytes)
                                @ 2   java.lang.ClassLoader::resolveClass0 (0 bytes)   native method
                              @ 13   java.lang.IllegalStateException::<init> (6 bytes)   not inlineable
                              @ 32   java.lang.IllegalStateException::<init> (6 bytes)   not inlineable
                              @ 1   java.util.zip.ZipCoder::encoder (35 bytes)
                                @ 12   java.nio.charset.Charset::newEncoder (0 bytes)   no static binding
                                @ 18   java.nio.charset.CharsetEncoder::onMalformedInput (26 bytes)
                                  @ 21   java.nio.charset.CharsetEncoder::implOnMalformedInput (1 bytes)
                                @ 24   java.nio.charset.CharsetEncoder::onUnmappableCharacter (26 bytes)
                                  @ 21   java.nio.charset.CharsetEncoder::implOnUnmappableCharacter (1 bytes)
                              @ 4   java.nio.charset.CharsetEncoder::reset (11 bytes)
                                @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)
                              @ 9   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 17   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
                              @ 62   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   inlining prohibited by policy
                              @ 81   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 89   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 95   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 101   java.nio.CharBuffer::wrap (8 bytes)
                              @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
               !                @ 4   java.nio.CharBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapCharBuffer::<init> (14 bytes)
                                    @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                      @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                                  @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !              @ 112   java.nio.charset.CharsetEncoder::encode (285 bytes)   callee is too large
                              @ 119   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 131   java.nio.charset.CoderResult::toString (52 bytes)   callee is too large
                              @ 134   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 141   java.nio.charset.CharsetEncoder::flush (49 bytes)   callee is too large
                              @ 148   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 160   java.nio.charset.CoderResult::toString (52 bytes)   callee is too large
                              @ 163   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 169   java.nio.Buffer::position (5 bytes)
                              @ 185   java.nio.Buffer::position (5 bytes)
                              @ 188   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 13   java.lang.Object::<init> (1 bytes)
                              @ 23                                @ 14   java.lang.Math::min (11 bytes)   (intrinsic)
 java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 12   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 24   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 27  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 32   java.util.BitSet::checkInvariants (111 bytes)   callee is too large
                              @ 36   java.util.BitSet::wordIndex (5 bytes)
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 45   java.util.zip.Inflater::ensureOpen (47 bytes)   callee is too large
                              @ 59   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 65   java.util.zip.Inflater::inflateBytes (0 bytes)   native method
                              @ 32  java/lang/ArrayIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.String::length (6 bytes)
                              @ 24   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 33   java.lang.String::getChars (16 bytes)
                                @ 12   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 43   java.lang.String::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 107   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 114   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 131   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 136   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
               !              @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 12   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2   java.lang.StringCoding::scale (7 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   not inlineable
                              @ 91   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (76 bytes)   callee is too large
                              @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   callee is too large
                              @ 5   java.lang.ref.Finalizer::<init> (23 bytes)
                                @ 5   java.lang.ref.FinalReference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
               !m               @ 19   java.lang.ref.Finalizer::add (41 bytes)   callee is too large
                              @ 16   java.util.jar.JarFile::getMetaInfEntryNames (0 bytes)   native method
                              @ 38   java.lang.String::toUpperCase (439 bytes)   callee is too large
                              @ 45   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 54   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 63   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 72   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 79   java.util.jar.JarFile::getManifest (5 bytes)
                                @ 1   java.util.jar.JarFile::getManifestFromReference (117 bytes)   callee is too large
                              @ 5   java.lang.ref.FinalReference::<init> (7 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
               !m             @ 19   java.lang.ref.Finalizer::add (41 bytes)   callee is too large
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 12   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 13   sun.misc.Unsafe::putLong (0 bytes)   intrinsic
                              @ 7   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 27   java.lang.String::substring (56 bytes)   callee is too large
                              @ 38   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 7   java.net.URL::getAuthority (5 bytes)
                              @ 13   java.net.URL::getUserInfo (5 bytes)
                              @ 19   java.net.URL::getHost (5 bytes)
                              @ 25   java.net.URL::getPort (5 bytes)
                              @ 31   java.net.URL::getPath (5 bytes)
                              @ 37   java.net.URL::getQuery (5 bytes)
                              @ 43   java.net.URL::getRef (5 bytes)
                              @ 63   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 101   java.lang.String::substring (79 bytes)   callee is too large
                              @ 121   java.lang.String::substring (79 bytes)   callee is too large
                              @ 138   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 150   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 174   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 204   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 216   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 231   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 252   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 277   java.lang.String::substring (79 bytes)   callee is too large
                              @ 289   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 306   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 326   java.lang.String::substring (79 bytes)   callee is too large
                              @ 337   java.lang.String::substring (56 bytes)   callee is too large
                              @ 355   java.lang.String::length (6 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 376   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 397   java.lang.String::substring (79 bytes)   callee is too large
                              @ 407   java.lang.String::substring (79 bytes)   callee is too large
                              @ 410  sun/net/util/IPAddressUtil::isIPv6LiteralAddress (not loaded)   not inlineable
                              @ 424   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 429   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 434   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 437   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 440   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 449   java.lang.String::length (6 bytes)
                              @ 465   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 478   java.lang.String::length (6 bytes)
                              @ 494   java.lang.String::substring (56 bytes)   callee is too large
                              @ 497   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 513   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 518   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 523   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 526   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 529   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 544   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 549   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 554   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 557   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 560   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 568   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 583   java.lang.String::length (6 bytes)
                              @ 599   java.lang.String::substring (56 bytes)   callee is too large
                              @ 602   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 612   java.lang.String::substring (79 bytes)   callee is too large
                              @ 638   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 643   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 648   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 651   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 654   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 668   java.lang.String::length (6 bytes)
                              @ 695   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 707   java.lang.String::substring (79 bytes)   callee is too large
                              @ 722   java.lang.String::length (6 bytes)
                              @ 735   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 763   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 773   java.lang.String::substring (79 bytes)   callee is too large
                              @ 776   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 781   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 788   java.lang.String::substring (79 bytes)   callee is too large
                              @ 791   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 794   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 820   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 825   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 832   java.lang.String::substring (79 bytes)   callee is too large
                              @ 835   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 838   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 860   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 877   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 885   java.lang.String::substring (79 bytes)   callee is too large
                              @ 888   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 893   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 896   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 919   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 932   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 940   java.lang.String::substring (79 bytes)   callee is too large
                              @ 943   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 952   java.lang.String::substring (56 bytes)   callee is too large
                              @ 955   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 958   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 975   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 997   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1012   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1022   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1030   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1033   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1042   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1045   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1048   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1072   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1082   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1095   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1111   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1123   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1131   java.lang.String::length (6 bytes)
                              @ 1141   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1150   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1161   java.lang.String::length (6 bytes)
                              @ 1166   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1189   java.net.URLStreamHandler::setURL (40 bytes)   callee is too large
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 33   java.lang.System::getSecurityManager (4 bytes)
                              @ 46   java.net.URL::checkSpecifyHandler (8 bytes)
                                @ 4   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 50   java.lang.String::length (6 bytes)
                              @ 65   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 89   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 111   java.lang.String::regionMatches (149 bytes)   callee is too large
                              @ 123   java.lang.String::length (6 bytes)
                              @ 132   java.lang.String::charAt (29 bytes)
                              @ 121   java.lang.String::<init> (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 185   java.lang.String::substring (79 bytes)   callee is too large
                              @ 188   java.lang.String::toLowerCase (8 bytes)
                                @ 1   java.util.Locale::getDefault (4 bytes)
                                @ 4   java.lang.String::toLowerCase (439 bytes)   callee is too large
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   callee is too large
                              @ 242   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 270   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 358   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 363   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 368   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 371   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 374   java.net.MalformedURLException::<init> (6 bytes)   not inlineable
               !m             @ 386   java.net.URL::getURLStreamHandler (313 bytes)   callee is too large
                              @ 402   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 407   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 414   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 417   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 420   java.net.MalformedURLException::<init> (6 bytes)   not inlineable
                              @ 434   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 452   java.lang.String::substring (79 bytes)   callee is too large
                              @ 504   java.net.URLStreamHandler::parseURL (1193 bytes)   no static binding
                              @ 523   java.lang.Throwable::getMessage (5 bytes)   no static binding
                              @ 526   java.net.MalformedURLException::<init> (6 bytes)   not inlineable
              s               @ 535   java.lang.Throwable::initCause (64 bytes)   no static binding
                              @ 20   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 56   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 91   java.lang.Object::equals (11 bytes)   no static binding
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
                              @ 152   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 169   java.util.HashMap::treeifyBin (110 bytes)   callee is too large
                              @ 203   java.lang.Object::equals (11 bytes)   no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 288   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   no static binding
                              @ 14   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 20   java.net.URL::getProtocol (5 bytes)
               !m             @ 36   java.net.URL::set (114 bytes)   callee is too large
                              @ 35   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 121   java.lang.String::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   sun.misc.Resource::getInputStream (0 bytes)   no static binding
                              @ 13   java.net.URL::getHost (5 bytes)
                              @ 24   java.lang.String::equals (81 bytes)   callee is too large
                              @ 34  java/net/InetAddress::getByName (not loaded)   not inlineable
                              @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   callee is too large
                              @ 1   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 25   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   callee is too large
                              @ 13   sun.misc.ASCIICaseInsensitiveComparator::lowerCaseHashCode (36 bytes)   callee is too large
                              @ 2   java.io.UnixFileSystem::getBooleanAttributes0 (0 bytes)   native method
                              @ 7   java.io.File::getName (42 bytes)   callee is too large
                              @ 12   java.lang.String::length (6 bytes)
                              @ 20   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2   java.util.jar.Attributes::get (11 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
               !m             @ 1   java.util.WeakHashMap::expungeStaleEntries (139 bytes)   callee is too large
                              @ 5   java.util.Map::get (0 bytes)   no static binding
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 33   java.util.WeakHashMap::indexFor (6 bytes)
                              @ 6   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 45   java.lang.Object::equals (11 bytes)   no static binding
                              @ 11   java.io.BufferedReader::ensureOpen (18 bytes)
                                @ 13   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 44   java.io.BufferedReader::fill (170 bytes)   callee is too large
              s               @ 63   java.lang.StringBuffer::length (5 bytes)
              s               @ 70   java.lang.StringBuffer::toString (36 bytes)   callee is too large
                              @ 208   java.lang.String::<init> (82 bytes)   callee is too large
              s               @ 226   java.lang.StringBuffer::append (15 bytes)
                                @ 9   java.lang.AbstractStringBuilder::append (40 bytes)   callee is too large
              s               @ 231   java.lang.StringBuffer::toString (36 bytes)   callee is too large
                              @ 275   java.lang.StringBuffer::<init> (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
              s               @ 289   java.lang.StringBuffer::append (15 bytes)
                                @ 9   java.lang.AbstractStringBuilder::append (40 bytes)   callee is too large
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 9   java.util.HashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)
                                @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   callee is too large
                              @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   callee is too large
                              @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                              @ 29   java.io.UnixFileSystem::getBooleanAttributes (49 bytes)   callee is too large
                              @ 3   java.lang.StringCoding::deref (19 bytes)
                                @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                                @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 32   java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
                              @ 35   java.lang.String::equals (81 bytes)   callee is too large
                              @ 45   java.lang.StringCoding$StringEncoder::charsetName (31 bytes)
                                @ 17   sun.nio.cs.HistoricallyNamedCharset::historicalName (0 bytes)   not inlineable
                                @ 27   java.nio.charset.Charset::name (5 bytes)
                              @ 48   java.lang.String::equals (81 bytes)   callee is too large
               !              @ 59   java.lang.StringCoding::lookupCharset (24 bytes)
                                @ 1   java.nio.charset.Charset::isSupported (13 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                @ 8   java.nio.charset.Charset::forName (20 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                  @ 16  java/nio/charset/UnsupportedCharsetException::<init> (not loaded)   not inlineable
                                @ 18   java.lang.Error::<init> (6 bytes)   don't inline Throwable constructors
                              @ 78   java.lang.StringCoding$StringEncoder::<init> (7 bytes)
                                @ 3   java.lang.StringCoding$StringEncoder::<init> (54 bytes)   callee is too large
                              @ 99  java/io/UnsupportedEncodingException::<init> (not loaded)   not inlineable
                              @ 108   java.lang.StringCoding::set (13 bytes)
                                @ 6   java.lang.ref.SoftReference::<init> (13 bytes)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                                @ 9   java.lang.ThreadLocal::set (30 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                                  @ 17   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                    @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                                  @ 26   java.lang.ThreadLocal::createMap (14 bytes)
                                    @ 7   java.lang.ThreadLocal$ThreadLocalMap::<init> (53 bytes)   callee is too large
               !              @ 116   java.lang.StringCoding$StringEncoder::encode (179 bytes)   callee is too large
                              @ 5   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
                              @ 8   java.lang.StringCoding::access$000 (6 bytes)
                                @ 2   java.lang.StringCoding::scale (7 bytes)
                              @ 48   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   inlining prohibited by policy
                              @ 67   java.lang.StringCoding::access$300 (8 bytes)
                                @ 4   java.lang.StringCoding::safeTrim (24 bytes)
                                  @ 10   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 75   java.nio.charset.CharsetEncoder::reset (11 bytes)
                                @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)
                              @ 81   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !              @ 89   java.nio.CharBuffer::wrap (20 bytes)
                                @ 7   java.nio.HeapCharBuffer::<init> (14 bytes)
                                  @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                    @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                                @ 16  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !              @ 103   java.nio.charset.CharsetEncoder::encode (285 bytes)   callee is too large
                              @ 110   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 118   java.nio.charset.CoderResult::throwException (91 bytes)   callee is too large
                              @ 127   java.nio.charset.CharsetEncoder::flush (49 bytes)   callee is too large
                              @ 134   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 142   java.nio.charset.CoderResult::throwException (91 bytes)   callee is too large
                              @ 156   java.lang.Error::<init> (6 bytes)   don't inline Throwable constructors
                              @ 164   java.nio.Buffer::position (5 bytes)
                              @ 175   java.lang.StringCoding::access$300 (8 bytes)
                                @ 4   java.lang.StringCoding::safeTrim (24 bytes)
                                  @ 10   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 4   java.lang.StringCoding::safeTrim (24 bytes)
                                @ 10   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 13   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 24   java.lang.String::equals (81 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 44   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 54   java.lang.String::equals (81 bytes)   callee is too large
                              @ 64   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 68   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 75   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 83   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 92   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 96   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 99   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 31   java.lang.String::equals (81 bytes)   callee is too large
                              @ 44   java.io.UnixFileSystem::getDefaultParent (3 bytes)
                              @ 51   java.io.UnixFileSystem::normalize (75 bytes)   callee is too large
                              @ 54   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                              @ 75   java.io.UnixFileSystem::normalize (75 bytes)   callee is too large
                              @ 78   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                              @ 92   java.io.UnixFileSystem::normalize (75 bytes)   callee is too large
                              @ 106   java.io.UnixFileSystem::prefixLength (25 bytes)
                                @ 1   java.lang.String::length (6 bytes)
                                @ 11   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.util.zip.InflaterInputStream::ensureOpen (18 bytes)
                                @ 13   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
               !m             @ 53   java.util.zip.Inflater::inflate (113 bytes)   callee is too large
               !m             @ 66   java.util.zip.Inflater::finished (19 bytes)
               !m             @ 76   java.util.zip.Inflater::needsDictionary (19 bytes)
               !m             @ 93   java.util.zip.Inflater::needsInput (27 bytes)
                              @ 100   java.util.zip.InflaterInputStream::fill (60 bytes)   no static binding
                              @ 113  java/util/zip/DataFormatException::getMessage (not loaded)   not inlineable
                              @ 134   java.util.zip.ZipException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 36  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
              s               @ 38   sun.misc.URLClassPath::getLookupCache (98 bytes)   callee is too large
              s               @ 51   sun.misc.URLClassPath::getNextLoader (88 bytes)   callee is too large
               !              @ 62   sun.misc.URLClassPath$Loader::getResource (100 bytes)   no static binding
                              @ 1   java.util.WeakHashMap::maskNull (12 bytes)
                              @ 7   java.util.WeakHashMap::hash (28 bytes)
                                @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 12   java.util.WeakHashMap::getTable (9 bytes)
               !m               @ 1   java.util.WeakHashMap::expungeStaleEntries (139 bytes)   callee is too large
                              @ 21   java.util.WeakHashMap::indexFor (6 bytes)
                              @ 61   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 64   java.util.WeakHashMap::eq (19 bytes)
                                @ 7   java.lang.Object::equals (11 bytes)   no static binding
                              @ 13   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 38   java.util.zip.ZipFile::access$400 (5 bytes)
                              @ 50   java.util.zip.ZipFile::access$400 (5 bytes)
                              @ 57   java.util.zip.ZipFile::access$1000 (6 bytes)
                                @ 2   java.util.zip.ZipFile::freeEntry (0 bytes)   native method
                              @ 79   java.util.zip.ZipFile::access$000 (5 bytes)
                              @ 89   java.util.zip.ZipFile::access$000 (5 bytes)
                              @ 93   java.util.Map::remove (0 bytes)   no static binding
                              @ 20   sun.misc.URLClassPath::getLookupCacheForClassLoader (0 bytes)   native method
                              @ 42   sun.misc.URLClassPath::ensureLoaderOpened (77 bytes)   callee is too large
                              @ 11   sun.misc.Unsafe::ensureClassInitialized (0 bytes)   native method
                              @ 11   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 12   java.util.HashMap::get (23 bytes)   no static binding
               !m             @ 47   java.lang.ClassLoader::getPackage (118 bytes)   callee is too large
               !m             @ 55   java.lang.Package::getSystemPackage (63 bytes)   callee is too large
                              @ 75   java.util.HashMap::get (23 bytes)   no static binding
                              @ 94   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 10   java.lang.String::length (6 bytes)   inline (hot)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                  @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 11   java.lang.Object::clone (0 bytes)   no static binding
                              @ 29   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 51  java/security/CodeSigner::getSignerCertPath (not loaded)   not inlineable
                              @ 54  java/security/cert/CertPath::getCertificates (not loaded)   not inlineable
                              @ 57   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 70   java.util.ArrayList::size (5 bytes)
                              @ 76   java.util.ArrayList::toArray (60 bytes)   callee is too large
                              @ 89   java.lang.Object::clone (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 8   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
                              @ 7   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 14   sun.misc.ProxyGenerator$ConstantPool::getValue (91 bytes)   callee is too large
                              @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                              @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                              @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                              @ 31   java.io.DataOutputStream::incCount (20 bytes)
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 19   java.lang.Short::shortValue (5 bytes)
                              @ 38   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 50   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 53  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 63   sun.misc.ProxyGenerator$ConstantPool$ValueEntry::<init> (11 bytes)
                                @ 2   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                  @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 66   sun.misc.ProxyGenerator$ConstantPool::addEntry (46 bytes)   callee is too large
                              @ 80   java.lang.Short::<init> (10 bytes)
                              @ 121   java.lang.String::<init> (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 1   java.lang.Number::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 83   java.util.Map::put (0 bytes)   no static binding
                              @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                              @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 19   java.lang.Short::shortValue (5 bytes)
                              @ 36  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 42   sun.misc.ProxyGenerator$ConstantPool::addEntry (46 bytes)   callee is too large
                              @ 56   java.lang.Short::<init> (10 bytes)
                                @ 1   java.lang.Number::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 59   java.util.Map::put (0 bytes)   no static binding
                              @ 1   java.lang.Character::isWhitespace (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::isWhitespace (0 bytes)   no static binding
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::isWhitespace (0 bytes)   no static binding
                              @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 14   java.util.ArrayList::access$000 (5 bytes)
                              @ 24  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 46  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.String::length (6 bytes)
                              @ 22   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 83   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 88   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 92   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 97   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 100   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 103  java/io/UTFDataFormatException::<init> (not loaded)   not inlineable
                              @ 220   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 267   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
              s               @ 426   java.io.DataOutputStream::write (16 bytes)
                                @ 7   java.io.OutputStream::write (79 bytes)   no static binding
                                @ 12   java.io.DataOutputStream::incCount (20 bytes)
                              @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 12   java.io.DataOutputStream::incCount (20 bytes)
                              @ 1   java.lang.Number::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Number::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Number::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 66   java.lang.String::indexOfSupplementary (71 bytes)   callee is too large
                              @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 11   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 7   java.lang.String::lastIndexOf (25 bytes)
                                @ 21   java.lang.String::lastIndexOf (151 bytes)   callee is too large
                              @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 83   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 125   jdk.internal.org.objectweb.asm.ByteVector::encodeUTF8 (335 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)   callee is too large
                              @ 104   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 108   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 90   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 123   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 127   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 133   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)
                                @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 17  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !m             @ 3   java.lang.ClassLoader::loadClass (122 bytes)   no static binding
                              @ 3   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 12   java.lang.System::getSecurityManager (4 bytes)
                              @ 27   java.lang.String::substring (79 bytes)   callee is too large
               !              @ 30   java.lang.SecurityManager::checkPackageAccess (156 bytes)   not inlineable
              s               @ 38   sun.misc.URLClassPath::knownToNotExist (24 bytes)
                                @ 18   sun.misc.URLClassPath::knownToNotExist0 (0 bytes)   native method
                              @ 46   java.lang.ClassLoader::findLoadedClass (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findLoadedClass0 (0 bytes)   native method
                              @ 63   java.lang.ClassLoader::resolveClass (6 bytes)
                                @ 2   java.lang.ClassLoader::resolveClass0 (0 bytes)   native method
                              @ 74   java.lang.ClassNotFoundException::<init> (7 bytes)   don't inline Throwable constructors
               !m             @ 81   java.lang.ClassLoader::loadClass (122 bytes)   callee is too large
                              @ 18   sun.misc.URLClassPath::knownToNotExist0 (0 bytes)   native method
                              @ 17   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 21   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 38   java.lang.Math::min (11 bytes)
                              @ 41   java.lang.System::arraycopy (0 bytes)   intrinsic
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
                              @ 10   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 53   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (59 bytes)   callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)
                                @ 14   sun.invoke.util.Wrapper::forceType (165 bytes)   callee is too large
                              @ 149   sun.invoke.util.Wrapper::asWrapperType (18 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   callee is too large
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 4   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 8   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 16   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 29   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   callee is too large
                              @ 56   jdk.internal.org.objectweb.asm.Item::<init> (66 bytes)   callee is too large
                              @ 62   jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)   callee is too large
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 17   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
                              @ 32   java.lang.String::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
               !m             @ 8   java.lang.invoke.MemberName::getMethodType (208 bytes)   callee is too large
                              @ 13   java.lang.invoke.MemberName::isGetter (8 bytes)
                                @ 1   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                                @ 4   java.lang.invoke.MethodHandleNatives::refKindIsGetter (32 bytes)   callee is too large
               !m             @ 20   java.lang.invoke.MemberName::getFieldType (177 bytes)   callee is too large
                              @ 23   java.lang.invoke.MethodType::methodType (9 bytes)
                                @ 5   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 28   java.lang.invoke.MemberName::isSetter (8 bytes)
                                @ 1   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                                @ 4   java.lang.invoke.MethodHandleNatives::refKindIsSetter (20 bytes)
                                  @ 1   java.lang.invoke.MethodHandleNatives::refKindIsField (32 bytes)   callee is too large
                                  @ 8                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                              @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
 java.lang.invoke.MethodHandleNatives::refKindIsGetter (32 bytes)   callee is too large
               !m             @ 38   java.lang.invoke.MemberName::getFieldType (177 bytes)   callee is too large
                              @ 41   java.lang.invoke.MethodType::methodType (14 bytes)
                                @ 10   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 58   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 62   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.invoke.MemberName::toString (160 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 65   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 68  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 6   java.lang.Object::hashCode (0 bytes)   native method
                              @ 40   java.lang.Object::hashCode (0 bytes)   native method
                              @ 8   java.util.AbstractCollection::size (0 bytes)   no static binding
                              @ 4   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
                              @ 21   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 29   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 74   java.lang.invoke.MemberName::getClassLoader (8 bytes)
                                @ 4   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
                              @ 77   java.lang.invoke.MethodType::fromMethodDescriptorString (97 bytes)   callee is too large
                              @ 131   java.lang.invoke.MethodType::methodType (7 bytes)
                                @ 3   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 73   java.lang.Object::equals (11 bytes)   no static binding
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   no static binding
                              @ 149   java.lang.Object::equals (11 bytes)   no static binding
                              @ 3   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 234   java.lang.String::equals (81 bytes)   callee is too large
                              @ 248   java.lang.String::equals (81 bytes)   callee is too large
                              @ 280   java.lang.String::equals (81 bytes)   callee is too large
                              @ 294   java.lang.String::equals (81 bytes)   callee is too large
                              @ 156   java.lang.String::equals (81 bytes)   callee is too large
                              @ 214   java.lang.String::equals (81 bytes)   callee is too large
                              @ 314   java.lang.String::equals (81 bytes)   callee is too large
                              @ 328   java.lang.String::equals (81 bytes)   callee is too large
                              @ 342   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1   java.util.AbstractList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 14   java.util.AbstractList::get (0 bytes)   no static binding
                              @ 34   java.util.AbstractList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 41  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 13   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 13   java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
                              @ 25   java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init> (14 bytes)
                                @ 2   java.lang.ref.WeakReference::<init> (6 bytes)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                                @ 7   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 28   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 42   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 822   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 955   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 979   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 964   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 970   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 988   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1006   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1010   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1022   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1026   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1038   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1042   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1054   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1058   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 831   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 840   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 846   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 855   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 864   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 870   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1067   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1070   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1112   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1118   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1146   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1150   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1161   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1078   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1084   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1246   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1250   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1259   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1268                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   executed < MinInliningThreshold times
                              @ 83   java.lang.String::charAt (29 bytes)   inline (hot)
 jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1279   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1329   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1304   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1168   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1177   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1188   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1238   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1213   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1345   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1337   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1368   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1376   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1382   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1389   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1395   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1403   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1409   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1415   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1422   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1428   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1434   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1442   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1448   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1454   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1460   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1467   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1473   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1481   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1487   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1493   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1499   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1506   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1512   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1518   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1526   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1532   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1538   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1544   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1550   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1557   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1563   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1569   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1575   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1583   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1589   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1595   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1601   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1607   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1613   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1620   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1626   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1634   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1640   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1696   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1702   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1708   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1716   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1722   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1728   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1662   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1668   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1674   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1738   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1766   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1772   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1126   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1132   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1138   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1746   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1752   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1758   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1780   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1786   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1792   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1092   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1098   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1104   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1682   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1688   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1648   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1654   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1814   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1820   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1832   java.lang.RuntimeException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1361   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1843   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1855   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1863   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1873   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1885   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1889   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1902   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1913   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1931   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1942   jdk.internal.org.objectweb.asm.Frame::init (77 bytes)   callee is too large
                              @ 1952   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1964   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1974   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1990   jdk.internal.org.objectweb.asm.ClassWriter::addUninitializedType (71 bytes)   callee is too large
                              @ 1994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2001   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2051   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2060   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2096   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2105   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2069   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2078   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2087   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2114   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2128   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2135   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2149   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2154   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2159   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 2162   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 2165   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2177   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2181   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2195   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2202   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2214   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2226   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2230   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1800   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1806   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1353   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2238   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2248   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 249   jdk.internal.org.objectweb.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 214   jdk.internal.org.objectweb.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 265   jdk.internal.org.objectweb.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 38   java.lang.Math::max (11 bytes)
                              @ 52   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 9   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 17   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 30   jdk.internal.org.objectweb.asm.ClassWriter::addType (103 bytes)   callee is too large
                              @ 12   java.lang.invoke.LambdaForm$Name::<init> (9 bytes)
                                @ 5   java.lang.invoke.LambdaForm$Name::<init> (54 bytes)   callee is too large
                              @ 20   java.lang.Enum::ordinal (5 bytes)
                              @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.invoke.MemberName::getMethodOrFieldType (72 bytes)   callee is too large
                              @ 6   java.lang.invoke.MemberName::isConstructor (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 13   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                              @ 26   java.lang.invoke.MethodType::changeReturnType (20 bytes)
                                @ 1   java.lang.invoke.MethodType::returnType (5 bytes)
                                @ 16   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 31   java.lang.invoke.MemberName::isStatic (8 bytes)
                                @ 4   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 50   java.lang.invoke.MethodType::insertParameterTypes (106 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 16   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 34   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
              s               @ 2   java.util.Hashtable::get (69 bytes)   callee is too large
                              @ 38   java.util.Properties::getProperty (46 bytes)   callee is too large
                              @ 17   java.util.Vector::ensureCapacityHelper (16 bytes)
                                @ 12   java.util.Vector::grow (57 bytes)   callee is too large
                              @ 1   java.util.jar.JarFile::getManifestFromReference (117 bytes)   callee is too large
                              @ 3   java.lang.Exception::<init> (7 bytes)
                                @ 3   java.lang.Throwable::<init> (39 bytes)   callee is too large
                              @ 3   java.lang.Throwable::<init> (39 bytes)   callee is too large
                              @ 1   java.net.URL::toExternalForm (9 bytes)
                                @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                              @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                              @ 41   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 13  java/io/EOFException::<init> (not loaded)   not inlineable
               !              @ 32   java.io.InputStream::read (109 bytes)   no static binding
               !m             @ 76   java.util.zip.Inflater::setInput (74 bytes)   callee is too large
                              @ 57   java.util.zip.ZipFile::access$1300 (5 bytes)
                                @ 1   java.util.zip.ZipFile::ensureOpenOrZipException (18 bytes)
                                  @ 13   java.util.zip.ZipException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 64   java.util.zip.ZipFile::access$400 (5 bytes)
                              @ 76   java.util.zip.ZipFile::access$1400 (14 bytes)
                                @ 10   java.util.zip.ZipFile::read (0 bytes)   native method
               !m             @ 126   java.util.zip.ZipFile$ZipFileInputStream::close (110 bytes)   callee is too large
                              @ 1   java.io.InputStream::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.WeakHashMap::maskNull (12 bytes)
                              @ 7   java.util.WeakHashMap::hash (28 bytes)
                                @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 13   java.util.WeakHashMap::getTable (9 bytes)
               !m               @ 1   java.util.WeakHashMap::expungeStaleEntries (139 bytes)   callee is too large
                              @ 23   java.util.WeakHashMap::indexFor (6 bytes)
                              @ 53   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 56   java.util.WeakHashMap::eq (19 bytes)
                                @ 7   java.lang.Object::equals (11 bytes)   no static binding
                              @ 129   java.util.WeakHashMap$Entry::<init> (24 bytes)
                                @ 3   java.lang.ref.WeakReference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 157   java.util.WeakHashMap::resize (86 bytes)   callee is too large
                              @ 5   java.util.List::add (0 bytes)   no static binding
                              @ 15   java.util.List::size (0 bytes)   no static binding
                              @ 31   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 39   java.util.List::size (0 bytes)   no static binding
                              @ 2   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.ref.WeakReference::<init> (7 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   java.util.HashMap::get (23 bytes)   no static binding
                              @ 21   java.lang.String::lastIndexOf (11 bytes)
                                @ 7   java.lang.String::lastIndexOf (25 bytes)
                                  @ 21   java.lang.String::lastIndexOf (151 bytes)   callee is too large
                              @ 37   java.lang.String::substring (79 bytes)   callee is too large
                              @ 40   java.util.HashMap::get (23 bytes)   no static binding
                              @ 6   java.net.URLClassLoader$1::<init> (15 bytes)
                                @ 11   java.lang.Object::<init> (1 bytes)
                              @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 25   java.security.PrivilegedActionException::getException (5 bytes)
                              @ 41   java.lang.ClassNotFoundException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 11   java.lang.Object::<init> (1 bytes)
                              @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 10   java.net.URL::<init> (8 bytes)
               !                @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 20   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 25   sun.net.www.ParseUtil::encodePath (336 bytes)   callee is too large
                              @ 28   java.net.URL::<init> (8 bytes)
               !                @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 33   java.net.URL::getFile (5 bytes)
                              @ 38   java.net.URL::getFile (5 bytes)
                              @ 41   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath::check (123 bytes)   callee is too large
                              @ 60   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 81   java.lang.String::replace (127 bytes)   callee is too large
                              @ 84   java.io.File::<init> (113 bytes)   callee is too large
                              @ 87   java.io.File::getCanonicalFile (21 bytes)
                                @ 1   java.io.File::getCanonicalPath (31 bytes)
                                  @ 1   java.io.File::isInvalid (47 bytes)   callee is too large
                                  @ 13   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                                  @ 24   java.io.UnixFileSystem::resolve (27 bytes)
                                    @ 2   java.io.UnixFileSystem::isAbsolute (13 bytes)
                                      @ 1   java.io.File::getPrefixLength (5 bytes)
                                    @ 9   java.io.File::getPath (5 bytes)
                                    @ 16   java.lang.System::getProperty (25 bytes)   callee is too large
                                    @ 20   java.io.File::getPath (5 bytes)
                                    @ 23   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                                  @ 27   java.io.UnixFileSystem::canonicalize (232 bytes)   callee is too large
                                @ 14   java.io.UnixFileSystem::prefixLength (25 bytes)
                                  @ 1   java.lang.String::length (6 bytes)
                                  @ 11   java.lang.String::charAt (29 bytes)   callee is too large
                                @ 17   java.io.File::<init> (20 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 94   java.io.File::getPath (5 bytes)
                              @ 101   java.io.File::getPath (5 bytes)
                              @ 104   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 126   java.lang.String::replace (127 bytes)   callee is too large
                              @ 129   java.io.File::<init> (113 bytes)   callee is too large
                              @ 136   java.io.File::exists (43 bytes)   callee is too large
                              @ 151   sun.misc.URLClassPath$FileLoader$1::<init> (26 bytes)
                                @ 22   sun.misc.Resource::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 1   java.net.URLClassLoader$1::run (63 bytes)   callee is too large
                              @ 8   java.lang.String::replace (127 bytes)   callee is too large
                              @ 13   java.lang.String::concat (47 bytes)   callee is too large
                              @ 21   java.net.URLClassLoader::access$000 (5 bytes)
                              @ 26   sun.misc.URLClassPath::getResource (83 bytes)   callee is too large
                              @ 43   java.net.URLClassLoader::access$100 (7 bytes)
                                @ 3   java.net.URLClassLoader::defineClass (142 bytes)   callee is too large
                              @ 57   java.lang.ClassNotFoundException::<init> (12 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 13   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 25   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 163   java.lang.String::length (6 bytes)
                              @ 168   java.lang.String::substring (79 bytes)   callee is too large
                              @ 176   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 189   java.lang.String::charAt (29 bytes)
                              @ 142   java.util.BitSet::get (69 bytes)   inline (hot)
                                @ 32   java.util.BitSet::checkInvariants (111 bytes)   too big
                                @ 36   java.util.BitSet::wordIndex (5 bytes)   inline (hot)
                              @ 332   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 206   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 386   java.lang.String::length (6 bytes)
                              @ 391   java.lang.String::substring (79 bytes)   callee is too large
                              @ 399   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 36   jdk.internal.org.objectweb.asm.Frame::execute (2252 bytes)   callee is too large
                              @ 76   jdk.internal.org.objectweb.asm.MethodWriter::noSuccessor (87 bytes)   callee is too large
                              @ 217   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 238   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 243   jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)   callee is too large
                              @ 256   jdk.internal.org.objectweb.asm.ByteVector::put11 (52 bytes)   callee is too large
                              @ 285   jdk.internal.org.objectweb.asm.Label::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 288   jdk.internal.org.objectweb.asm.MethodWriter::visitLabel (281 bytes)   callee is too large
                              @ 1   java.util.AbstractMap::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 7   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)   inline (hot)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   too big
                              @ 1   java.util.AbstractSet::<init> (5 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.util.HashMap::<init> (11 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.lang.invoke.MethodType::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.lang.invoke.MethodType$ConcurrentWeakInternSet::get (54 bytes)   callee is too large
                              @ 43   java.lang.invoke.MethodType::<init> (40 bytes)   callee is too large
                              @ 49   java.lang.invoke.MethodTypeForm::findForm (25 bytes)
                                @ 3   java.lang.invoke.MethodTypeForm::canonicalize (64 bytes)   callee is too large
                                @ 16   java.lang.invoke.MethodTypeForm::<init> (687 bytes)   callee is too large
                                @ 21   java.lang.invoke.MethodType::form (5 bytes)
                              @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 59   java.lang.invoke.MethodType$ConcurrentWeakInternSet::add (66 bytes)   callee is too large
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 6   jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)   callee is too large
                              @ 10   jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)   callee is too large
              s               @ 11   java.net.URL::hashCode (30 bytes)
                                @ 19   java.net.URLStreamHandler::hashCode (128 bytes)   no static binding
                              @ 19   java.net.URLStreamHandler::hashCode (128 bytes)   no static binding
                              @ 11   sun.misc.JarIndex::get (49 bytes)   callee is too large
                              @ 24   java.util.LinkedList::size (5 bytes)
                              @ 36   java.util.LinkedList::toArray (84 bytes)   callee is too large
                              @ 71   java.net.URL::<init> (8 bytes)
               !                @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 78   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 89   java.util.HashMap::get (23 bytes)   no static binding
                              @ 108  sun/misc/URLClassPath$JarLoader$3::<init> (not loaded)   not inlineable
                              @ 115   java.security.AccessController::doPrivileged (0 bytes)   native method
               !              @ 125   sun.misc.URLClassPath$JarLoader::getIndex (22 bytes)
               !                @ 1   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                                @ 13  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 139   java.lang.String::lastIndexOf (11 bytes)
                                @ 7   java.lang.String::lastIndexOf (25 bytes)
                                  @ 21   java.lang.String::lastIndexOf (151 bytes)   callee is too large
                              @ 167   java.lang.String::substring (79 bytes)   callee is too large
                              @ 170   sun.misc.JarIndex::merge (113 bytes)   callee is too large
                              @ 181   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 201   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 204   java.util.Set::add (0 bytes)   no static binding
               !              @ 226   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 240  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 250   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                                  @ 16   java.util.jar.JarFile$JarFileEntry::<init> (11 bytes)
                                    @ 7   java.util.jar.JarEntry::<init> (6 bytes)
                                      @ 2   java.util.zip.ZipEntry::<init> (146 bytes)   callee is too large
               !              @ 266   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 273   sun.misc.URLClassPath$JarLoader::validIndex (94 bytes)   callee is too large
                              @ 285  sun/misc/InvalidJarIndexException::<init> (not loaded)   not inlineable
               !              @ 302   sun.misc.URLClassPath$JarLoader::getIndex (22 bytes)
               !                @ 1   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                                @ 13  java/lang/InternalError::<init> (not loaded)   not inlineable
               !              @ 316   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
                              @ 336   sun.misc.JarIndex::get (49 bytes)   callee is too large
                              @ 345   java.util.LinkedList::size (5 bytes)
                              @ 9   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 21   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 68   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 93   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2   sun.misc.ProxyGenerator$ConstantPool::getUtf8 (18 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 14   sun.misc.ProxyGenerator$ConstantPool::getValue (91 bytes)   callee is too large
                              @ 14   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::<init> (21 bytes)
                                @ 2   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                  @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   sun.misc.ProxyGenerator$ConstantPool::getIndirect (67 bytes)   callee is too large
                              @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   sun.invoke.util.Wrapper::stackSlots (9 bytes)
                              @ 4   java.util.Iterator::next (0 bytes)   no static binding
                              @ 24   java.lang.invoke.LambdaForm$BasicType::basicTypeClass (5 bytes)
                              @ 42   java.lang.Enum::ordinal (5 bytes)
                              @ 108   sun.invoke.util.VerifyType::isNullConversion (157 bytes)   callee is too large
                              @ 116   java.lang.invoke.LambdaForm$BasicType::basicTypeWrapper (5 bytes)
                              @ 120   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 123   java.lang.invoke.InvokerBytecodeGenerator::emitPrimCast (328 bytes)   callee is too large
                              @ 76   sun.invoke.util.VerifyType::isNullConversion (157 bytes)   callee is too large
                              @ 99   java.lang.invoke.InvokerBytecodeGenerator::emitReferenceCast (184 bytes)   callee is too large
                              @ 131   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 136   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 140   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Enum::toString (5 bytes)
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 145   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 149   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Class::toString (47 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 152   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 155   java.lang.invoke.MethodHandleStatics::newInternalError (9 bytes)
                                @ 5  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 4   java.net.URLClassLoader::getAndVerifyPackage (109 bytes)   callee is too large
                              @ 18   java.net.URLClassLoader::definePackage (272 bytes)   callee is too large
               !m             @ 34   java.lang.ClassLoader::definePackage (77 bytes)   callee is too large
                              @ 47   java.net.URLClassLoader::getAndVerifyPackage (109 bytes)   callee is too large
                              @ 61   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 70   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 73   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 76  java/lang/AssertionError::<init> (not loaded)   not inlineable
              s               @ 1   sun.misc.Resource::cachedInputStream (20 bytes)
                                @ 9   sun.misc.Resource::getInputStream (0 bytes)   no static binding
                              @ 5   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   sun.misc.Resource::getContentLength (0 bytes)   no static binding
                              @ 20   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 71   java.lang.Math::min (11 bytes)
                              @ 92   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
               !              @ 115   java.io.InputStream::read (109 bytes)   no static binding
                              @ 125   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 149  java/io/EOFException::<init> (not loaded)   not inlineable
                              @ 163   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 212   java.io.InputStream::close (1 bytes)   no static binding
                              @ 231   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 234   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 181   java.io.InputStream::close (1 bytes)   no static binding
                              @ 200   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 203   java.lang.Thread::interrupt (56 bytes)   callee is too large
              s               @ 5   java.util.Vector::addElement (38 bytes)   callee is too large
                              @ 11   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 41   java.lang.String::length (6 bytes)
                              @ 44   java.lang.String::substring (79 bytes)   callee is too large
                              @ 55   java.net.URL::getFile (5 bytes)
                              @ 64   java.lang.String::length (6 bytes)
                              @ 74   java.lang.String::substring (79 bytes)   callee is too large
                              @ 79   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 88   java.lang.String::substring (79 bytes)   callee is too large
               !              @ 99   sun.net.www.protocol.jar.Handler::parseAbsoluteSpec (93 bytes)   callee is too large
                              @ 115   sun.net.www.protocol.jar.Handler::parseContextSpec (154 bytes)   callee is too large
                              @ 122   sun.net.www.protocol.jar.Handler::indexOfBangSlash (52 bytes)   callee is too large
                              @ 132   java.lang.String::substring (79 bytes)   callee is too large
                              @ 141   java.lang.String::substring (56 bytes)   callee is too large
                              @ 150   sun.net.www.ParseUtil::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 159   sun.net.www.ParseUtil::canonizeString (195 bytes)   callee is too large
                              @ 168   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 173   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 178   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 181   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 197   java.net.URLStreamHandler::setURL (159 bytes)   callee is too large
                              @ 2   sun.misc.ProxyGenerator$ConstantPool::getUtf8 (18 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 14   sun.misc.ProxyGenerator$ConstantPool::getValue (91 bytes)   callee is too large
                              @ 8   sun.misc.ProxyGenerator$ConstantPool::getUtf8 (18 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 14   sun.misc.ProxyGenerator$ConstantPool::getValue (91 bytes)   callee is too large
                              @ 23   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::<init> (21 bytes)
                                @ 2   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                  @ 1   sun.misc.ProxyGenerator$ConstantPool$Entry::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 26   sun.misc.ProxyGenerator$ConstantPool::getIndirect (67 bytes)   callee is too large
                              @ 12   java.io.DataOutputStream::writeByte (14 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 23   java.io.DataOutputStream::writeUTF (7 bytes)
                                @ 2   java.io.DataOutputStream::writeUTF (435 bytes)   callee is too large
                              @ 41   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 52   java.lang.Integer::intValue (5 bytes)
                              @ 55   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
                              @ 73   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 84   java.lang.Float::floatValue (5 bytes)
                              @ 87   java.io.DataOutputStream::writeFloat (9 bytes)
                                @ 2   java.lang.Float::floatToIntBits (26 bytes)
                                  @ 1   java.lang.Float::floatToRawIntBits (0 bytes)   intrinsic
                                @ 5   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
                              @ 105   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 116   java.lang.Long::longValue (5 bytes)
                              @ 119   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
                              @ 139   java.io.DataOutputStream::writeDouble (9 bytes)
                                @ 2   java.lang.Double::doubleToLongBits (33 bytes)   callee is too large
                                @ 5   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
                              @ 150   java.lang.Double::doubleValue (5 bytes)
                              @ 153   java.io.DataOutputStream::writeDouble (9 bytes)
                                @ 2   java.lang.Double::doubleToLongBits (33 bytes)   callee is too large
                                @ 5   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
                              @ 167   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 172   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 179   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 182   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 185  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 5   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 13   java.io.DataOutputStream::writeShort (35 bytes)
                                @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 31   java.io.DataOutputStream::incCount (20 bytes)
                              @ 57   java.io.DataOutputStream::writeShort (35 bytes)
                                @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 31   java.io.DataOutputStream::incCount (20 bytes)
                              @ 1   java.lang.reflect.Method::getName (5 bytes)
                              @ 7   java.lang.reflect.Method::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 16   java.lang.String::equals (81 bytes)   callee is too large
               !              @ 42   sun.reflect.annotation.AnnotationInvocationHandler::equalsImpl (161 bytes)   callee is too large
                              @ 58  java/lang/AssertionError::<init> (not loaded)   not inlineable
                              @ 71   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 112   java.lang.String::equals (81 bytes)   callee is too large
                              @ 128   java.lang.String::equals (81 bytes)   callee is too large
                              @ 144   java.lang.String::equals (81 bytes)   callee is too large
                              @ 181   sun.reflect.annotation.AnnotationInvocationHandler::toStringImpl (142 bytes)   callee is too large
                              @ 186   sun.reflect.annotation.AnnotationInvocationHandler::hashCodeImpl (69 bytes)   callee is too large
                              @ 189   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 204   java.util.Map::get (0 bytes)   no static binding
                              @ 226  java/lang/annotation/IncompleteAnnotationException::<init> (not loaded)   not inlineable
                              @ 243   sun.reflect.annotation.ExceptionProxy::generateException (0 bytes)   not inlineable
                              @ 249   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 252   java.lang.Class::isArray (0 bytes)   native method
                              @ 260   java.lang.reflect.Array::getLength (0 bytes)   native method
                              @ 269   sun.reflect.annotation.AnnotationInvocationHandler::cloneArray (170 bytes)   callee is too large
                              @ 38   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
                              @ 52   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 27  java/lang/IndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2   java.io.DataOutputStream::writeUTF (435 bytes)   callee is too large
                              @ 2   java.lang.String::length (6 bytes)
                              @ 8   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 13   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 13   java.util.ArrayList::size (5 bytes)   accessor
                              @ 33   java.util.Stack::empty (13 bytes)   inline (hot)
              s                 @ 1   java.util.Vector::size (5 bytes)   accessor
              s               @ 47   java.util.Stack::pop (19 bytes)   executed < MinInliningThreshold times
                              @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   too big
                              @ 76   java.util.HashMap::containsKey (18 bytes)   executed < MinInliningThreshold times
               !              @ 87   sun.misc.URLClassPath::getLoader (29 bytes)   executed < MinInliningThreshold times
                              @ 94   sun.misc.URLClassPath$JarLoader::getClassPath (86 bytes)   too big
                               \-> TypeProfile (15/15 counts) = sun/misc/URLClassPath$JarLoader
               !m             @ 107   sun.misc.URLClassPath::push (46 bytes)   too big
                              @ 169   java.util.ArrayList::size (5 bytes)   accessor
              s               @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   too big
                              @ 182   java.util.ArrayList::add (29 bytes)   inline (hot)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                    @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   executed < MinInliningThreshold times
                              @ 193   java.util.HashMap::put (13 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                  @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                  @ 56   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                   \-> TypeProfile (747/800 counts) = java/util/HashMap
                                    @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 152   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                   \-> TypeProfile (358/364 counts) = java/util/HashMap
                                    @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                   \-> TypeProfile (236/238 counts) = java/util/HashMap
                                  @ 288   java.util.HashMap::resize (359 bytes)   too big
                                  @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   inline (hot)
                                   \-> TypeProfile (1105/1164 counts) = java/util/HashMap
                              @ 13   java.util.ArrayList::size (5 bytes)   accessor
                              @ 236   java.util.ArrayList::get (11 bytes)   inline (hot)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                              @ 5   java.util.ArrayList$Itr::<init> (26 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 10   sun.net.www.ParseUtil::encodePath (336 bytes)   inlining prohibited by policy
                              @ 13   java.net.URL::<init> (8 bytes)
               !                @ 4   java.net.URL::<init> (543 bytes)   callee is too large
               !              @ 24   sun.misc.URLClassPath::check (123 bytes)   callee is too large
                              @ 51   sun.misc.URLClassPath$JarLoader$2::<init> (26 bytes)
                                @ 22   sun.misc.Resource::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init>                              @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
 (1 bytes)
                              @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 59   java.security.cert.Certificate::equals (38 bytes)   not inlineable
               !              @ 118   java.security.cert.Certificate::equals (38 bytes)   not inlineable
                              @ 0   sun.misc.SharedSecrets::javaUtilJarAccess (18 bytes)
                                @ 11   sun.misc.Unsafe::ensureClassInitialized (0 bytes)   native method
                              @ 9   java.lang.String::replace (127 bytes)   callee is too large
                              @ 14   java.lang.String::concat (47 bytes)   callee is too large
                              @ 17   java.util.jar.JavaUtilJarAccessImpl::getTrustedAttributes (6 bytes)
                                @ 2   java.util.jar.Manifest::getTrustedAttributes (57 bytes)   callee is too large
                              @ 34   java.util.jar.Attributes::getValue (9 bytes)
                                @ 2   java.util.jar.Attributes::get (11 bytes)
                                  @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 45   java.util.jar.Manifest::getMainAttributes (5 bytes)
                              @ 57   java.util.jar.Attributes::getValue (9 bytes)
                                @ 2   java.util.jar.Attributes::get (11 bytes)
                                  @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 66   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 15   java.lang.String::toCharArray (25 bytes)   inline (hot)
                                @ 20   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 21   java.lang.String::length (6 bytes)   inline (hot)
                              @ 142   java.util.BitSet::get (69 bytes)   inline (hot)
                                @ 32   java.util.BitSet::checkInvariants (111 bytes)   too big
                                @ 36   java.util.BitSet::wordIndex (5 bytes)   inline (hot)
                              @ 332   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s!m             @ 84   sun.misc.URLClassPath::getLoader (243 bytes)   inline (hot)
                                @ 13   java.util.ArrayList::size (5 bytes)   accessor
                                @ 33   java.util.Stack::empty (13 bytes)   inline (hot)
              s                   @ 1   java.util.Vector::size (5 bytes)   accessor
              s                 @ 47   java.util.Stack::pop (19 bytes)   executed < MinInliningThreshold times
                                @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   too big
                                @ 76   java.util.HashMap::containsKey (18 bytes)   executed < MinInliningThreshold times
               !                @ 87   sun.misc.URLClassPath::getLoader (29 bytes)   executed < MinInliningThreshold times
                                @ 94   sun.misc.URLClassPath$JarLoader::getClassPath (86 bytes)   too big
                                 \-> TypeProfile (15/15 counts) = sun/misc/URLClassPath$JarLoader
               !m               @ 107   sun.misc.URLClassPath::push (46 bytes)   too big
                                @ 169   java.util.ArrayList::size (5 bytes)   accessor
              s                 @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   too big
                                @ 182   java.util.ArrayList::add (29 bytes)   inline (hot)
                                  @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                    @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                      @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                    @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                      @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                        @ 28   java.util.ArrayList::hugeCapacity (26 bytes)   never executed
                                        @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                          @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                @ 193   java.util.HashMap::put (13 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                    @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 56   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                     \-> TypeProfile (1015/1112 counts) = java/util/HashMap
                                      @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 152   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                     \-> TypeProfile (483/494 counts) = java/util/HashMap
                                      @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                     \-> TypeProfile (244/260 counts) = java/util/HashMap
                                    @ 288   java.util.HashMap::resize (359 bytes)   too big
                                    @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   inline (hot)
                                     \-> TypeProfile (1498/1606 counts) = java/util/HashMap
                                @ 13   java.util.ArrayList::size (5 bytes)   accessor
                                @ 236   java.util.ArrayList::get (11 bytes)   inline (hot)
                                  @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                  @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                              @ 8   java.lang.Class::isArray (0 bytes)   native method
                              @ 15   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 23   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 38   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 43   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 69   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 74   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 83   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 95  sun/invoke/util/VerifyAccess$1::<init> (not loaded)   not inlineable
                              @ 98   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 9   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 17   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.ClassWriter::newUTF8 (70 bytes)   callee is too large
                              @ 36   jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)   callee is too large
                              @ 59   jdk.internal.org.objectweb.asm.Item::<init> (66 bytes)   callee is too large
                              @ 65   jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)   callee is too large
                              @ 17   java.lang.invoke.MethodType::equals (31 bytes)
                                @ 19   java.util.Arrays::equals (78 bytes)   callee is too large
                              @ 19   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 4   java.util.zip.ZipEntry::<init> (43 bytes)   callee is too large
                              @ 12   java.util.zip.ZipFile::getEntryFlag (0 bytes)   native method
                              @ 33   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                              @ 57   java.util.zip.ZipCoder::isUTF8 (5 bytes)
                              @ 86   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   callee is too large
                              @ 106   java.util.zip.ZipCoder::toString (190 bytes)   callee is too large
                              @ 115   java.util.zip.ZipFile::getEntryTime (0 bytes)   native method
                              @ 124   java.util.zip.ZipFile::getEntryCrc (0 bytes)   native method
                              @ 133   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
                              @ 142   java.util.zip.ZipFile::getEntryCSize (0 bytes)   native method
                              @ 151   java.util.zip.ZipFile::getEntryMethod (0 bytes)   native method
                              @ 161   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                              @ 165   java.util.zip.ZipEntry::setExtra0 (360 bytes)   callee is too large
                              @ 170   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                              @ 193   java.util.zip.ZipCoder::isUTF8 (5 bytes)
                              @ 222   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   callee is too large
                              @ 242   java.util.zip.ZipCoder::toString (190 bytes)   callee is too large
                              @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 16   java.lang.Throwable::fillInStackTrace (0 bytes)   native method
                              @ 3   java.lang.ReflectiveOperationException::<init> (7 bytes)
                              @ 10   java.lang.String::endsWith (17 bytes)   inline (hot)
                                @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 35   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 3   java.lang.Exception::<init> (7 bytes)
                                  @ 3   java.lang.Throwable::<init> (39 bytes)   callee is too large
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
                              @ 1   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   java.lang.String::length (6 bytes)
                              @ 17   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 22   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.Object::<init> (1 bytes)
              s               @ 24   java.lang.Throwable::fillInStackTrace (29 bytes)
                                @ 16   java.lang.Throwable::fillInStackTrace (0 bytes)   native method
                              @ 11   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 27   java.util.jar.JarFile::getManEntry (83 bytes)   callee is too large
               !              @ 44   java.util.jar.JarFile::getBytes (96 bytes)   callee is too large
                              @ 61  java/util/jar/JarVerifier::<init> (not loaded)   not inlineable
                              @ 80   java.io.ByteArrayInputStream::<init> (26 bytes)
                                @ 1   java.io.InputStream::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 83   java.util.jar.Manifest::<init> (37 bytes)   callee is too large
               !m             @ 96   java.util.zip.ZipFile::getInputStream (304 bytes)   callee is too large
                              @ 99   java.util.jar.Manifest::<init> (7 bytes)
                                @ 3   java.util.jar.Manifest::<init> (37 bytes)   callee is too large
                              @ 109   java.lang.ref.SoftReference::<init> (13 bytes)
                                @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 4   java.lang.String::length (6 bytes)
                              @ 11   java.net.URL::getAuthority (5 bytes)
                              @ 18   java.net.URL::getAuthority (5 bytes)
                              @ 21   java.lang.String::length (6 bytes)
                              @ 30   java.net.URL::getAuthority (5 bytes)
                              @ 33   java.lang.String::length (6 bytes)
                              @ 40   java.net.URL::getPath (5 bytes)
                              @ 48   java.net.URL::getPath (5 bytes)
                              @ 51   java.lang.String::length (6 bytes)
                              @ 57   java.net.URL::getQuery (5 bytes)
                              @ 66   java.net.URL::getQuery (5 bytes)
                              @ 69   java.lang.String::length (6 bytes)
                              @ 76   java.net.URL::getRef (5 bytes)
                              @ 85   java.net.URL::getRef (5 bytes)
                              @ 88   java.lang.String::length (6 bytes)
                              @ 99   java.lang.StringBuffer::<init> (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 105   java.net.URL::getProtocol (5 bytes)
              s               @ 108   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
              s               @ 115   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 120   java.net.URL::getAuthority (5 bytes)
                              @ 127   java.net.URL::getAuthority (5 bytes)
                              @ 130   java.lang.String::length (6 bytes)
              s               @ 139   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 145   java.net.URL::getAuthority (5 bytes)
              s               @ 148   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 153   java.net.URL::getPath (5 bytes)
                              @ 161   java.net.URL::getPath (5 bytes)
              s               @ 164   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 169   java.net.URL::getQuery (5 bytes)
              s               @ 178   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 184   java.net.URL::getQuery (5 bytes)
              s               @ 187   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 192   java.net.URL::getRef (5 bytes)
              s               @ 201   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 207   java.net.URL::getRef (5 bytes)
              s               @ 210   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
              s               @ 215   java.lang.StringBuffer::toString (36 bytes)   callee is too large
                              @ 2   java.lang.AbstractStringBuilder::append (29 bytes)   inline (hot)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
                              @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 5   java.lang.String::replace (127 bytes)   callee is too large
                              @ 220   java.util.HashMap$TreeNode::split (218 bytes)   not inlineable
                              @ 1   java.util.AbstractList::<init> (10 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 32  java/lang/ArrayIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 19   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 4   java.lang.reflect.ReflectAccess::copyMethod (5 bytes)
                                @ 1   java.lang.reflect.Method::copy (84 bytes)   callee is too large
                              @ 1   java.lang.reflect.Method::copy (84 bytes)   callee is too large
                              @ 5   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 8   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 9   java.lang.Class::isArray (0 bytes)   native method
                              @ 16   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 24   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 33   sun.reflect.misc.ReflectUtil::isVMAnonymousClass (19 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::indexOf (7 bytes)
                                  @ 3   java.lang.String::indexOf (25 bytes)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 42   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 47   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 58   sun.invoke.util.VerifyAccess::isSamePackage (114 bytes)   callee is too large
                              @ 67   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 70   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 100   sun.invoke.util.VerifyAccess::isSamePackage (114 bytes)   callee is too large
                              @ 7   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 26   java.lang.reflect.Member::getDeclaringClass (0 bytes)   not inlineable
                              @ 38   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 45   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 54   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 1   sun.invoke.util.Wrapper::forBasicType (16 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 4   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                              @ 16   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 24   java.lang.Class::isArray (0 bytes)   native method
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 49   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 56   java.lang.String::replace (127 bytes)   callee is too large
                              @ 59   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 70   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 11   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 16   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 43   java.lang.Object::equals (11 bytes)   no static binding
                              @ 6   java.io.InputStream::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   java.util.zip.ZipFile::access$1100 (5 bytes)
                                @ 1   java.util.zip.ZipFile::getEntryCSize (0 bytes)   native method
                              @ 29   java.util.zip.ZipFile::access$1200 (5 bytes)
                                @ 1   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
                              @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1   java.util.zip.ZipFile::getEntryCSize (0 bytes)   native method
                              @ 1   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
                              @ 1   java.nio.charset.CharsetDecoder::implReset (1 bytes)
                              @ 12   java.nio.charset.Charset::newDecoder (0 bytes)   no static binding
                              @ 18   java.nio.charset.CharsetDecoder::onMalformedInput (26 bytes)
                                @ 21   java.nio.charset.CharsetDecoder::implOnMalformedInput (1 bytes)
                              @ 24   java.nio.charset.CharsetDecoder::onUnmappableCharacter (26 bytes)
                                @ 21   java.nio.charset.CharsetDecoder::implOnUnmappableCharacter (1 bytes)
                              @ 9   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 14   java.util.zip.InflaterInputStream::close (34 bytes)
               !m               @ 18   java.util.zip.Inflater::end (50 bytes)   callee is too large
                                @ 25   java.io.InputStream::close (1 bytes)   no static binding
                              @ 21   java.util.zip.ZipFile::access$000 (5 bytes)
                              @ 31   java.util.zip.ZipFile::access$000 (5 bytes)
                              @ 35   java.util.Map::remove (0 bytes)   no static binding
                              @ 63   java.util.zip.ZipFile::access$100 (6 bytes)
               !m               @ 2   java.util.zip.ZipFile::releaseInflater (41 bytes)   callee is too large
               !m             @ 18   java.util.zip.Inflater::end (50 bytes)   callee is too large
                              @ 25   java.io.InputStream::close (1 bytes)   no static binding
               !m             @ 2   java.util.zip.ZipFile::releaseInflater (41 bytes)   callee is too large
               !m             @ 2   java.util.zip.Inflater::ended (32 bytes)
                                @ 11   java.util.zip.ZStreamRef::address (5 bytes)
               !m             @ 9   java.util.zip.Inflater::reset (69 bytes)   callee is too large
                              @ 24   java.util.Deque::add (0 bytes)   not inlineable
                              @ 8   java.util.zip.Inflater::ensureOpen (47 bytes)   callee is too large
                              @ 15   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 18   java.util.zip.Inflater::reset (0 bytes)   native method
                              @ 2   java.util.ArrayDeque::addLast (53 bytes)   callee is too large
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 49   java.util.ArrayDeque::doubleCapacity (108 bytes)   callee is too large
                              @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 9   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 12   java.lang.Character::isWhitespace (5 bytes)
                                @ 1   java.lang.Character::isWhitespace (9 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   inline (hot)
                                @ 10   java.lang.String::endsWith (17 bytes)   inline (hot)
                                  @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 35   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   inline (hot)
                                @ 12   sun.misc.URLClassPath$JarLoader$1::<init> (10 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 19   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 28   java.security.PrivilegedActionException::getException (5 bytes)   exception method
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)   inline (hot)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)   inline (hot)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   inline (hot)
                                    @ 22   java.util.zip.ZipFile::ensureOpen (37 bytes)   inline (hot)
                                    @ 34   java.util.zip.ZipCoder::getBytes (192 bytes)   inline (hot)
                                      @ 1   java.util.zip.ZipCoder::encoder (35 bytes)   inline (hot)
                                      @ 4   java.nio.charset.CharsetEncoder::reset (11 bytes)   inline (hot)
                                        @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)   inline (hot)
                                      @ 9   java.lang.String::toCharArray (25 bytes)   inline (hot)
                                        @ 20   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 17   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)   inline (hot)
                                      @ 62   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   hot method too big
                                      @ 89   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 38   java.util.zip.ZipFile::getEntry (0 bytes)   native method
                                    @ 57   java.util.zip.ZipFile::getZipEntry (251 bytes)   inline (hot)
                                      @ 4   java.util.zip.ZipEntry::<init> (43 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 12   java.util.zip.ZipFile::getEntryFlag (0 bytes)   native method
                                      @ 33   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 57   java.util.zip.ZipCoder::isUTF8 (5 bytes)   accessor
                                      @ 86   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   too big
                                      @ 106   java.util.zip.ZipCoder::toString (190 bytes)   too big
                                      @ 115   java.util.zip.ZipFile::getEntryTime (0 bytes)   native method
                                      @ 124   java.util.zip.ZipFile::getEntryCrc (0 bytes)   native method
                                      @ 133   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
                                      @ 142   java.util.zip.ZipFile::getEntryCSize (0 bytes)   native method
                                      @ 151   java.util.zip.ZipFile::getEntryMethod (0 bytes)   native method
                                      @ 161   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 165   java.util.zip.ZipEntry::setExtra0 (360 bytes)   too big
                                      @ 170   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 193   java.util.zip.ZipCoder::isUTF8 (5 bytes)   accessor
                                      @ 222   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   too big
                                      @ 242   java.util.zip.ZipCoder::toString (190 bytes)   too big
                                    @ 76   java.util.zip.ZipFile::freeEntry (0 bytes)   native method
                                  @ 16   java.util.jar.JarFile$JarFileEntry::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.jar.JarEntry::<init> (6 bytes)   inline (hot)
                                      @ 2   java.util.zip.ZipEntry::<init> (146 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 45   java.util.Objects::requireNonNull (15 bytes)   inline (hot)
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   inline (hot)
                                @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                                @ 10   sun.net.www.ParseUtil::encodePath (336 bytes)   already compiled into a medium method
                                @ 13   java.net.URL::<init> (8 bytes)   inline (hot)
               !                  @ 4   java.net.URL::<init> (543 bytes)   hot method too big
               !                @ 24   sun.misc.URLClassPath::check (123 bytes)   too big
                                @ 51   sun.misc.URLClassPath$JarLoader$2::<init> (26 bytes)   inline (hot)
                                  @ 22   sun.misc.Resource::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 71   java.util.HashSet::<init> (16 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 9   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   hot method too big
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::isWhitespace (0 bytes)   no static binding
               !              @ 19   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 93   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 99   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 104   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                              @ 111   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
                              @ 5   java.util.Arrays$ArrayList::<init> (16 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 6   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.util.AbstractList::<init> (10 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 9   sun.reflect.misc.ReflectUtil::isNonPublicProxyClass (51 bytes)   callee is too large
                              @ 16   java.lang.Class::getInterfaces (41 bytes)   callee is too large
                              @ 47   java.lang.ClassLoader::checkPackageAccess (122 bytes)   callee is too large
                              @ 58   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 67   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 88  java/lang/ClassLoader$1::<init> (not loaded)   not inlineable
                              @ 103   java.security.AccessControlContext::<init> (153 bytes)   callee is too large
                              @ 106   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 115   java.util.Set::add (0 bytes)   no static binding
                              @ 12   java.util.Collection::add (0 bytes)   no static binding
                              @ 11   java.lang.Class$3::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 1   java.lang.Object::<init> (1 bytes)
               !m             @ 2   java.lang.ClassLoader::getPackage (118 bytes)   callee is too large
                              @ 14   java.lang.Package::isSealed (13 bytes)
                              @ 23   java.lang.Package::isSealed (9 bytes)
                                @ 5   java.net.URL::equals (24 bytes)
                                  @ 20   java.net.URLStreamHandler::equals (45 bytes)   callee is too large
                              @ 37   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 42   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 46   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 51   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 54   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 57   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 68   java.net.URLClassLoader::isSealed (70 bytes)   callee is too large
                              @ 82   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 91   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 96   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 99   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 102   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s               @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                 @ 1   sun.misc.PerfCounter::get (9 bytes)
                                  @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
              s               @ 1   sun.misc.Resource::cachedInputStream (20 bytes)
                                @ 9   sun.misc.Resource::getInputStream (0 bytes)   no static binding
                              @ 16   sun.nio.ByteBuffered::getByteBuffer (0 bytes)   not inlineable
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 30  java/lang/Object::clone (not loaded)   not inlineable
               !m             @ 9   java.security.SecureClassLoader::getProtectionDomain (114 bytes)   callee is too large
                              @ 12   java.lang.ClassLoader::defineClass (43 bytes)   callee is too large
                              @ 20   java.util.HashMap::get (23 bytes)   no static binding
                              @ 33   java.security.SecureClassLoader::getPermissions (12 bytes)   no static binding
                              @ 47   java.security.ProtectionDomain::<init> (99 bytes)   callee is too large
                              @ 57   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.security.CodeSource::hashCode (17 bytes)
              s                     @ 11   java.net.URL::hashCode (30 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 4   java.util.jar.JarFile::access$200 (5 bytes)
                                @ 1   java.util.jar.JarFile::maybeInstantiateVerifier (96 bytes)   callee is too large
                              @ 16   java.lang.RuntimeException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 31   java.util.jar.JarFile::access$300 (5 bytes)
                              @ 42   java.util.jar.JarFile::access$300 (5 bytes)
                              @ 50  java/util/jar/JarVerifier::getCodeSigners (not loaded)   not inlineable
                              @ 71  java/lang/Object::clone (not loaded)   not inlineable
                              @ 1   java.net.URL::getFile (5 bytes)
                              @ 8   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 15   sun.net.www.protocol.jar.Handler::indexOfBangSlash (52 bytes)   callee is too large
                              @ 34   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 39   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.net.URL::toString (5 bytes)
                                    @ 1   java.net.URL::toExternalForm (9 bytes)
                                      @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 51   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 54   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 62   java.lang.String::substring (79 bytes)   callee is too large
                              @ 69   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 78   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 87   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 106   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 111   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 115   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.net.URL::toString (5 bytes)
                                    @ 1   java.net.URL::toExternalForm (9 bytes)
                                      @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 118   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 121   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 131   java.lang.String::substring (79 bytes)   callee is too large
                              @ 139   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 143   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 147   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 150   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 45   java.util.Objects::requireNonNull (15 bytes)
                                @ 9   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.String::length (6 bytes)
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 20   java.lang.String::length (6 bytes)
                              @ 32   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 3   java.lang.String::length (6 bytes)
                              @ 10   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 24   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 42   java.lang.String::substring (79 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 52   java.lang.String::substring (56 bytes)   callee is too large
                              @ 55   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 58   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 69   java.lang.String::substring (56 bytes)   callee is too large
                              @ 79   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 91   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 97   java.lang.String::substring (79 bytes)   callee is too large
                              @ 100   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 107   java.lang.String::substring (56 bytes)   callee is too large
                              @ 110   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 113   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 123   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 132   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 142   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 155   java.lang.String::substring (79 bytes)   callee is too large
                              @ 165   java.lang.String::substring (79 bytes)   callee is too large
                              @ 175   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 184   java.lang.String::length (6 bytes)
                              @ 189   java.lang.String::substring (79 bytes)   callee is too large
                              @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   java.lang.String::length (6 bytes)
                              @ 31   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 35   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 56   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 71   java.lang.String::substring (79 bytes)   callee is too large
                              @ 81   java.lang.String::substring (56 bytes)   callee is too large
                              @ 100   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 117   java.lang.String::substring (56 bytes)   callee is too large
                              @ 127   java.lang.String::substring (79 bytes)   callee is too large
                              @ 155   java.net.URLStreamHandler::setURL (40 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 45   java.net.URL::equals (24 bytes)
                                @ 20   java.net.URLStreamHandler::equals (45 bytes)   callee is too large
                              @ 56   java.security.CodeSource::matchCerts (254 bytes)   callee is too large
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 5   java.net.URL::getProtocol (5 bytes)
                              @ 12   java.net.URL::getProtocol (5 bytes)
                              @ 19   java.net.URL::getProtocol (5 bytes)
                              @ 23   java.net.URL::getProtocol (5 bytes)
                              @ 26   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 35   java.net.URL::getFile (5 bytes)
                              @ 39   java.net.URL::getFile (5 bytes)
                              @ 46   java.net.URL::getFile (5 bytes)
                              @ 53   java.net.URL::getFile (5 bytes)
                              @ 57   java.net.URL::getFile (5 bytes)
                              @ 60   java.lang.String::equals (81 bytes)   callee is too large
                              @ 69   java.net.URL::getPort (5 bytes)
                              @ 77   java.net.URL::getPort (5 bytes)
                              @ 87   java.net.URLStreamHandler::getDefaultPort (2 bytes)
                              @ 92   java.net.URL::getPort (5 bytes)
                              @ 100   java.net.URL::getPort (5 bytes)
                              @ 110   java.net.URLStreamHandler::getDefaultPort (2 bytes)
                              @ 126   java.net.URLStreamHandler::hostsEqual (75 bytes)   no static binding
                              @ 17  java/nio/BufferUnderflowException::<init> (not loaded)   not inlineable
                              @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)
                                @ 6   java.util.HashMap$Node::<init> (26 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)
                              @ 2   java.util.AbstractList$Itr::<init> (31 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 6   java.util.AbstractList$Itr::<init> (6 bytes)
                                @ 2   java.util.AbstractList$Itr::<init> (31 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 5   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   sun.invoke.util.Wrapper::hashPrim (30 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::length (6 bytes)
                                @ 17   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                                @ 22   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 11   java.lang.invoke.MethodHandle::type (5 bytes)
                              @ 19   java.lang.invoke.MemberName::getInvocationType (56 bytes)   callee is too large
                              @ 2   java.lang.invoke.LambdaForm::parameter (52 bytes)   callee is too large
                              @ 4   jdk.internal.org.objectweb.asm.ByteVector::<init> (13 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   jdk.internal.org.objectweb.asm.ClassWriter::newUTF8 (70 bytes)   callee is too large
                              @ 17   jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)   callee is too large
                              @ 21   jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)   callee is too large
                              @ 37   jdk.internal.org.objectweb.asm.AnnotationWriter::<init> (34 bytes)
                                @ 3   jdk.internal.org.objectweb.asm.AnnotationVisitor::<init> (7 bytes)
                                  @ 3   jdk.internal.org.objectweb.asm.AnnotationVisitor::<init> (35 bytes)   callee is too large
                              @ 90   java.util.logging.LogManager$2::<init> (15 bytes)
                                @ 11   java.lang.Object::<init> (1 bytes)
                              @ 93   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 65   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                              @ 98   sun.misc.VM::addFinalRefCount (24 bytes)
                              @ 105   java.lang.Object::notifyAll (0 bytes)   native method
               !              @ 90   sun.misc.Cleaner::clean (35 bytes)
              s                 @ 1   sun.misc.Cleaner::remove (89 bytes)   callee is too large
                                @ 12   java.lang.Runnable::run (0 bytes)   not inlineable
                                @ 27  sun/misc/Cleaner$1::<init> (not loaded)   not inlineable
                                @ 30   java.security.AccessController::doPrivileged (0 bytes)   native method
               !m             @ 109   java.lang.ref.ReferenceQueue::enqueue (119 bytes)   no static binding
                              @ 54   java.lang.Object::wait (6 bytes)
                                @ 2   java.lang.Object::wait (0 bytes)   native method
                              @ 77   java.lang.Thread::yield (0 bytes)   native method
                              @ 58   sun.misc.VM::addFinalRefCount (24 bytes)
               !m             @ 2   java.lang.ref.ReferenceQueue::remove (125 bytes)   callee is too large
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 24   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 49   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 59   java.lang.Object::wait (0 bytes)   native method
                              @ 63   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 84   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 36   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 40   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 49   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 54   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 61   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 71   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 92   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 98   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 4   java.io.File::getName (42 bytes)   callee is too large
                              @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 6   java.util.Comparator::lambda$comparing$77a9974f$1 (23 bytes)
                                @ 2   java.util.function.Function::apply (0 bytes)   no static binding
                                @ 12   java.util.function.Function::apply (0 bytes)   no static binding
                                @ 17   java.lang.Comparable::compareTo (0 bytes)   not inlineable
                              @ 2   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 12   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 17   java.lang.Comparable::compareTo (0 bytes)   not inlineable
                              @ 5   java.lang.String::compareTo (78 bytes)   callee is too large
               !m             @ 2   java.lang.ref.Finalizer::runFinalizer (62 bytes)   callee is too large
                              @ 5   java.lang.ref.Finalizer::hasBeenFinalized (14 bytes)
               !m             @ 15   java.lang.ref.Finalizer::remove (94 bytes)   callee is too large
                              @ 29   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 46   java.lang.System$2::invokeFinalize (5 bytes)
                                @ 1   java.lang.Object::finalize (1 bytes)   no static binding
                              @ 58   java.lang.ref.Reference::clear (6 bytes)
                              @ 1   java.lang.Object::finalize (1 bytes)   no static binding
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt                              @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                  @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
 (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 148   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 153   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 157   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 162   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 165   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 168   java.lang.invoke.MethodHandleStatics::newInternalError (9 bytes)
                                @ 5  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 4   java.io.File::getName (42 bytes)   inline (hot)
                                @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                  @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                    @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                  @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 5   java.lang.String::compareTo (78 bytes)   (intrinsic)
                              @ 75   java.util.regex.Matcher::getTextLength (10 bytes)
                                @ 4   java.lang.CharSequence::length (0 bytes)   no static binding
                              @ 86   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 10   java.lang.Character::codePointAt (51 bytes)   callee is too large
                              @ 18   java.util.regex.Pattern$CharProperty::isSatisfiedBy (0 bytes)   no static binding
                              @ 32   java.lang.Character::charCount (12 bytes)
                              @ 37   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 49   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 75   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 2   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 9   java.lang.Character::isHighSurrogate (18 bytes)
                              @ 20   java.lang.CharSequence::length (0 bytes)   no static binding
                              @ 30   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 37   java.lang.Character::isLowSurrogate (18 bytes)
                              @ 45   java.lang.Character::toCodePoint (10 bytes)
                              @ 11   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 44   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 61   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 81   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 95   java.util.StringTokenizer::isDelimiter (31 bytes)
                              @ 106   java.lang.Character::charCount (12 bytes)
                              @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 22   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 39   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 59   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 73   java.util.StringTokenizer::isDelimiter (31 bytes)
                              @ 84   java.lang.Character::charCount (12 bytes)
                              @ 116   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 133   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 150   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 164   java.util.StringTokenizer::isDelimiter (31 bytes)
                              @ 172   java.lang.Character::charCount (12 bytes)
                              @ 6   java.util.Comparator::lambda$comparing$77a9974f$1 (23 bytes)   inline (hot)
                                @ 2   org.springframework.core.io.support.PathMatchingResourcePatternResolver$$Lambda$15/1875308878::apply (8 bytes)   inline (hot)
                                 \-> TypeProfile (8183/8183 counts) = org/springframework/core/io/support/PathMatchingResourcePatternResolver$$Lambda$15
                                  @ 4   java.io.File::getName (42 bytes)   inline (hot)
                                    @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                      @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                        @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                      @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                          @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                          @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 12   org.springframework.core.io.support.PathMatchingResourcePatternResolver$$Lambda$15/1875308878::apply (8 bytes)   inline (hot)
                                  @ 4   java.io.File::getName (42 bytes)   inline (hot)
                                    @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                      @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                        @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                      @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                          @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                          @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 17   java.lang.String::compareTo (9 bytes)   inline (hot)
                                  @ 5   java.lang.String::compareTo (78 bytes)   (intrinsic)
                              @ 9   java.lang.String::length (6 bytes)
                              @ 18   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 26   org.springframework.util.AntPathMatcher::isWildcardChar (38 bytes)   callee is too large
                              @ 44   java.lang.String::length (6 bytes)
                              @ 57   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                              @ 9   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 18   java.lang.String::length (6 bytes)
                              @ 2   org.springframework.util.AntPathMatcher::getStringMatcher (98 bytes)   callee is too large
                              @ 7   org.springframework.util.AntPathMatcher$AntPathStringMatcher::matchStrings (130 bytes)   callee is too large
                              @ 12   java.lang.Boolean::booleanValue (5 bytes)
                              @ 23   java.util.Map::get (0 bytes)   no static binding
                              @ 45   org.springframework.util.AntPathMatcher$AntPathStringMatcher::<init> (282 bytes)   callee is too large
                              @ 57   java.util.Map::size (0 bytes)   no static binding
                              @ 68   org.springframework.util.AntPathMatcher::deactivatePatternCache (27 bytes)
                                @ 2   java.lang.Boolean::valueOf (14 bytes)
                                @ 12   java.util.Map::clear (0 bytes)   no static binding
                                @ 21   java.util.Map::clear (0 bytes)   no static binding
                              @ 78   java.lang.Boolean::booleanValue (5 bytes)
                              @ 90   java.util.Map::put (0 bytes)   no static binding
                              @ 6   java.util.StringTokenizer::skipDelimiters (116 bytes)   callee is too large
                              @ 27   java.util.StringTokenizer::skipDelimiters (116 bytes)   callee is too large
                              @ 58  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 73   java.util.StringTokenizer::scanToken (179 bytes)   callee is too large
                              @ 88   java.lang.String::substring (79 bytes)   callee is too large
                              @ 19   java.util.regex.Pattern::compile (406 bytes)   callee is too large
                              @ 38   java.util.regex.Matcher::<init> (84 bytes)   callee is too large
                              @ 75   java.util.regex.Matcher::getTextLength (10 bytes)   inline (hot)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 55   java.lang.Math::max (11 bytes)
                              @ 79   java.util.regex.Matcher::reset (83 bytes)   callee is too large
               !m             @ 5   java.util.regex.Pattern::matcher (44 bytes)   callee is too large
                              @ 10   java.util.regex.Matcher::matches (10 bytes)
                                @ 6   java.util.regex.Matcher::match (109 bytes)   callee is too large
                              @ 24   java.util.List::size (0 bytes)   no static binding
                              @ 30   java.util.regex.Matcher::groupCount (10 bytes)
                              @ 44   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 49   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 56   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.util.regex.Pattern::toString (5 bytes)
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 61   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 64   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 67   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 77   java.util.regex.Matcher::groupCount (10 bytes)
                              @ 91   java.util.List::get (0 bytes)   no static binding
                              @ 104   java.util.regex.Matcher::group (112 bytes)   callee is too large
                              @ 114   java.util.Map::put (0 bytes)   no static binding
                              @ 6   java.util.regex.Matcher::match (109 bytes)   callee is too large
                              @ 28   java.util.ArrayList::hugeCapacity (26 bytes)
                                @ 8   java.lang.OutOfMemoryError::<init> (5 bytes)   don't inline Throwable constructors
                              @ 38   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   no static binding
                              @ 28   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 35   java.util.HashMap::removeNode (291 bytes)   callee is too large
                              @ 16   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 31   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 77   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 108   java.util.regex.Pattern$Curly::match0 (174 bytes)   callee is too large
                              @ 141   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 170   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   org.springframework.util.AntPathMatcher::skipSeparator (30 bytes)
                                @ 9   java.lang.String::startsWith (72 bytes)   callee is too large
                                @ 18   java.lang.String::length (6 bytes)
                              @ 56   org.springframework.util.AntPathMatcher::skipSegment (75 bytes)   callee is too large
                              @ 65   java.lang.String::length (6 bytes)
                              @ 78   java.lang.String::length (6 bytes)
                              @ 88   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 91   org.springframework.util.AntPathMatcher::isWildcardChar (38 bytes)   callee is too large
                              @ 4   java.io.UnixFileSystem::hashCode (11 bytes)
                                @ 1   java.io.File::getPath (5 bytes)
                                @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 86   java.util.regex.Pattern$Slice::match (79 bytes)   inline (hot)
                              @ 86   java.util.regex.Pattern$Curly::match (86 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (913/996 counts) = java/util/regex/Pattern$Slice
                                @ 49   java.lang.String::charAt (29 bytes)   inline (hot)
                                 \-> TypeProfile (8793/8793 counts) = java/lang/String
                                @ 75   java.util.regex.Pattern$LastNode::match (45 bytes)   inline (hot)
                                 \-> TypeProfile (996/996 counts) = java/util/regex/Pattern$LastNode
                              @ 1   java.io.File::getPath (5 bytes)
                              @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 22   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 39   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 4   java.io.UnixFileSystem::resolve (27 bytes)
                                @ 2   java.io.UnixFileSystem::isAbsolute (13 bytes)
                                  @ 1   java.io.File::getPrefixLength (5 bytes)
                                @ 9   java.io.File::getPath (5 bytes)
                                @ 16   java.lang.System::getProperty (25 bytes)
                                  @ 1   java.lang.System::checkKey (34 bytes)   callee is too large
                                  @ 4   java.lang.System::getSecurityManager (4 bytes)
                                  @ 14   java.lang.SecurityManager::checkPropertyAccess (15 bytes)   not inlineable
                                  @ 21   java.util.Properties::getProperty (46 bytes)   callee is too large
                                @ 20   java.io.File::getPath (5 bytes)
                                @ 23   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                              @ 5   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 13   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 23   org.springframework.util.AntPathMatcher::tokenizePattern (91 bytes)   callee is too large
                              @ 43   org.springframework.util.AntPathMatcher::isPotentialMatch (116 bytes)   callee is too large
                              @ 53   org.springframework.util.AntPathMatcher::tokenizePath (14 bytes)
                                @ 10   org.springframework.util.StringUtils::tokenizeToStringArray (86 bytes)   callee is too large
                              @ 103   java.lang.String::equals (81 bytes)   callee is too large
                              @ 122   org.springframework.util.AntPathMatcher::matchStrings (11 bytes)
                                @ 2   org.springframework.util.AntPathMatcher::getStringMatcher (98 bytes)   callee is too large
                                @ 7   org.springframework.util.AntPathMatcher$AntPathStringMatcher::matchStrings (130 bytes)   callee is too large
                              @ 158   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 166   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 198   java.lang.String::equals (81 bytes)   callee is too large
                              @ 209   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 235   java.lang.String::equals (81 bytes)   callee is too large
                              @ 271   java.lang.String::equals (81 bytes)   callee is too large
                              @ 304   java.lang.String::equals (81 bytes)   callee is too large
                              @ 323   org.springframework.util.AntPathMatcher::matchStrings (11 bytes)
                                @ 2   org.springframework.util.AntPathMatcher::getStringMatcher (98 bytes)   callee is too large
                                @ 7   org.springframework.util.AntPathMatcher$AntPathStringMatcher::matchStrings (130 bytes)   callee is too large
                              @ 365   java.lang.String::equals (81 bytes)   callee is too large
                              @ 418   java.lang.String::equals (81 bytes)   callee is too large
                              @ 528   org.springframework.util.AntPathMatcher::matchStrings (11 bytes)
                                @ 2   org.springframework.util.AntPathMatcher::getStringMatcher (98 bytes)   callee is too large
                                @ 7   org.springframework.util.AntPathMatcher$AntPathStringMatcher::matchStrings (130 bytes)   callee is too large
                              @ 599   java.lang.String::equals (81 bytes)   callee is too large
                              @ 49   java.lang.String::charAt (29 bytes)   inline (hot)
                               \-> TypeProfile (20570/20570 counts) = java/lang/String
                              @ 75   java.util.regex.Pattern$LastNode::match (45 bytes)   inline (hot)
                               \-> TypeProfile (2329/2329 counts) = java/util/regex/Pattern$LastNode
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 22   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 34   java.lang.String::length (6 bytes)
                              @ 40   java.lang.String::length (6 bytes)
                              @ 44   java.lang.String::length (6 bytes)
                              @ 59   java.lang.StringBuilder::<init> (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                                            @ 9   java.lang.String::length (6 bytes)   inline (hot)
                              @ 18   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 26   org.springframework.util.AntPathMatcher::isWildcardChar (38 bytes)   inline (hot)
                              @ 44   java.lang.String::length (6 bytes)   inline (hot)
                              @ 57   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 9   java.lang.String::length (6 bytes)   inline (hot)
    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 68   java.lang.String::length (6 bytes)
                              @ 83   java.lang.String::substring (79 bytes)   callee is too large
                              @ 86   java.lang.StringBuilder::append (8 bytes)
                              @ 10   java.lang.Character::codePointAt (51 bytes)   inline (hot)
                                @ 2   java.lang.String::charAt (29 bytes)   inline (hot)
                                 \-> TypeProfile (6365/6365 counts) = java/lang/String
                                @ 9   java.lang.Character::isHighSurrogate (18 bytes)   inline (hot)
                              @ 18   java.util.regex.Pattern$Dot::isSatisfiedBy (34 bytes)   inline (hot)
                               \-> TypeProfile (6332/6332 counts) = java/util/regex/Pattern$Dot
                              @ 32   java.lang.Character::charCount (12 bytes)   inline (hot)
                              @ 37   java.util.regex.Pattern$Node::match (27 bytes)   inline (hot)
                               \-> TypeProfile (6332/6332 counts) = java/util/regex/Pattern$Node
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 93   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 107   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 119   java.lang.String::substring (56 bytes)   callee is too large
                              @ 122   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 128   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 15   java.util.StringTokenizer::<init> (8 bytes)
                                @ 4   java.util.StringTokenizer::<init> (52 bytes)   callee is too large
                              @ 24   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 31   java.util.StringTokenizer::hasMoreTokens (29 bytes)
                                @ 6   java.util.StringTokenizer::skipDelimiters (116 bytes)   callee is too large
                              @ 39   java.util.StringTokenizer::nextToken (92 bytes)   callee is too large
                              @ 50   java.lang.String::trim (77 bytes)   callee is too large
                              @ 61   java.lang.String::length (6 bytes)
                              @ 71   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                              @ 2   java.lang.String::charAt (29 bytes)   inline (hot)
                               \-> TypeProfile (7710/7710 counts) = java/lang/String
                              @ 9   java.lang.Character::isHighSurrogate (18 bytes)   inline (hot)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 82   org.springframework.util.StringUtils::toStringArray (14 bytes)
                                @ 5   java.util.ArrayList::toArray (60 bytes)   callee is too large
                              @ 26   java.lang.String::length (6 bytes)
                              @ 38   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 60   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 82   java.lang.Character::charCount (12 bytes)
                              @ 128   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 146   java.lang.Character::charCount (12 bytes)
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                    @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                      @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 18   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 21   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 39   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                              @ 29   java.io.UnixFileSystem::getBooleanAttributes (49 bytes)   callee is too large
                              @ 5   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 149   java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::equals (49 bytes)   too big
                              @ 149   java.lang.reflect.Proxy$Key1::equals (47 bytes)   too big
                               \-> TypeProfile (9/62 counts) = java/lang/reflect/Proxy$Key1
                               \-> TypeProfile (53/62 counts) = java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry
                              @ 12   java.lang.Boolean::booleanValue (5 bytes)
                              @ 23   java.util.Map::get (0 bytes)   no static binding
                              @ 38   org.springframework.util.AntPathMatcher::tokenizePath (14 bytes)
                                @ 10   org.springframework.util.StringUtils::tokenizeToStringArray (86 bytes)   callee is too large
                              @ 50   java.util.Map::size (0 bytes)   no static binding
                              @ 61   org.springframework.util.AntPathMatcher::deactivatePatternCache (27 bytes)
                                @ 2   java.lang.Boolean::valueOf (14 bytes)
                                @ 12   java.util.Map::clear (0 bytes)   no static binding
                                @ 21   java.util.Map::clear (0 bytes)   no static binding
                              @ 71   java.lang.Boolean::booleanValue (5 bytes)
                              @ 83   java.util.Map::put (0 bytes)   no static binding
                              @ 44   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 61   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 31   java.lang.String::length (6 bytes)
                              @ 48   java.util.StringTokenizer::setMaxDelimCodePoint (156 bytes)   callee is too large
                              @ 5   org.springframework.util.AntPathMatcher::doMatch (615 bytes)   callee is too large
                              @ 19   java.util.regex.Pattern$Node::match (27 bytes)   no static binding
                              @ 54   java.util.regex.Pattern$Curly::match0 (174 bytes)   callee is too large
                              @ 72   java.util.regex.Pattern$Curly::match1 (63 bytes)   callee is too large
                              @ 82   java.util.regex.Pattern$Curly::match2 (59 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 55   java.lang.Math::max (11 bytes)   (intrinsic)
                              @ 79   java.util.regex.Matcher::reset (83 bytes)   inline (hot)
                                @ 75   java.util.regex.Matcher::getTextLength (10 bytes)   inline (hot)
                                  @ 4   java.lang.String::length (6 bytes)   inline (hot)
                                   \-> TypeProfile (1212/1212 counts) = java/lang/String
                              @ 38   java.util.regex.Matcher::<init> (84 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 55   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 79   java.util.regex.Matcher::reset (83 bytes)   inline (hot)
                                  @ 75   java.util.regex.Matcher::getTextLength (10 bytes)   inline (hot)
                                    @ 4   java.lang.String::length (6 bytes)   inline (hot)
                                     \-> TypeProfile (1212/1212 counts) = java/lang/String
                              @ 73   java.util.StringTokenizer::scanToken (179 bytes)   inline (hot)
                                @ 22   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 39   java.lang.String::indexOf (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 88   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 23   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                               \-> TypeProfile (7840/7840 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
               !m             @ 5   java.util.regex.Pattern::matcher (44 bytes)   inline (hot)
                                @ 38   java.util.regex.Matcher::<init> (84 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 55   java.lang.Math::max (11 bytes)   (intrinsic)
                                  @ 79   java.util.regex.Matcher::reset (83 bytes)   inline (hot)
                                    @ 75   java.util.regex.Matcher::getTextLength (10 bytes)   inline (hot)
                                      @ 4   java.lang.String::length (6 bytes)   inline (hot)
                                       \-> TypeProfile (1212/1212 counts) = java/lang/String
                              @ 10   java.util.regex.Matcher::matches (10 bytes)   inline (hot)
                                @ 6   java.util.regex.Matcher::match (109 bytes)   inline (hot)
                                  @ 86   java.util.regex.Pattern$Slice::match (79 bytes)   inline (hot)
                                  @ 86   java.util.regex.Pattern$Curly::match (86 bytes)   inline (hot)
                                   \-> TypeProfile (304/3648 counts) = java/util/regex/Pattern$Curly
                                   \-> TypeProfile (3344/3648 counts) = java/util/regex/Pattern$Slice
                                    @ 54   java.util.regex.Pattern$Curly::match0 (174 bytes)   too big
                                    @ 72   java.util.regex.Pattern$Curly::match1 (63 bytes)   too big
                                    @ 82   java.util.regex.Pattern$Curly::match2 (59 bytes)   too big
                                    @ 49   java.lang.String::charAt (29 bytes)   inline (hot)
                                     \-> TypeProfile (32324/32324 counts) = java/lang/String
                                    @ 75   java.util.regex.Pattern$LastNode::match (45 bytes)   inline (hot)
                                     \-> TypeProfile (3641/3641 counts) = java/util/regex/Pattern$LastNode
                              @ 11  java/nio/file/InvalidPathException::<init> (not loaded)   not inlineable
                              @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                              @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)
                                @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 10   java.lang.Object::toString (36 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)
                                @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                                @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 15   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                              @ 25   java.util.LinkedList::node (65 bytes)   callee is too large
                              @ 28   java.util.LinkedList::linkBefore (63 bytes)   callee is too large
                              @ 2   java.lang.String::valueOf (14 bytes)
                                @ 10   java.lang.Object::toString (36 bytes)   no static binding
                              @ 5   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 21   java.lang.String::length (6 bytes)
                              @ 24   java.lang.StringBuilder::<init> (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.lang.String::length (6 bytes)
                              @ 40   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 48   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 58   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 69   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.util.LinkedList$ListItr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 5   java.util.LinkedList$ListItr::hasNext (20 bytes)
                              @ 15  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 18  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 12   java.util.LinkedList$Node::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                                            @ 31   java.util.regex.Pattern$CharProperty::match (56 bytes)   inline (hot)
                               \-> TypeProfile (816/816 counts) = java/util/regex/Pattern$Dot
                                @ 10   java.lang.Character::codePointAt (51 bytes)   inline (hot)
                                  @ 2   java.lang.String::charAt (29 bytes)   inline (hot)
                                   \-> TypeProfile (7710/7710 counts) = java/lang/String
                                  @ 9   java.lang.Character::isHighSurrogate (18 bytes)   inline (hot)
                                @ 18   java.util.regex.Pattern$Dot::isSatisfiedBy (34 bytes)   inline (hot)
                                @ 32   java.lang.Character::charCount (12 bytes)   inline (hot)
                                @ 37   java.util.regex.Pattern$Node::match (27 bytes)   inline (hot)
                                 \-> TypeProfile (7710/7710 counts) = java/util/regex/Pattern$Node
                              @ 77   java.util.regex.Pattern$CharProperty::match (56 bytes)   inline (hot)
                               \-> TypeProfile (17049/17049 counts) = java/util/regex/Pattern$Dot
                                @ 10   java.lang.Character::codePointAt (51 bytes)   inline (hot)
                                  @ 2   java.lang.String::charAt (29 bytes)   inline (hot)
                                   \-> TypeProfile (7710/7710 counts) = java/lang/String
                                  @ 9   java.lang.Character::isHighSurrogate (18 bytes)   inline (hot)
                                @ 18   java.util.regex.Pattern$Dot::isSatisfiedBy (34 bytes)   inline (hot)
                                @ 32   java.lang.Character::charCount (12 bytes)   inline (hot)
                                @ 37   java.util.regex.Pattern$Node::match (27 bytes)   inline (hot)
                                 \-> TypeProfile (7710/7710 counts) = java/util/regex/Pattern$Node
                              @ 141   java.util.regex.Pattern$Slice::match (79 bytes)   inline (hot)
                               \-> TypeProfile (5712/5712 counts) = java/util/regex/Pattern$Slice
                                @ 49   java.lang.String::charAt (29 bytes)   inline (hot)
                                 \-> TypeProfile (32324/32324 counts) = java/lang/String
                                @ 75   java.util.regex.Pattern$LastNode::match (45 bytes)   inline (hot)
                                 \-> TypeProfile (3641/3641 counts) = java/util/regex/Pattern$LastNode
@ 16   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 27   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 37   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 40   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 43   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 55   java.nio.Buffer::limit (62 bytes)   callee is too large
                              @ 61   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 82   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 91   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 96   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 100   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 105   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 108   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 111   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 39   sun.nio.fs.UnixPath::normalize (133 bytes)   callee is too large
                              @ 46   sun.nio.fs.UnixPath::checkNotNul (16 bytes)
                                @ 11  java/nio/file/InvalidPathException::<init> (not loaded)   not inlineable
                              @ 69   sun.nio.fs.UnixPath::normalize (133 bytes)   callee is too large
                              @ 1   java.nio.CharBuffer::array (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 6   java.nio.CharBuffer::arrayOffset (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 10   java.nio.Buffer::position (5 bytes)
                              @ 17   java.nio.CharBuffer::arrayOffset (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 21   java.nio.Buffer::limit (5 bytes)
                              @ 28   java.nio.ByteBuffer::array (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 34   java.nio.ByteBuffer::arrayOffset (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 38   java.nio.Buffer::position (5 bytes)
                              @ 45   java.nio.ByteBuffer::arrayOffset (35 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                                @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 49   java.nio.Buffer::limit (5 bytes)
                              @ 67   java.lang.Math::min (11 bytes)
                              @ 143   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
                                @ 4   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                  @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                    @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                    @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 18   java.nio.Buffer::position (43 bytes)                              @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
   callee is too large
                              @ 184   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
                                @ 4   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                  @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                    @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                    @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 18   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 229   java.lang.Character::isSurrogate (18 bytes)
                              @ 247  sun/nio/cs/Surrogate$Parser::<init> (not loaded)   not inlineable
                              @ 264  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 280   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                  @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                  @ 18   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 287  sun/nio/cs/Surrogate$Parser::error (not loaded)   not inlineable
                              @ 306   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
                                @ 4   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                  @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                    @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                    @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 18   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 409   sun.nio.cs.UTF_8$Encoder::overflow (11 bytes)
                                @ 4   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                  @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                    @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                    @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                    @ 18   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 482   sun.nio.cs.UTF_8::access$200 (8 bytes)
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   callee is too large
                                  @ 7   java.nio.Buffer::position (43 bytes)   callee is too large
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   callee is too large
                                  @ 18   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 30  sun/nio/fs/MacOSXNativeDispatcher::normalizepath (not loaded)   not inlineable
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 14   org.springframework.util.StringUtils::replace (132 bytes)   callee is too large
                              @ 21   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 38   java.lang.String::substring (79 bytes)   callee is too large
                              @ 45   java.lang.String::contains (20 bytes)
                                @ 2   java.lang.String::toString (2 bytes)
                                @ 7   java.lang.String::indexOf (7 bytes)
                                  @ 3   java.lang.String::indexOf (25 bytes)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 61   java.lang.String::substring (56 bytes)   callee is too large
                              @ 68   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 78   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 82   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 90   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 96   java.lang.String::substring (56 bytes)   callee is too large
                              @ 103   org.springframework.util.StringUtils::delimitedListToStringArray (7 bytes)
                                @ 3   org.springframework.util.StringUtils::delimitedListToStringArray (165 bytes)   callee is too large
                              @ 112   java.util.LinkedList::<init> (10 bytes)
                                @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 143   java.lang.String::equals (81 bytes)   callee is too large
                              @ 156   java.lang.String::equals (81 bytes)   callee is too large
                              @ 184   java.util.LinkedList::add (32 bytes)
                                @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)
                                  @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                                  @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                                @ 15   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                                @ 25   java.util.LinkedList::node (65 bytes)   callee is too large
                                @ 28   java.util.LinkedList::linkBefore (63 bytes)   callee is too large
                              @ 208   java.util.LinkedList::add (32 bytes)
                                @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)
                                  @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                                  @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                                @ 15   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                                @ 25   java.util.LinkedList::node (65 bytes)   callee is too large
                                @ 28   java.util.LinkedList::linkBefore (63 bytes)   callee is too large
                              @ 219   java.util.LinkedList::size (5 bytes)
                              @ 230   java.util.LinkedList::getLast (22 bytes)
                                @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 233   java.lang.String::equals (81 bytes)   callee is too large
                              @ 242   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 253   java.util.LinkedList::add (32 bytes)
                                @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)
                                  @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                                  @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                                @ 15   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                                @ 25   java.util.LinkedList::node (65 bytes)   callee is too large
                                @ 28   java.util.LinkedList::linkBefore (63 bytes)   callee is too large
                              @ 260   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 264   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 271   org.springframework.util.StringUtils::collectionToDelimitedString (10 bytes)
                                @ 6   org.springframework.util.StringUtils::collectionToDelimitedString (84 bytes)   callee is too large
                              @ 274   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 277   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 2   java.lang.String::valueOf (14 bytes)   inline (hot)
                                @ 10   java.lang.String::toString (2 bytes)   inline (hot)
                                 \-> TypeProfile (5214/5217 counts) = java/lang/String
                              @ 5   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 1   org.springframework.util.CollectionUtils::isEmpty (19 bytes)
                                                            @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
  @ 5   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 14   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 20   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 29   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.util.Iterator::next (0 bytes)   no static binding
                              @ 50   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 54   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 60   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 71   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 80   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 26   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 31   java.lang.String::isEmpty (14 bytes)
                              @ 43   java.lang.String::length (6 bytes)
                              @ 57   java.lang.String::substring (79 bytes)   callee is too large
                              @ 61   org.springframework.util.StringUtils::deleteAny (73 bytes)   callee is too large
                              @ 64   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 86   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 102   java.lang.String::substring (79 bytes)   callee is too large
                              @ 106   org.springframework.util.StringUtils::deleteAny (73 bytes)   callee is too large
                              @ 109   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::                              @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)   inline (hot)
                                @ 2   java.util.LinkedList::isPositionIndex (18 bytes)   inline (hot)
                              @ 15   java.util.LinkedList::linkLast (59 bytes)   inline (hot)
                                @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 25   java.util.LinkedList::node (65 bytes)   inline (hot)
                              @ 28   java.util.LinkedList::linkBefore (63 bytes)   inline (hot)
                                @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 118   java.lang.String::length (6 bytes)
                              @ 128   java.lang.String::length (6 bytes)
                              @ 137   java.lang.String::length (6 bytes)
                              @ 1   java.util.LinkedList$ListItr::checkForComodification (23 bytes)   inline (hot)
                              @ 5   java.util.LinkedList$ListItr::hasNext (20 bytes)   inline (hot)
                              @ 147   java.lang.String::substring (56 bytes)   callee is too large
                              @ 151   org.springframework.util.StringUtils::deleteAny (73 bytes)   callee is too large
                              @ 154   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 161   org.springframework.util.StringUtils::toStringArray (14 bytes)
                                @ 5   java.util.ArrayList::toArray (60 bytes)   callee is too large
                              @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                              @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 46   sun.nio.fs.UnixPath::checkNotNul (16 bytes)   inline (hot)
                              @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                              @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 16   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 23  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 35  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                              @ 15   java.nio.Bits::byteOrder (20 bytes)
               !              @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                  @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                              @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 12   java.util.LinkedList$Node::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 482   sun.nio.cs.UTF_8::access$200 (8 bytes)   inline (hot)
                                @ 4   sun.nio.cs.UTF_8::updatePositions (23 bytes)   inline (hot)
                                  @ 3   java.nio.CharBuffer::arrayOffset (35 bytes)   inline (hot)
                                  @ 7   java.nio.Buffer::position (43 bytes)   too big
                                  @ 14   java.nio.ByteBuffer::arrayOffset (35 bytes)   inline (hot)
                                  @ 18   java.nio.Buffer::position (43 bytes)   too big
                              @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   callee is too large
                              @ 4   java.util.HashMap$Node::getKey (5 bytes)
                              @ 7                                @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
 java.nio.HeapCharBuffer::<init> (14 bytes)
                                @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                  @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                              @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 2   java.util.AbstractList::listIterator (15 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.AbstractCollection::size (0 bytes)   no static binding
                              @ 1   java.util.AbstractList::listIterator (6 bytes)
                                @ 2   java.util.AbstractList::listIterator (15 bytes)   no static binding
                              @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)
                                @ 2   java.util.LinkedList::isPositionIndex (18 bytes)
                                @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 11   java.util.LinkedList$ListItr::<init> (47 bytes)   callee is too large
                              @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                              @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                              @ 4   sun.nio.fs.UnixPath::normalizeAndCheck (75 bytes)   inlining prohibited by policy
                              @ 7   sun.nio.fs.UnixPath::encode (198 bytes)   callee is too large
                              @ 10   sun.nio.fs.UnixPath::<init> (15 bytes)
                                @ 1   sun.nio.fs.AbstractPath::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 3   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                                 @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 46   sun.nio.fs.UnixPath::checkNotNul (16 bytes)   inline (hot)
             @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 30   sun.nio.fs.Util::jnuEncoding (4 bytes)
                              @ 33   sun.nio.cs.UTF_8::newEncoder (10 bytes)
                                @ 6   sun.nio.cs.UTF_8$Encoder::<init> (6 bytes)
                                  @ 2   sun.nio.cs.UTF_8$Encoder::<init> (16 bytes)
                                    @ 6   java.nio.charset.CharsetEncoder::<init> (16 bytes)
                                      @ 12   java.nio.charset.CharsetEncoder::<init> (113 bytes)   callee is too large
                              @ 39   java.nio.charset.CharsetEncoder::onMalformedInput (26 bytes)
                                @ 21   java.nio.charset.CharsetEncoder::implOnMalformedInput (1 bytes)
                              @ 45   java.nio.charset.CharsetEncoder::onUnmappableCharacter (26 bytes)
                                @ 21   java.nio.charset.CharsetEncoder::implOnUnmappableCharacter (1 bytes)
                              @ 57   java.lang.ref.SoftReference::<init> (13 bytes)
                                @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 60   java.lang.ThreadLocal::set (30 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                                @ 17   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                  @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                                @ 26   java.lang.ThreadLocal::createMap (14 bytes)
                                  @ 7   java.lang.ThreadLocal$ThreadLocalMap::<init> (53 bytes)   callee is too large
                              @ 65   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 68   sun.nio.fs.UnixFileSystem::normalizeNativePath (2 bytes)   no static binding
                              @ 78   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
                              @ 90   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 97   java.nio.CharBuffer::wrap (8 bytes)
               !                @ 4   java.nio.CharBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapCharBuffer::<init> (14 bytes)
                                    @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                      @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 103   java.nio.charset.CharsetEncoder::reset (11 bytes)
                                @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)
               !              @ 113   java.nio.charset.CharsetEncoder::encode (285 bytes)   callee is too large
                              @ 120   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 135   java.nio.charset.CharsetEncoder::flush (49 bytes)   callee is too large
                              @ 142   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 167  java/nio/file/InvalidPathException::<init> (not loaded)   not inlineable
                              @ 173   java.nio.Buffer::position (5 bytes)
                              @ 190   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                              @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                               \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                               \-> TypeProfile (384/412 counts) = java/util/HashMap
                              @ 288   java.util.HashMap::resize (359 bytes)   too big
               !              @ 4   java.nio.CharBuffer::wrap (20 bytes)
                                @ 7   java.nio.HeapCharBuffer::<init> (14 bytes)
                                  @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                    @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                                @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 45   java.nio.charset.CharsetEncoder::throwIllegalStateException (44 bytes)   callee is too large
                              @ 57   java.nio.charset.CharsetEncoder::encodeLoop (0 bytes)   no static binding
                              @ 73  java/nio/charset/CoderMalfunctionError::<init> (not loaded)   not inlineable
                              @ 85  java/nio/charset/CoderMalfunctionError::<init> (not loaded)   not inlineable
                              @ 91   java.nio.charset.CoderResult::isOverflow (14 bytes)
                              @ 102   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 113   java.nio.Buffer::hasRemaining (17 bytes)
                              @ 120   java.nio.Buffer::remaining (10 bytes)
                              @ 123   java.nio.charset.CoderResult::malformedForLength (8 bytes)
                                @ 4   java.nio.charset.CoderResult$Cache::access$200 (6 bytes)
              s                   @ 2   java.nio.charset.CoderResult$Cache::get (109 bytes)   callee is too large
                              @ 139   java.nio.charset.CoderResult::isMalformed (14 bytes)
                              @ 156   java.nio.charset.CoderResult::isUnmappable (14 bytes)
                              @ 210   java.nio.Buffer::remaining (10 bytes)
                              @ 230   java.nio.ByteBuffer::put (9 bytes)
                                @ 5   java.nio.ByteBuffer::put (55 bytes)   no static binding
                              @ 252   java.nio.Buffer::position (5 bytes)
                              @ 257   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                              @ 261   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 35   java.util.LinkedList::node (65 bytes)   callee is too large
                              @ 4   java.nio.Buffer::nextGetIndex (38 bytes)   callee is too large
                              @ 7   java.nio.HeapByteBuffer::ix (7 bytes)
                              @ 14   java.nio.Bits::getShort (18 bytes)
                                @ 6   java.nio.Bits::getShortB (16 bytes)
                                  @ 2   java.nio.HeapByteBuffer::_get (7 bytes)
                                  @ 9   java.nio.HeapByteBuffer::_get (7 bytes)
                                  @ 12   java.nio.Bits::makeShort (12 bytes)
                                @ 14   java.nio.Bits::getShortL (16 bytes)
                                  @ 4   java.nio.HeapByteBuffer::_get (7 bytes)
                                  @ 9   java.nio.HeapByteBuffer::_get (7 bytes)
                                  @ 12   java.nio.Bits::makeShort (12 bytes)
                              @ 6   java.nio.Bits::getShortB (16 bytes)
                                @ 2   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                                @ 9   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                                @ 12   java.nio.Bits::makeShort (12 bytes)
                              @ 14   java.nio.Bits::getShortL (16 bytes)
                                @ 4   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                                @ 9   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                                @ 12   java.nio.Bits::makeShort (12 bytes)
                              @ 2   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                              @ 9   java.nio.ByteBuffer::_get (0 bytes)   no static binding
                              @ 12   java.nio.Bits::makeShort (12 bytes)
                              @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                  @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                  @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                  @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                              @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                              @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                              @ 4   java.util.logging.LogManager::access$100 (4 bytes)
                              @ 21   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
               !m             @ 24   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   callee is too large
                              @ 157   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.util.AbstractMap::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 16   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 28   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 31   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 51   java.lang.Float::isNaN (12 bytes)
                              @ 91   java.util.HashMap::tableSizeFor (59 bytes)   callee is too large
                              @ 65   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 70   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 74   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (7 bytes)
                                  @ 2  sun/misc/FloatingDecimal::appendTo (not loaded)   not inlineable
                              @ 77   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 80   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 1   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 8   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 15   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 23   java.util.Set::add (0 bytes)   no static binding
                              @ 32   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 35   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 50   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)
               !                    @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                                    @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 53   org.springframework.util.MultiValueMap::add (0 bytes)   not inlineable
                              @ 59   java.lang.Class::getAnnotations (11 bytes)
                                @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                                @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                  @ 1   java.util.Map::values (0 bytes)   no static binding
                                  @ 9   java.util.Collection::toArray (0 bytes)   no static binding
               !              @ 90   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::recursivelyCollectMetaAnnotations (155 bytes)   callee is too large
                              @ 108   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 124   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 129   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 133   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 138   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 143   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 146   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 149   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 28   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 45   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 54   java.util.Collections::emptySet (4 bytes)
                              @ 67   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 79   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 89   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 100   java.util.Set::size (0 bytes)   no static binding
                              @ 170   org.springframework.util.ConcurrentReferenceHashMap$Segment::createReferenceArray (5 bytes)
                              @ 221   java.util.Set::contains (0 bytes)   no static binding
                              @ 230   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 244   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 251   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)
                              @ 267   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 277   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   callee is too large
                              @ 282   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)
                              @ 319   org.springframework.util.ConcurrentReferenceHashMap::getLoadFactor (5 bytes)
                              @ 331  java/lang/Math::max (not loaded)   not inlineable
                              @ 347   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 338   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 34   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 38   org.springframework.asm.ClassReader::readUtf (161 bytes)   callee is too large
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 25   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   callee is too large
                              @ 19   java.lang.Object::equals (11 bytes)   no static binding
                              @ 28   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 31   java.lang.Class::isArray (0 bytes)   native method
                              @ 38   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 41   java.lang.Class::isArray (0 bytes)   native method
                              @ 49   org.springframework.util.ObjectUtils::arrayEquals (290 bytes)   callee is too large
                              @ 1   java.util.AbstractCollection::size (0 bytes)   no static binding
                              @ 16   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 19   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 34   java.util.AbstractCollection::iterator (0 bytes)   no static binding
                              @ 51   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 82   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 92   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 114   java.util.Iterator::next (0 bytes)   no static binding
                              @ 128   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 139   java.util.AbstractCollection::finishToArray (83 bytes)   callee is too large
               !              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)
                              @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   callee is too large
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)
                              @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   callee is too large
                              @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)
                              @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 3   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 7   java.lang.System$2::blockedOn (6 bytes)
               !m               @ 2   java.lang.Thread::blockedOn (23 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
               !m             @ 2   java.lang.Thread::blockedOn (23 bytes)
                              @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.util.Map::values (0 bytes)   no static binding
                              @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 4   java.lang.invoke.MethodHandle::invokeBasic()L (0 bytes)   receiver not constant
                              @ 1   java.util.AbstractSet::<init> (5 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 7   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 10   java.lang.Class::isArray (0 bytes)   native method
                              @ 30   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 48   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 66   org.springframework.util.ObjectUtils::nullSafeHashCode (45 bytes)   callee is too large
                              @ 84   org.springframework.util.ObjectUtils::nullSafeHashCode (45 bytes)   callee is too large
                              @ 102   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 120   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 138   org.springframework.util.ObjectUtils::nullSafeHashCode (45 bytes)   callee is too large
                              @ 156   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 174   org.springframework.util.ObjectUtils::nullSafeHashCode (45 bytes)   callee is too large
                              @ 179   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 5   java.util.HashSet::<init> (18 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                  @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 1   java.util.logging.LogManager$LoggerContext::requiresDefaultLoggers (29 bytes)
                                @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                                @ 4   java.util.logging.LogManager::access$100 (4 bytes)
                                @ 21   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
               !m               @ 24   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                              @ 23   java.util.logging.LogManager::access$500 (5 bytes)
                              @ 53   java.util.logging.Logger::getName (5 bytes)
              s               @ 56   java.util.Hashtable::containsKey (65 bytes)   callee is too large
              s               @ 65   java.util.logging.LogManager$LoggerContext::addLocalLogger (248 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)
                                @ 6   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.HashMap::<init> (11 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 5   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.nio.Buffer::nextGetIndex (31 bytes)
                                @ 15  java/nio/BufferUnderflowException::<init> (not loaded)   not inlineable
                              @ 9   java.nio.HeapByteBuffer::ix (7 bytes)
                              @ 15  java/nio/BufferUnderflowException::<init> (not loaded)   not inlineable
                              @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                  @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 157   java.lang.String::<init> (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 23   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 28   java.lang.Class::getDeclaredMethods (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   callee is too large
                                @ 14   java.lang.Class::copyMethods (36 bytes)   callee is too large
                              @ 52   org.springframework.core.annotation.AnnotationUtils::isAttributeMethod (27 bytes)
                                @ 5   java.lang.reflect.Method::getParameterCount (6 bytes)
                                @ 12   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 60   org.springframework.util.ReflectionUtils::makeAccessible (36 bytes)   callee is too large
                              @ 66   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 83   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 26   java.lang.Class::createAnnotationData (192 bytes)   callee is too large
                              @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 2   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                              @ 2   java.util.HashMap::<init> (8 bytes)
                                @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 6   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 45   java.lang.Object::equals (11 bytes)   no static binding
                              @ 5   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                              @ 10   java.util.Map::computeIfAbsent (45 bytes)   no static binding
                              @ 21   java.util.List::add (0 bytes)   no static binding
                              @ 1   java.nio.channels.spi.AbstractInterruptibleChannel::isOpen (5 bytes)
                              @ 11  java/nio/channels/ClosedChannelException::<init> (not loaded)   not inlineable
                              @ 4   java.nio.ByteBuffer::get (0 bytes)   no static binding
                              @ 75   sun.reflect.annotation.AnnotationParser::parseAnnotation (9 bytes)
               !                @ 5   sun.reflect.annotation.AnnotationParser::parseAnnotation2 (284 bytes)   callee is too large
                              @ 87   sun.reflect.annotation.AnnotationParser::parseArray (226 bytes)   callee is too large
               !              @ 63   sun.reflect.annotation.AnnotationParser::parseClassValue (64 bytes)   callee is too large
               !              @ 56   sun.reflect.annotation.AnnotationParser::parseEnumValue (152 bytes)   callee is too large
                              @ 95   sun.reflect.annotation.AnnotationParser::parseConst (208 bytes)   callee is too large
                              @ 111   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 125   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 130   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 133   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 138   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 143   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 148   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 151   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 154   sun.reflect.annotation.AnnotationTypeMismatchExceptionProxy::<init> (10 bytes)   not inlineable
                              @ 13   java.nio.channels.spi.AbstractInterruptibleChannel$1::<init> (10 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 23   java.nio.channels.spi.AbstractInterruptibleChannel::blockedOn (13 bytes)
                                @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 7   java.lang.System$2::blockedOn (6 bytes)
               !m                 @ 2   java.lang.Thread::blockedOn (23 bytes)
                              @ 26   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 31   java.lang.Thread::isInterrupted (6 bytes)
                                @ 2   java.lang.Thread::isInterrupted (0 bytes)   native method
               !m             @ 42   java.nio.channels.spi.AbstractInterruptibleChannel$1::interrupt (65 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 10   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 13   sun.reflect.annotation.AnnotationType::invocationHandlerReturnType (82 bytes)   callee is too large
                              @ 22   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 25   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 29   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 32   java.lang.System$2::getConstantPool (5 bytes)
                                @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 38   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 41   sun.reflect.annotation.AnnotationParser::parseMemberValue (162 bytes)   callee is too large
                              @ 60   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 65   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 69   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.reflect.Method::toString (20 bytes)
                                    @ 1   java.lang.reflect.Modifier::methodModifiers (4 bytes)
                                    @ 5   java.lang.reflect.Method::isDefault (28 bytes)   callee is too large
               !                    @ 16   java.lang.reflect.Executable::sharedToString (102 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 75  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4   java.lang.String::length (6 bytes)
                              @ 12   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 26   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 30  sun/nio/fs/MacOSXNativeDispatcher::normalizepath (not loaded)   not inlineable
                              @ 33   java.lang.String::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 8   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 4   org.apache.commons.logging.LogFactory::getLog (5 bytes)
                                @ 1   org.apache.commons.logging.LogAdapter::createLog (56 bytes)   callee is too large
                              @ 2   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 187   org.springframework.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 174   org.springframework.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 157   org.springframework.asm.Type::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 195   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 104   org.springframework.asm.Type::getElementType (23 bytes)
                                @ 1   org.springframework.asm.Type::getDimensions (28 bytes)
                                  @ 12   java.lang.String::charAt (29 bytes)   callee is too large
                                @ 19   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 107   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 110   java.lang.StringBuilder::<init> (18 bytes)
                                @ 2   java.lang.String::length (6 bytes)
                                @ 8   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 115   org.springframework.asm.Type::getDimensions (28 bytes)
                                @ 12   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 126   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 137   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 153   java.lang.String::substring (79 bytes)   callee is too large
                              @ 160   java.lang.String::replace (127 bytes)   callee is too large
                              @ 168   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 13   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 57   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 102   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 142   java.lang.Object::equals (11 bytes)   no static binding
                              @ 188   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 196   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 225   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 245   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
                              @ 263   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 278   java.util.HashMap::treeifyBin (110 bytes)   callee is too large
                              @ 303   java.util.HashMap::afterNodeInsertion (1 bytes)   no static binding
                              @ 1   org.springframework.util.LinkedMultiValueMap::lambda$add$0 (8 bytes)
                                @ 4   java.util.LinkedList::<init> (10 bytes)
                                  @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   java.util.LinkedList::<init> (10 bytes)
                                @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                              @ 0   sun.nio.ch.NativeThread::current (0 bytes)   native method
                              @ 62   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 22   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 34                                @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                               \-> TypeProfile (4673/5127 counts) = java/util/LinkedHashMap
 java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 39   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 56   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 65   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 264   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 300   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 356   org.springframework.asm.ClassReader::readBootstrapMethodsAttribute (127 bytes)   callee is too large
                              @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                              @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                              @ 4   java.util.logging.LogManager::access$500 (5 bytes)
                              @ 36   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 1   java.nio.channels.spi.AbstractInterruptibleChannel::blockedOn (13 bytes)
                                @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                                @ 3   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 7   java.lang.System$2::blockedOn (6 bytes)
               !m                 @ 2   java.lang.Thread::blockedOn (23 bytes)
                              @ 14   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 26  java/nio/channels/ClosedByInterruptException::<init> (not loaded)   not inlineable
                              @ 45  java/nio/channels/AsynchronousCloseException::<init> (not loaded)   not inlineable
                              @ 2   java.lang.System::getSecurityManager (4 bytes)
                              @ 6   sun.misc.SharedSecrets::getJavaAWTAccess (12 bytes)
                              @ 19  sun/misc/JavaAWTAccess::getAppletContext (not loaded)   not inlineable
                              @ 48   java.util.WeakHashMap::<init> (9 bytes)
                                @ 5   java.util.WeakHashMap::<init> (133 bytes)   callee is too large
                              @ 60   java.util.WeakHashMap::get (77 bytes)   callee is too large
                              @ 77   java.util.logging.LogManager$LoggerContext::<init> (6 bytes)
                                @ 2   java.util.logging.LogManager$LoggerContext::<init> (34 bytes)   callee is too large
                              @ 88   java.util.WeakHashMap::put (162 bytes)   callee is too large
                              @ 8   sun.misc.VM::isBooted (4 bytes)
                              @ 24   sun.security.action.GetPropertyAction::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 27   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 40   java.lang.String::equals (81 bytes)   callee is too large
                              @ 15   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 63   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 98   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)
               !                @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                                @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 105   org.springframework.core.annotation.AnnotationUtils::synthesizeAnnotation (85 bytes)   callee is too large
                              @ 160   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)
               !                @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                                @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 176   org.springframework.core.annotation.AnnotationUtils::synthesizeAnnotationArray (54 bytes)   callee is too large
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)
                              @ 12   org.springframework.core.type.classreading.CachingMetadataReaderFactory::<init> (12 bytes)
                                @ 1   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::<init> (16 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 9   org.springframework.core.io.DefaultResourceLoader::<init> (36 bytes)   callee is too large
                                @ 8   org.springframework.core.type.classreading.CachingMetadataReaderFactory::setCacheLimit (49 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   callee is too large
                              @ 1   java.util.logging.LogManager$LoggerContext::requiresDefaultLoggers (29 bytes)
                                @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                                @ 4   java.util.logging.LogManager::access$100 (4 bytes)
                                @ 21   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
               !m               @ 24   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                              @ 9   java.util.logging.LogManager$LoggerContext::getRootLogger (8 bytes)
                                @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                                @ 4   java.util.logging.LogManager::access$500 (5 bytes)
                              @ 12   java.util.logging.LogManager$LoggerContext::ensureDefaultLogger (70 bytes)   callee is too large
                              @ 17   java.util.logging.LogManager$LoggerContext::getGlobalLogger (6 bytes)
                              @ 20   java.util.logging.LogManager$LoggerContext::ensureDefaultLogger (70 bytes)   callee is too large
                              @ 6   java.util.HashSet::<init> (18 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                  @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 5   org.apache.commons.logging.LogAdapter$JavaUtilLog::<init> (18 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 11   java.util.logging.Logger::getLogger (9 bytes)
                                  @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 5   java.util.logging.Logger::demandLogger (42 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   java.util.logging.Logger::getLogger (9 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 5   java.util.logging.Logger::demandLogger (42 bytes)   callee is too large
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 5   java.util.logging.Logger::demandLogger (42 bytes)   callee is too large
                              @ 1   java.nio.ByteBuffer::getShort (0 bytes)   no static binding
                              @ 94   sun.reflect.ConstantPool::getIntAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                              @ 98   java.lang.Byte::valueOf (10 bytes)
                              @ 104   sun.reflect.ConstantPool::getIntAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                              @ 108   java.lang.Character::valueOf (21 bytes)
                                @ 17   java.lang.Character::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 114   sun.reflect.ConstantPool::getDoubleAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getDoubleAt0 (0 bytes)   native method
                              @ 117   java.lang.Double::valueOf (9 bytes)
                                @ 5   java.lang.Double::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 123   sun.reflect.ConstantPool::getFloatAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getFloatAt0 (0 bytes)   native method
                              @ 126   java.lang.Float::valueOf (9 bytes)
                                @ 5   java.lang.Float::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 132   sun.reflect.ConstantPool::getIntAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                              @ 135   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 141   sun.reflect.ConstantPool::getLongAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getLongAt0 (0 bytes)   native method
                              @ 144   java.lang.Long::valueOf (36 bytes)   callee is too large
                              @ 150   sun.reflect.ConstantPool::getIntAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                              @ 154   java.lang.Short::valueOf (33 bytes)
                                @ 29   java.lang.Short::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 160   sun.reflect.ConstantPool::getIntAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                              @ 171   java.lang.Boolean::valueOf (14 bytes)
                              @ 177   sun.reflect.ConstantPool::getUTF8At (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                              @ 189   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 194   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 198   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 201   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 204  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 6   java.lang.Enum::ordinal (5 bytes)
                              @ 37  org/apache/commons/logging/LogAdapter$Log4jAdapter::createLog (not loaded)   not inlineable
                              @ 42  org/apache/commons/logging/LogAdapter$Slf4jAdapter::createLocationAwareLog (not loaded)   not inlineable
                              @ 47  org/apache/commons/logging/LogAdapter$Slf4jAdapter::createLog (not loaded)   not inlineable
                              @ 52   org.apache.commons.logging.LogAdapter$JavaUtilAdapter::createLog (9 bytes)
                                @ 5   org.apache.commons.logging.LogAdapter$JavaUtilLog::                              @ 12   java.lang.Math::min (11 bytes)   (intrinsic)
<init> (18 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.logging.Logger::getLogger (9 bytes)
                                    @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                    @ 5   java.util.logging.Logger::demandLogger (42 bytes)   callee is too large
                              @ 4   java.util.HashMap::isEmpty (13 bytes)
                              @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 26   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   callee is too large
                              @ 101   java.io.InputStream::available (2 bytes)   no static binding
                              @ 6   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)
                              @ 15   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 29   org.springframework.core.annotation.AnnotationUtils::getAttributeAliasMap (109 bytes)   callee is too large
                              @ 42   java.lang.invoke.LambdaForm$MH/1809787067::linkToTargetMethod (15 bytes)   force inline by annotation
                                @ 11   java.lang.invoke.LambdaForm$DMH/796684896::invokeStatic_L3II_L (22 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 18   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::get$Lambda (14 bytes)
                                    @ 10   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::<init> (32 bytes)   callee is too large
               !              @ 47   java.util.Map::forEach (81 bytes)   no static binding
                              @ 58   java.util.LinkedHashMap::entrySet (27 bytes)
                                @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 61   java.util.Set::iterator (0 bytes)   no static binding
                              @ 70   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 80   java.util.Iterator::next (0 bytes)   no static binding
                              @ 92   java.util.Map$Entry::getKey (0 bytes)   not inlineable
                              @ 106   java.util.HashSet::contains (9 bytes)
                                @ 5   java.util.HashMap::containsKey (18 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 119   java.util.Map$Entry::getValue (0 bytes)   not inlineable
                              @ 152   org.springframework.core.annotation.AnnotationUtils::adaptValue (182 bytes)   callee is too large
                              @ 155   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 1   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 14   org.springframework.core.annotation.AnnotationAttributes::<init> (29 bytes)
                                @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                 \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                 \-> TypeProfile (384/412 counts) = java/util/HashMap
                                @ 288   java.util.HashMap::resize (359 bytes)   too big
        @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 22   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 21   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   callee is too large
                              @ 24   java.util.List::iterator (0 bytes)   no static binding
                              @ 33   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 43   java.util.Iterator::next (0 bytes)   no static binding
                              @ 60   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 67   java.lang.reflect.Method::getDefaultValue (81 bytes)   callee is too large
                              @ 81   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   callee is too large
                              @ 93   org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 102   java.lang.reflect.Method::getName (5 bytes)
                              @ 110   org.springframework.core.annotation.AnnotationUtils::adaptValue (182 bytes)   callee is too large
                              @ 113   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 135   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
                              @ 142   org.springframework.core.annotation.AnnotationUtils::rethrowAnnotationConfigurationException (13 bytes)
                              @ 153   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 158   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 163   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.reflect.Method::toString (20 bytes)
                                    @ 1   java.lang.reflect.Modifier::methodModifiers (4 bytes)
                                    @ 5   java.lang.reflect.Method::isDefault (28 bytes)   callee is too large
               !                    @ 16   java.lang.reflect.Executable::sharedToString (102 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 166   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 171   java.lang.IllegalStateException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 1   org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor::visitEnd (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::registerDefaultValues (179 bytes)   callee is too large
                              @ 8   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)
                              @ 24   org.springframework.util.MultiValueMap::get (10 bytes)   not inlineable
                              @ 49   org.springframework.util.MultiValueMap::add (0 bytes)   not inlineable
                              @ 63   java.util.List::add (0 bytes)   no static binding
                              @ 69   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 72   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 79   java.lang.Class::getAnnotations (11 bytes)
                                @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                                @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                  @ 1   java.util.Map::values (0 bytes)   no static binding
                                  @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 84   org.springframework.util.ObjectUtils::isEmpty (15 bytes)
                              @ 94   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
               !              @ 129   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::recursivelyCollectMetaAnnotations (155 bytes)   callee is too large
                              @ 140   java.util.HashSet::isEmpty (8 bytes)
                                @ 4   java.util.HashMap::isEmpty (13 bytes)
                              @ 154   java.util.HashSet::size (8 bytes)
                                @ 4   java.util.HashMap::size (5 bytes)
                              @ 159   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 166   java.util.HashSet::iterator (13 bytes)
                                @ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                                @ 7   java.util.Set::iterator (0 bytes)   no static binding
                              @ 175   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 185   java.util.Iterator::next (0 bytes)   no static binding
                              @ 199   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 204   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 207   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 221   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 226   java.util.Map::put (0 bytes)   no static binding
                              @ 240   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 256   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 261   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1   java.lang.reflect.Method::getName (5 bytes)   accessor
                              @ 7   java.lang.reflect.Method::getParameterTypes (11 bytes)   inline (hot)
                                @ 4   java.lang.Object::clone (0 bytes)   native method
                                @ 4   java.lang.Object::clone (0 bytes)   (intrinsic)
                              @ 16   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 71   java.lang.String::hashCode (55 bytes)   inline (hot)
                              @ 144   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 128   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 112   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 204   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                               \-> TypeProfile (230/230 counts) = java/util/LinkedHashMap
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 6   java.util.HashMap::getNode (148 bytes)   too big
                                @ 25   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   too big
                              @ 249   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 252   java.lang.Class::isArray (0 bytes)   (intrinsic)
                              @ 260   java.lang.reflect.Array::getLength (0 bytes)   (intrinsic)
                              @ 269   sun.reflect.annotation.AnnotationInvocationHandler::cloneArray (170 bytes)   too big
                              @ 186   sun.reflect.annotation.AnnotationInvocationHandler::hashCodeImpl (69 bytes)   inline (hot)
                                @ 48   java.lang.String::hashCode (55 bytes)   too big
                                @ 58   sun.reflect.annotation.AnnotationInvocationHandler::memberValueHashCode (164 bytes)   too big
                              @ 189   java.lang.Integer::valueOf (32 bytes)   inline (hot)
                                @ 28   java.lang.Integer::<init> (10 bytes)   inline (hot)
                                  @ 1   java.lang.Number::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 181   sun.reflect.annotation.AnnotationInvocationHandler::toStringImpl (142 bytes)   too big
                              @ 265   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Class::toString (47 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 270   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 274   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 277   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 280   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                  @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                  @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                   \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                  @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                   \-> TypeProfile (384/412 counts) = java/util/HashMap
                                  @ 288   java.util.HashMap::resize (359 bytes)   too big
                              @ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                              @ 7   java.util.Set::iterator (0 bytes)   no static binding
                              @ 9  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 22  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 41  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1   java.util.logging.LogManager$LoggerContext::ensureInitialized (24 bytes)
                                @ 1   java.util.logging.LogManager$LoggerContext::requiresDefaultLoggers (29 bytes)
                                  @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                                  @ 4   java.util.logging.LogManager::access$100 (4 bytes)
                                  @ 21   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
               !m                 @ 24   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                                @ 9   java.util.logging.LogManager$LoggerContext::getRootLogger (8 bytes)
                                  @ 1   java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
                                  @ 4   java.util.logging.LogManager::access$500 (5 bytes)
                                @ 12   java.util.logging.LogManager$LoggerContext::ensureDefaultLogger (70 bytes)   callee is too large
                                @ 17   java.util.logging.LogManager$LoggerContext::getGlobalLogger (6 bytes)
                                @ 20   java.util.logging.LogManager$LoggerContext::ensureDefaultLogger (70 bytes)   callee is too large
              s               @ 9   java.util.Hashtable::get (69 bytes)   callee is too large
                              @ 23   java.lang.ref.Reference::get (5 bytes)   intrinsic
               !m             @ 35   java.util.logging.LogManager$LoggerWeakRef::dispose (123 bytes)   callee is too large
               !m             @ 9   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                              @ 2   java.util.logging.LogManager::getLogger (9 bytes)
               !m               @ 1   java.util.logging.LogManager::getUserContext (119 bytes)   callee is too large
              s                 @ 5   java.util.logging.LogManager$LoggerContext::findLogger (40 bytes)   callee is too large
                              @ 21   java.util.logging.Logger::<init> (61 bytes)   callee is too large
                              @ 29   java.util.logging.LogManager::addLogger (63 bytes)   callee is too large
                              @ 40   java.util.logging.LogManager::getLogger (9 bytes)
               !m               @ 1   java.util.logging.LogManager::getUserContext (119 bytes)   callee is too large
              s                 @ 5   java.util.logging.LogManager$LoggerContext::findLogger (40 bytes)   callee is too large
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 35   java.util.function.BiConsumer::accept (0 bytes)   no static binding
                              @ 60  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 14   org.springframework.asm.ClassReader::readByte (11 bytes)
                              @ 30   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 13   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.util.LinkedHashMap::<init> (11 bytes)
                                @ 2   java.util.HashMap::<init> (8 bytes)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
               !m             @ 1   java.util.logging.LogManager::getUserContext (119 bytes)   callee is too large
              s               @ 5   java.util.logging.LogManager$LoggerContext::findLogger (40 bytes)   callee is too large
                              @ 0   java.util.logging.LogManager::getLogManager (16 bytes)
               !m               @ 9   java.util.logging.LogManager::ensureLogManagerInitialized (128 bytes)   callee is too large
                              @ 4   java.lang.System::getSecurityManager (4 bytes)
                              @ 21   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 30   java.util.logging.LogManager::demandSystemLogger (71 bytes)   callee is too large
                              @ 38   java.util.logging.LogManager::demandLogger (53 bytes)   callee is too large
                              @ 2   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::matchSelf (2 bytes)   no static binding
                              @ 11   org.springframework.core.type.classreading.SimpleMetadataReader::getClassMetadata (5 bytes)
                              @ 19   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 24   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::matchClassName (2 bytes)   no static binding
                              @ 40   org.springframework.core.type.ClassMetadata::getSuperClassName (0 bytes)   not inlineable
                              @ 55   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::matchSuperClass (2 bytes)   no static binding
                              @ 67   java.lang.Boolean::booleanValue (5 bytes)
                              @ 77   org.springframework.core.type.ClassMetadata::getSuperClassName (0 bytes)   not inlineable
                              @ 83   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::match (13 bytes)
               !                @ 3   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
               !                @ 9   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::match (281 bytes)   callee is too large
                              @ 104   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 109   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 113   org.springframework.core.type.ClassMetadata::getSuperClassName (0 bytes)   not inlineable
                              @ 118   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 123   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 127   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 132   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 137   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 140   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 143   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 156   org.springframework.core.type.ClassMetadata::getInterfaceNames (0 bytes)   not inlineable
                              @ 188   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::matchInterface (2 bytes)   no static binding
                              @ 200   java.lang.Boolean::booleanValue (5 bytes)
                              @ 212   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::match (13 bytes)
               !                @ 3   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
               !                @ 9   org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter::match (281 bytes)   callee is too large
                              @ 233   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 238   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 243   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 248   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 252   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 257   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 262   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 265   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 268   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 4   java.util.Collections::emptyMap (4 bytes)
                              @ 12   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 31   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 36   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   callee is too large
                              @ 39   java.util.List::iterator (0 bytes)   no static binding
                              @ 46   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 55   java.util.Iterator::next (0 bytes)   no static binding
                              @ 65   org.springframework.core.annotation.AnnotationUtils::getAttributeAliasNames (20 bytes)
                                @ 1   org.springframework.core.annotation.AnnotationUtils$AliasDescriptor::from (62 bytes)   callee is too large
                                @ 10   org.springframework.core.annotation.AnnotationUtils$AliasDescriptor::getAttributeAliasNames (81 bytes)   callee is too large
                                @ 16   java.util.Collections::emptyList (4 bytes)
                              @ 72   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 82   java.lang.reflect.Method::getName (5 bytes)
                              @ 87   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 101   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                  @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                  @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                              @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 39   java.io.InputStream::read (109 bytes)   no static binding
                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 91   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 54   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 106   java.lang.OutOfMemoryError::<init> (6 bytes)   don't inline Throwable constructors
                              @ 163   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 172   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::compareAndSet (24 bytes)
                                @ 2   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::accessCheck (17 bytes)
                                  @ 5   java.lang.Class::isInstance (0 bytes)   intrinsic
                                  @ 13   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwAccessCheckException (89 bytes)   callee is too large
                                @ 7   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::valueCheck (19 bytes)
                                  @ 9   java.lang.Class::isInstance (0 bytes)   intrinsic
                                @ 20   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 184   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 199   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 214   java.io.InputStream::read (109 bytes)   no static binding
                              @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                              @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                              @ 1   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)
                              @ 10   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 13   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 20   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   callee is too large
                              @ 23   java.util.List::iterator (0 bytes)   no static binding
                              @ 30   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 39   java.util.Iterator::next (0 bytes)   no static binding
                              @ 49   java.lang.reflect.Method::getName (5 bytes)
                              @ 55   java.lang.reflect.Method::getDefaultValue (81 bytes)   callee is too large
                              @ 68   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 89   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)
               !                    @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                                    @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 145   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)
               !                    @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                                    @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 168   org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 171   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 18   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 28   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 38   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1229   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1235   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1245   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1253   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1278   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1284   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1311   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1317   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1326   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1350   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1356   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1208   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1010   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 1016   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1034   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1040   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1058   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1064   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1394   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1404   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1424   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1429   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1440   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1445   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1456   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1461   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1477   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1483   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1500   org.springframework.asm.MethodVisitor::visitTryCatchBlock (20 bytes)   no static binding
                              @ 1533   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1554   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1564   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 1576   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1602   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1621   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1631   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1639   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1652   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1668   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1685   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1707   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1726   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1736   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1749   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 1759   org.springframework.asm.Label::addLineNumber (89 bytes)   not inlineable
                              @ 1772   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1784   org.springframework.asm.ClassReader::readTypeAnnotations (590 bytes)   callee is too large
                              @ 1796   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1808   org.springframework.asm.ClassReader::readTypeAnnotations (590 bytes)   callee is too large
                              @ 1820   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1855   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1905   org.springframework.asm.ClassReader::readAttribute (78 bytes)   callee is too large
                              @ 2003   org.springframework.asm.ClassReader::computeImplicitFrame (375 bytes)   callee is too large
                              @ 2034   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 2074   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 2107   org.springframework.asm.MethodVisitor::visitFrame (22 bytes)   no static binding
                              @ 2117   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)
                                @ 14   org.springframework.asm.ClassReader::readByte (11 bytes)
                                @ 30   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 2129   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)
                                @ 14   org.springframework.asm.ClassReader::readByte (11 bytes)
                                @ 30   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 2203   org.springframework.asm.Label::accept (65 bytes)   not inlineable
                              @ 2291   org.springframework.asm.MethodVisitor::visitFrame (22 bytes)   no static binding
                              @ 2264   org.springframework.asm.MethodVisitor::visitFrame (22 bytes)   no static binding
                              @ 2312   org.springframework.asm.ClassReader::readStackMapFrame (535 bytes)   callee is too large
                              @ 2349   org.springframework.asm.MethodVisitor::visitFrame (22 bytes)   no static binding
                              @ 3888   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 3891   org.springframework.asm.MethodVisitor::visitIntInsn (17 bytes)   no static binding
                              @ 3915   org.springframework.asm.ClassReader::readConst (276 bytes)   callee is too large
                              @ 3918   org.springframework.asm.MethodVisitor::visitLdcInsn (87 bytes)   no static binding
                              @ 3934   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3939   org.springframework.asm.ClassReader::readConst (276 bytes)   callee is too large
                              @ 3942   org.springframework.asm.MethodVisitor::visitLdcInsn (87 bytes)   no static binding
                              @ 3295   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 3319   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 4283   org.springframework.asm.MethodVisitor::visitIincInsn (17 bytes)   no static binding
                              @ 3852   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 3630   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3642   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3653   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3695   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3719   org.springframework.asm.MethodVisitor::visitTableSwitchInsn (20 bytes)   no static binding
                              @ 3743   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3755   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3793   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3810   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3832   org.springframework.asm.MethodVisitor::visitLookupSwitchInsn (18 bytes)   no static binding
                              @ 3960   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3975   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3986   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 3996   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4008   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4030   org.springframework.asm.MethodVisitor::visitFieldInsn (20 bytes)   no static binding
                              @ 4066   org.springframework.asm.MethodVisitor::visitMethodInsn (68 bytes)   no static binding
                              @ 4098   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4113   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4124   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4136   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4148   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4158   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4163   org.springframework.asm.ClassReader::readConst (276 bytes)   callee is too large
                              @ 4176   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4206   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4211   org.springframework.asm.ClassReader::readConst (276 bytes)   callee is too large
                              @ 4233   org.springframework.asm.MethodVisitor::visitInvokeDynamicInsn (39 bytes)   no static binding
                              @ 3871   org.springframework.asm.MethodVisitor::visitIntInsn (17 bytes)   no static binding
                              @ 4252   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4255   org.springframework.asm.MethodVisitor::visitTypeInsn (17 bytes)   no static binding
                              @ 3271   org.springframework.asm.MethodVisitor::visitInsn (16 bytes)   no static binding
                              @ 3572   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3580   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 3583   org.springframework.asm.MethodVisitor::visitIincInsn (17 bytes)   no static binding
                              @ 3600   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3603   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 4300   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4314   org.springframework.asm.MethodVisitor::visitMultiANewArrayInsn (17 bytes)   no static binding
                              @ 3340   org.springframework.asm.ClassReader::readShort (27 bytes)
                              @ 3345   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 3369   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3374   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 3415   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 3484   org.springframework.asm.ClassReader::createLabel (21 bytes)
                                @ 3   org.springframework.asm.ClassReader::readLabel (34 bytes)   callee is too large
                              @ 3494   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 3503   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 3446   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 3528   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 3533   org.springframework.asm.MethodVisitor::visitJumpInsn (17 bytes)   no static binding
                              @ 4365   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 4375   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4396   org.springframework.asm.MethodVisitor::visitInsnAnnotation (41 bytes)   no static binding
                              @ 4404   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 4416   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)
                                @ 14   org.springframework.asm.ClassReader::readByte (11 bytes)
                                @ 30   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4458   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 4468   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4489   org.springframework.asm.MethodVisitor::visitInsnAnnotation (41 bytes)   no static binding
                              @ 4497   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 4509   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)
                                @ 14   org.springframework.asm.ClassReader::readByte (11 bytes)
                                @ 30   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4327   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 4534   org.springframework.asm.MethodVisitor::visitLabel (16 bytes)   no static binding
                              @ 4562   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4613   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4627   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4640   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4662   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4672   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4684   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4697   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4708   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 4767   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4803   org.springframework.asm.MethodVisitor::visitLocalVariable (24 bytes)   no static binding
                              @ 4843   org.springframework.asm.ClassReader::readByte (11 bytes)
                              @ 4866   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 4876   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 4909   org.springframework.asm.MethodVisitor::visitLocalVariableAnnotation (47 bytes)   no static binding
                              @ 4917   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 4961   org.springframework.asm.ClassReader::readByte (11 bytes)
                              @ 4984   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 4994   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 5027   org.springframework.asm.MethodVisitor::visitLocalVariableAnnotation (47 bytes)   no static binding
                              @ 5035   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 5066   org.springframework.asm.MethodVisitor::visitAttribute (16 bytes)   no static binding
                              @ 5081   org.springframework.asm.MethodVisitor::visitMaxs (17 bytes)   no static binding
                              @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   inline (hot)
                                @ 34   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                                @ 38   org.springframework.asm.ClassReader::readUtf (161 bytes)   inline (hot)
                                  @ 157   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 3   org.springframework.asm.AnnotationVisitor::<init> (47 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 31   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 46   org.springframework.asm.ClassReader::readElementValue (1237 bytes)   callee is too large
                              @ 69   org.springframework.asm.ClassReader::readElementValue (1237 bytes)   callee is too large
                              @ 82   org.springframework.asm.AnnotationVisitor::visitEnd (15 bytes)   no static binding
                              @ 3   java.lang.String::length (6 bytes)
                              @ 6   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 9   org.springframework.core.annotation.AnnotationAttributes::<init> (30 bytes)
                                @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !                @ 18   org.springframework.core.annotation.AnnotationAttributes::getAnnotationType (13 bytes)
                                  @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                              @ 14   org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor::<init> (12 bytes)
                                @ 3   org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor::<init> (28 bytes)
                                  @ 3   org.springframework.asm.AnnotationVisitor::<init> (7 bytes)
                                    @ 3   org.springframework.asm.AnnotationVisitor::<init> (47 bytes)   callee is too large
                                  @ 8   java.lang.Object::getClass (0 bytes)   intrinsic
                                  @ 11   org.apache.commons.logging.LogFactory::getLog (8 bytes)
                                    @ 1   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 4   org.apache.commons.logging.LogFactory::getLog (5 bytes)
                                      @ 1   org.apache.commons.logging.LogAdapter::createLog (56 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 13   java.nio.channels.SelectableChannel::blockingLock (0 bytes)   not inlineable
                              @ 21   java.nio.channels.SelectableChannel::isBlocking (0 bytes)   not inlineable
                              @ 35  java/nio/channels/IllegalBlockingModeException::<init> (not loaded)   not inlineable
                              @ 47   java.nio.channels.SelectableChannel::configureBlocking (0 bytes)   not inlineable
                              @ 53   java.nio.channels.ReadableByteChannel::read (0 bytes)   not inlineable
                              @ 69   java.nio.channels.SelectableChannel::configureBlocking (0 bytes)   not inlineable
                              @ 89   java.nio.channels.ReadableByteChannel::read (0 bytes)   not inlineable
                              @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)
                              @ 4   java.lang.String::length (6 bytes)   inline (hot)
                              @ 12   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 18   org.springframework.core.annotation.AnnotationAttributes::getAnnotationType (13 bytes)
                                @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                              @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                              @ 3   org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor::<init> (28 bytes)
                                @ 3   org.springframework.asm.AnnotationVisitor::<init> (7 bytes)
                                  @ 3   org.springframework.asm.AnnotationVisitor::<init> (47 bytes)   callee is too large
                                @ 8   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 11   org.apache.commons.logging.LogFactory::getLog (8 bytes)
                                  @ 1   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 4   org.apache.commons.logging.LogFactory::getLog (5 bytes)
                                    @ 1   org.apache.commons.logging.LogAdapter::createLog (56 bytes)   callee is too large
                              @ 3   org.springframework.asm.AnnotationVisitor::<init> (7 bytes)
                                @ 3   org.springframework.asm.AnnotationVisitor::<init> (47 bytes)   callee is too large
                              @ 8   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 11   org.apache.commons.logging.LogFactory::getLog (8 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 4   org.apache.commons.logging.LogFactory::getLog (5 bytes)
                                  @ 1   org.apache.commons.logging.LogAdapter::createLog (56 bytes)   callee is too large
                              @ 34   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 38   org.springframework.asm.ClassReader::readUtf (161 bytes)   inline (hot)
                                @ 157   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 58   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 70   java.nio.Buffer::capacity (5 bytes)
                              @ 73   java.lang.Math::min (11 bytes)
                              @ 76   java.nio.Buffer::limit (62 bytes)   callee is too large
                              @ 83   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 101   sun.nio.ch.ChannelInputStream::read (10 bytes)
               !m               @ 6   sun.nio.ch.ChannelInputStream::read (95 bytes)   callee is too large
                              @ 32   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
               !m             @ 6   sun.nio.ch.ChannelInputStream::read (95 bytes)   callee is too large
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 1   sun.nio.ch.FileChannelImpl::ensureOpen (16 bytes)
                                @ 1   java.nio.channels.spi.AbstractInterruptibleChannel::isOpen (5 bytes)
                                @ 11  java/nio/channels/ClosedChannelException::<init> (not loaded)   not inlineable
                              @ 15  java/nio/channels/NonReadableChannelException::<init> (not loaded)   not inlineable
                              @ 32   java.nio.channels.spi.AbstractInterruptibleChannel::begin (48 bytes)   callee is too large
               !m             @ 39   sun.nio.ch.NativeThreadSet::add (155 bytes)   callee is too large
                              @ 45   java.nio.channels.spi.AbstractInterruptibleChannel::isOpen (5 bytes)
               !m             @ 60   sun.nio.ch.NativeThreadSet::remove (50 bytes)   callee is too large
                              @ 73   java.nio.channels.spi.AbstractInterruptibleChannel::end (50 bytes)   callee is too large
               !              @ 114   sun.nio.ch.IOUtil::read (93 bytes)   callee is too large
                              @ 125   java.nio.channels.spi.AbstractInterruptibleChannel::isOpen (5 bytes)
                              @ 132   sun.nio.ch.IOStatus::normalize (10 bytes)
               !m             @ 193   sun.nio.ch.NativeThreadSet::remove (50 bytes)   callee is too large
                              @ 206   java.nio.channels.spi.AbstractInterruptibleChannel::end (50 bytes)   callee is too large
               !m             @ 143   sun.nio.ch.NativeThreadSet::remove (50 bytes)   callee is too large
                              @ 156   java.nio.channels.spi.AbstractInterruptibleChannel::end (50 bytes)   callee is too large
                              @ 1   java.nio.Buffer::isReadOnly (0 bytes)   no static binding
                              @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 29   sun.nio.ch.IOUtil::readIntoNativeBuffer (137 bytes)   callee is too large
                              @ 34   java.nio.Buffer::remaining (10 bytes)
                              @ 37   sun.nio.ch.Util::getTemporaryDirectBuffer (55 bytes)   callee is too large
                              @ 48   sun.nio.ch.IOUtil::readIntoNativeBuffer (137 bytes)   callee is too large
                              @ 55   java.nio.Buffer::flip (20 bytes)
                              @ 67   java.nio.ByteBuffer::put (73 bytes)   no static binding
                              @ 87   sun.nio.ch.Util::offerFirstTemporaryDirectBuffer (53 bytes)   callee is too large
                              @ 77   sun.nio.ch.Util::offerFirstTemporaryDirectBuffer (53 bytes)   callee is too large
                              @ 1   sun.nio.ch.Util::isBufferTooLarge (15 bytes)
                              @ 8   java.nio.ByteBuffer::allocateDirect (9 bytes)
               !                @ 5   java.nio.DirectByteBuffer::<init> (146 bytes)   callee is too large
                              @ 15   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 24   sun.nio.ch.Util$BufferCache::get (164 bytes)   callee is too large
                              @ 35   sun.nio.ch.Util$BufferCache::isEmpty (13 bytes)
                              @ 42   sun.nio.ch.Util$BufferCache::removeFirst (65 bytes)   callee is too large
                              @ 47   sun.nio.ch.Util::free (13 bytes)
                                @ 4   sun.nio.ch.DirectBuffer::cleaner (0 bytes)   no static binding
               !                @ 9   sun.misc.Cleaner::clean (35 bytes)   callee is too large
                              @ 51   java.nio.ByteBuffer::allocateDirect (9 bytes)
               !                @ 5   java.nio.DirectByteBuffer::<init> (146 bytes)   callee is too large
                              @ 3   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                              @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                              @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                                @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                                @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 21   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 36   java.lang.reflect.AccessibleObject::checkAccess (96 bytes)   callee is too large
                              @ 49   java.lang.reflect.Method::acquireMethodAccessor (44 bytes)   callee is too large
                              @ 56   sun.reflect.MethodAccessor::invoke (0 bytes)   not inlineable
                              @ 6   sun.reflect.MethodAccessorImpl::invoke (0 bytes)   no static binding
                              @ 16   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   sun.nio.cs.UTF_8$Decoder::<init> (6 bytes)
                                @ 2   sun.nio.cs.UTF_8$Decoder::<init> (8 bytes)
                                  @ 4   java.nio.charset.CharsetDecoder::<init> (10 bytes)
                                    @ 6   java.nio.charset.CharsetDecoder::<init> (108 bytes)   callee is too large
                              @ 2   sun.nio.cs.UTF_8$Decoder::<init> (8 bytes)
                                @ 4   java.nio.charset.CharsetDecoder::<init> (10 bytes)
                                  @ 6   java.nio.charset.CharsetDecoder::<init> (108 bytes)   callee is too large
                              @ 4   java.nio.charset.CharsetDecoder::<init> (10 bytes)
                                @ 6   java.nio.charset.CharsetDecoder::<init> (108 bytes)   callee is too large
                              @ 6   java.nio.charset.CharsetDecoder::<init> (108 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 40   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 56   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 62   java.nio.charset.Charset::atBugLevel (44 bytes)   callee is too large
                              @ 80   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 103   java.nio.charset.CharsetDecoder::replaceWith (68 bytes)   callee is too large
                              @ 10   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 15   java.lang.String::length (6 bytes)
                              @ 29   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 49   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 63   java.nio.charset.CharsetDecoder::implReplaceWith (1 bytes)
                              @ 1   org.springframework.core.AttributeAccessorSupport::<init> (16 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 18   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
                              @ 25   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)
               !                @ 14   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
               !              @ 14   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 3   java.util.AbstractMap::entrySet (0 bytes)   no static binding
                              @ 6   java.util.Set::iterator (0 bytes)   no static binding
                              @ 13   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 23   java.util.Iterator::next (0 bytes)   no static binding
                              @ 31   java.util.Map$Entry::hashCode (0 bytes)   not inlineable
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   org.springframework.beans.factory.support.AbstractBeanDefinition::<init> (92 bytes)   callee is too large
                              @ 1   org.springframework.beans.BeanMetadataAttributeAccessor::<init> (5 bytes)
                                @ 1   org.springframework.core.AttributeAccessorSupport::<init> (16 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                              @ 45   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 4   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 16   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 29   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 42   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 55   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 68   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                              @ 78   org.springframework.core.AttributeAccessorSupport::hashCode (10 bytes)
                                @ 4   java.util.Map::hashCode (0 bytes)   no static binding
                              @ 32   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 42   org.springframework.asm.MethodVisitor::visitMethodInsn (55 bytes)   callee is too large
                              @ 64   org.springframework.asm.MethodVisitor::visitMethodInsn (68 bytes)   no static binding
                              @ 4   java.lang.String::length (6 bytes)   inline (hot)
                              @ 12   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 4   java.lang.String::length (6 bytes)   inline (hot)
                              @ 12   org.springframework.asm.MethodVisitor::visitInsn (16 bytes)   no static binding
                              @ 15   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 24   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 43   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 64   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 78   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 97   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 120   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 43   java.nio.Buffer::capacity (5 bytes)
                              @ 61   sun.nio.ch.Util$BufferCache::next (8 bytes)
                                @ 3   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 90   java.nio.Buffer::capacity (5 bytes)
                              @ 135   sun.nio.ch.Util$BufferCache::next (8 bytes)
                                @ 3   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 152   java.nio.Buffer::rewind (12 bytes)
                              @ 158   java.nio.Buffer::limit (62 bytes)   callee is too large
                              @ 1   java.nio.Buffer::position (5 bytes)
                              @ 7   java.nio.Buffer::limit (5 bytes)
                              @ 76   sun.nio.ch.DirectBuffer::address (0 bytes)   no static binding
                              @ 88   sun.nio.ch.NativeDispatcher::pread (10 bytes)   no static binding
                              @ 103   sun.nio.ch.DirectBuffer::address (0 bytes)   no static binding
                              @ 114   sun.nio.ch.NativeDispatcher::read (0 bytes)   no static binding
                              @ 130   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 4   sun.nio.ch.FileDispatcherImpl::read0 (0 bytes)   native method
                              @ 1   sun.nio.ch.Util::isBufferTooLarge (8 bytes)
                                @ 1   java.nio.Buffer::capacity (5 bytes)
                                @ 4   sun.nio.ch.Util::isBufferTooLarge (15 bytes)
                              @ 8   sun.nio.ch.Util::free (13 bytes)
                                @ 4   sun.nio.ch.DirectBuffer::cleaner (0 bytes)   no static binding
               !                @ 9   sun.misc.Cleaner::clean (35 bytes)   callee is too large
                              @ 33   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 42   sun.nio.ch.Util$BufferCache::offerFirst (73 bytes)   callee is too large
                              @ 49   sun.nio.ch.Util::free (13 bytes)
                                @ 4   sun.nio.ch.DirectBuffer::cleaner (0 bytes)   no static binding
               !                @ 9   sun.misc.Cleaner::clean (35 bytes)   callee is too large
                              @ 1   java.nio.Buffer::capacity (5 bytes)
                              @ 4   sun.nio.ch.Util::isBufferTooLarge (15 bytes)
                              @ 25   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 38   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 44   sun.nio.ch.Util::access$000 (4 bytes)
                              @ 4   java.util.Map::hashCode (0 bytes)   no static binding
                              @ 7   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 10   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
                              @ 35   org.springframework.context.annotation.ConfigurationClassUtils::isConfigurationCandidate (20 bytes)
                                @ 1   org.springframework.context.annotation.ConfigurationClassUtils::isFullConfigurationCandidate (12 bytes)
                                  @ 3   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
               !                @ 8   org.springframework.context.annotation.ConfigurationClassUtils::isLiteConfigurationCandidate (121 bytes)   callee is too large
                              @ 46   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 55   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 63   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 69   org.springframework.context.annotation.ConditionEvaluator::getConditionClasses (48 bytes)   callee is too large
                              @ 72   java.util.List::iterator (0 bytes)   no static binding
                              @ 81   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 91   java.util.Iterator::next (0 bytes)   no static binding
                              @ 134   org.springframework.context.annotation.ConditionEvaluator$ConditionContextImpl::getClassLoader (5 bytes)
                              @ 137   org.springframework.context.annotation.ConditionEvaluator::getCondition (14 bytes)
               !                @ 2   org.springframework.util.ClassUtils::resolveClassName (115 bytes)   callee is too large
               !                @ 7   org.springframework.beans.BeanUtils::instantiateClass (84 bytes)   callee is too large
                              @ 145   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 161   org.springframework.core.annotation.AnnotationAwareOrderComparator::sort (20 bytes)
                                @ 1   java.util.ArrayList::size (5 bytes)
                                @ 14   java.util.ArrayList::sort (48 bytes)   callee is too large
                              @ 165   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::<init> (26 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 174   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 184   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 210  org/springframework/context/annotation/ConfigurationCondition::getConfigurationPhase (not loaded)   not inlineable
                              @ 235  org/springframework/context/annotation/Condition::matches (not loaded)   not inlineable
                              @ 10   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 26   java.io.ByteArrayOutputStream::hugeCapacity (26 bytes)
                                @ 8   java.lang.OutOfMemoryError::<init> (5 bytes)   don't inline Throwable constructors
                              @ 36   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.util.AbstractSet::<init> (5 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.util.HashMap::<init> (8 bytes)
                                @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 3   java.io.ByteArrayOutputStream::<init> (43 bytes)   callee is too large
                              @ 1   java.io.OutputStream::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 16   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 28   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 31   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 14   java.util.HashMap$KeySet::<init> (10 bytes)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)
                                @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   callee is too large
                              @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   callee is too large
                              @ 2   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::accessCheck (17 bytes)
                                @ 5   java.lang.Class::isInstance (0 bytes)   intrinsic
                                @ 13   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwAccessCheckException (89 bytes)   callee is too large
                              @ 7   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::valueCheck (19 bytes)
                                @ 9   java.lang.Class::isInstance (0 bytes)   intrinsic
                                @ 15   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwCCE (8 bytes)
                                  @ 4   java.lang.ClassCastException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 20   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 5   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwAccessCheckException (89 bytes)   callee is too large
                              @ 9   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 15   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwCCE (8 bytes)
                                @ 4   java.lang.ClassCastException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::visitEnd (1 bytes)
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 32   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 42   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 50   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 36   com.sun.proxy.$Proxy5::value (29 bytes)
                                @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                                @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 59   java.lang.reflect.InvocationTargetException::<init> (14 bytes)   not inlineable
                              @ 28   java.util.Collection::add (0 bytes)   no static binding
                              @ 13   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 27   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 41   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 95   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 116   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 126   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 138   java.lang.String::equals (81 bytes)   callee is too large
                              @ 164   java.lang.String::equals (81 bytes)   callee is too large
                              @ 177   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 211   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 231   java.lang.String::equals (81 bytes)   callee is too large
                              @ 240   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 252   java.lang.String::equals (81 bytes)   callee is too large
                              @ 276   java.lang.String::equals (81 bytes)   callee is too large
                              @ 293   java.lang.String::equals (81 bytes)   callee is too large
                              @ 310   java.lang.String::equals (81 bytes)   callee is too large
                              @ 327   java.lang.String::equals (81 bytes)   callee is too large
                              @ 355   java.lang.String::equals (81 bytes)   callee is too large
                              @ 372   java.lang.String::equals (81 bytes)   callee is too large
                              @ 389   java.lang.String::equals (81 bytes)   callee is too large
                              @ 406   java.lang.String::equals (81 bytes)   callee is too large
                              @ 423   java.lang.String::equals (81 bytes)   callee is too large
                              @ 451   org.springframework.asm.ClassReader::readAttribute (78 bytes)   callee is too large
                              @ 504   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 509   org.springframework.asm.ClassVisitor::visitMethod (24 bytes)   no static binding
                              @ 566   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 573   org.springframework.asm.MethodWriter::canCopyMethodAttributes (180 bytes)   not inlineable
                              @ 590   org.springframework.asm.ClassReader::readByte (11 bytes)
                              @ 616   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 624   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 627   org.springframework.asm.MethodVisitor::visitParameter (36 bytes)   no static binding
                              @ 643   org.springframework.asm.MethodVisitor::visitAnnotationDefault (17 bytes)   no static binding
                              @ 656   org.springframework.asm.ClassReader::readElementValue (1237 bytes)   callee is too large
                              @ 667   org.springframework.asm.AnnotationVisitor::visitEnd (15 bytes)   no static binding
                              @ 678   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 702   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 716   org.springframework.asm.MethodVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 724   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 740   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 764   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 778   org.springframework.asm.MethodVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 786   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 802   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 825   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 835   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 857   org.springframework.asm.MethodVisitor::visitTypeAnnotation (41 bytes)   no static binding
                              @ 865   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 881   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 904   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 914   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 936   org.springframework.asm.MethodVisitor::visitTypeAnnotation (41 bytes)   no static binding
                              @ 944   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 964   org.springframework.asm.ClassReader::readParameterAnnotations (106 bytes)   callee is too large
                              @ 979   org.springframework.asm.ClassReader::readParameterAnnotations (106 bytes)   callee is too large
                              @ 1004   org.springframework.asm.MethodVisitor::visitAttribute (16 bytes)   no static binding
                              @ 1021   org.springframework.asm.MethodVisitor::visitCode (15 bytes)   no static binding
                              @ 1030   org.springframework.asm.ClassReader::readCode (5085 bytes)   callee is too large
                              @ 1035   org.springframework.asm.MethodVisitor::visitEnd (15 bytes)   no static binding
                              @ 4   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 14   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 33   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 45   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 59   java.lang.String::length (6 bytes)
                              @ 62   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 10   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 21   java.nio.charset.CharsetDecoder::implOnMalformedInput (1 bytes)
                              @ 15   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::visitMethod (8 bytes)
                                @ 4   org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyMethodVisitor::<init> (7 bytes)   not inlineable
                              @ 26   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getClassName (5 bytes)
                                @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)
                              @ 30   org.springframework.asm.Type::getReturnType (66 bytes)   callee is too large
                              @ 33   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 44   org.springframework.core.type.classreading.MethodMetadataReadingVisitor::<init> (64 bytes)   callee is too large
                              @ 5   java.io.BufferedInputStream::<init> (32 bytes)
                                @ 2   java.io.FilterInputStream::<init> (10 bytes)
                                  @ 1   java.io.InputStream::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 20   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 3   org.springframework.asm.MethodVisitor::<init> (7 bytes)
                                @ 3   org.springframework.asm.MethodVisitor::<init> (47 bytes)   callee is too large
                              @ 12   java.util.LinkedHashMap::<init> (11 bytes)
                                @ 2   java.util.HashMap::<init> (8 bytes)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 24   org.springframework.util.LinkedMultiValueMap::<init> (17 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 10   java.util.LinkedHashMap::<init> (11 bytes)
                                  @ 2   java.util.HashMap::<init> (8 bytes)
                                    @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 2   java.io.FilterInputStream::<init> (10 bytes)
                                @ 1   java.io.InputStream::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 20   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 3   org.springframework.asm.MethodVisitor::<init> (47 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 11   org.springframework.asm.MethodVisitor::visitCode (15 bytes)   no static binding
                              @ 13   org.springframework.asm.MethodVisitor::visitMaxs (17 bytes)   no static binding
                              @ 11   org.springframework.asm.MethodVisitor::visitEnd (15 bytes)   no static binding
                              @ 15   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::compareAndSet (24 bytes)
                                @ 2   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::accessCheck (17 bytes)
                                  @ 5   java.lang.Class::isInstance (0 bytes)   intrinsic
                                  @ 13   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::throwAccessCheckException (89 bytes)   callee is too large
                                @ 7   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::valueCheck (19 bytes)
                                @ 20   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 36   java.io.InputStream::close (1 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 55   java.nio.Buffer::limit (62 bytes)   inline (hot)
                              @ 61   java.nio.Buffer::position (43 bytes)   inline (hot)
                              @ 5   java.util.Set::add (0 bytes)   no static binding
                              @ 12   org.springframework.asm.Type::getType (10 bytes)
                                @ 3   java.lang.String::length (6 bytes)
                                @ 6   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 15   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 36   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::<init> (28 bytes)
                                @ 9   org.springframework.core.annotation.AnnotationAttributes::<init> (30 bytes)
                                  @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !                  @ 18   org.springframework.core.annotation.AnnotationAttributes::getAnnotationType (13 bytes)
                                    @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                                @ 14   org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor::<init> (12 bytes)
                                  @ 3   org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor::<init> (28 bytes)   callee is too large
                              @ 4   org.springframework.asm.Context::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 48   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 60   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 72   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 83   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 114   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 173   org.springframework.asm.ClassReader::getFirstAttributeOffset (136 bytes)   callee is too large
                              @ 183   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 198   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 208   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 220   java.lang.String::equals (81 bytes)   callee is too large
                              @ 231   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 243   java.lang.String::equals (81 bytes)   callee is too large
                              @ 260   java.lang.String::equals (81 bytes)   callee is too large
                               \-> TypeProfile (732/732 counts) = java/lang/String
                              @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 277   java.lang.String::equals (81 bytes)   callee is too large
                              @ 288   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 300   java.lang.String::equals (81 bytes)   callee is too large
                              @ 317   java.lang.String::equals (81 bytes)   callee is too large
                              @ 328   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 340   java.lang.String::equals (81 bytes)   callee is too large
                              @ 357   java.lang.String::equals (81 bytes)   callee is too large
                              @ 374   java.lang.String::equals (81 bytes)   callee is too large
                              @ 394   java.lang.String::equals (81 bytes)   callee is too large
                              @ 415   java.lang.String::equals (81 bytes)   callee is too large
                              @ 430   org.springframework.asm.ClassReader::readUtf (161 bytes)   callee is too large
                              @ 442   java.lang.String::equals (81 bytes)   callee is too large
                              @ 459   java.lang.String::equals (81 bytes)   callee is too large
                              @ 476   java.lang.String::equals (81 bytes)   callee is too large
                              @ 493   java.lang.String::equals (81 bytes)   callee is too large
                              @ 504   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 516   java.lang.String::equals (81 bytes)   callee is too large
                              @ 533   java.lang.String::equals (81 bytes)   callee is too large
                              @ 551   org.springframework.asm.ClassReader::readAttribute (78 bytes)   callee is too large
                              @ 591   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 604   org.springframework.asm.ClassVisitor::visit (24 bytes)   no static binding
                              @ 628   org.springframework.asm.ClassVisitor::visitSource (17 bytes)   no static binding
                              @ 646   org.springframework.asm.ClassReader::readModuleAttributes (551 bytes)   callee is too large
                              @ 657   org.springframework.asm.ClassVisitor::visitNestHost (35 bytes)
                                @ 15   java.lang.UnsupportedOperationException::<init> (6 bytes)   not inlineable
                                @ 31   org.springframework.asm.ClassVisitor::visitNestHost (35 bytes)   callee is too large
                              @ 670   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 680   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 704   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 730   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 742   org.springframework.asm.ClassVisitor::visitOuterClass (18 bytes)   no static binding
                              @ 753   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 777   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 790   org.springframework.asm.ClassVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 798   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 814   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 838   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 851   org.springframework.asm.ClassVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 859   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 875   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 899   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 909   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 932   org.springframework.asm.ClassVisitor::visitTypeAnnotation (41 bytes)   callee is too large
                              @ 940   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 956   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 980   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 990   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1013   org.springframework.asm.ClassVisitor::visitTypeAnnotation (41 bytes)   callee is too large
                              @ 1021   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 1050   org.springframework.asm.ClassVisitor::visitAttribute (16 bytes)   no static binding
                              @ 1068   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1093   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1096   org.springframework.asm.ClassVisitor::visitNestMember (35 bytes)
                                @ 15   java.lang.UnsupportedOperationException::<init> (6 bytes)   not inlineable
                                @ 31   org.springframework.asm.ClassVisitor::visitNestMember (35 bytes)   callee is too large
                              @ 1113   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1138   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1148   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1158   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1167   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1170   org.springframework.asm.ClassVisitor::visitInnerClass (20 bytes)   no static binding
                              @ 1182   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1204   org.springframework.asm.ClassReader::readField (666 bytes)   callee is too large
                              @ 1215   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1237   org.springframework.asm.ClassReader::readMethod (1041 bytes)   callee is too large
                              @ 1246   org.springframework.asm.ClassVisitor::visitEnd (15 bytes)   no static binding
                              @ 10   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 18   java.io.ByteArrayOutputStream::<init> (7 bytes)
                                @ 3   java.io.ByteArrayOutputStream::<init> (43 bytes)   callee is too large
               !              @ 33   java.io.InputStream::read (109 bytes)   no static binding
              s               @ 48   java.io.ByteArrayOutputStream::write (66 bytes)   callee is too large
                              @ 55   java.io.OutputStream::flush (1 bytes)
              s               @ 59   java.io.ByteArrayOutputStream::toByteArray (12 bytes)
                                @ 8   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 82   java.io.InputStream::close (1 bytes)   no static binding
                              @ 69   java.io.InputStream::close (1 bytes)   no static binding
                              @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                              @ 3   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::<init> (7 bytes)
                                @ 3   org.springframework.beans.factory.support.AbstractBeanDefinition::<init> (92 bytes)   callee is too large
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                              @ 30   java.io.UnixFileSystem::checkAccess (0 bytes)   native method
                              @ 5   java.lang.Object::hashCode (0 bytes)   native method
                              @ 5   java.lang.Object::hashCode (0 bytes)   native method
                               \-> TypeProfile (1/5121 counts) = sun/misc/Launcher$AppClassLoader
                               \-> TypeProfile (5120/5121 counts) = java/lang/Class
                              @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                              @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                              @ 15   java.util.Map::get (0 bytes)   no static binding
                              @ 30   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)
                                @ 9   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
               !                @ 14   org.springframework.core.type.classreading.SimpleMetadataReader::<init> (111 bytes)   callee is too large
                              @ 40   java.util.Map::put (0 bytes)   no static binding
                              @ 67   java.util.Map::get (0 bytes)   no static binding
                              @ 82   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)
                                @ 9   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
               !                @ 14   org.springframework.core.type.classreading.SimpleMetadataReader::<init> (111 bytes)   callee is too large
                              @ 92   java.util.Map::put (0 bytes)   no static binding
                              @ 111   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)
                                @ 9   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
               !                @ 14   org.springframework.core.type.classreading.SimpleMetadataReader::<init> (111 bytes)   callee is too large
                              @ 9   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
               !              @ 14   org.springframework.core.type.classreading.SimpleMetadataReader::<init> (111 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   org.springframework.core.io.Resource::getInputStream (10 bytes)   no static binding
                              @ 14   java.io.BufferedInputStream::<init> (9 bytes)
                                @ 5   java.io.BufferedInputStream::<init> (32 bytes)   callee is too large
                              @ 23   org.springframework.asm.ClassReader::<init> (10 bytes)
               !                @ 3   org.springframework.asm.ClassReader::readStream (88 bytes)   callee is too large
                                @ 6   org.springframework.asm.ClassReader::<init> (9 bytes)
                                  @ 5   org.springframework.asm.ClassReader::<init> (8 bytes)
                                    @ 4   org.springframework.asm.ClassReader::<init> (367 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 54   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 57   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 62   org.springframework.core.NestedIOException::<init> (7 bytes)   not inlineable
                              @ 69   java.io.BufferedInputStream::close (41 bytes)   callee is too large
                              @ 29   java.io.BufferedInputStream::close (41 bytes)   callee is too large
                              @ 80   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::<init> (58 bytes)   callee is too large
                              @ 90   org.springframework.asm.ClassReader::accept (11 bytes)
                                @ 7   org.springframework.asm.ClassReader::accept (1250 bytes)   callee is too large
               !              @ 3   org.springframework.asm.ClassReader::readStream (88 bytes)   callee is too large
                              @ 6   org.springframework.asm.ClassReader::<init> (9 bytes)
                                @ 5   org.springframework.asm.ClassReader::<init> (8 bytes)
                                  @ 4   org.springframework.asm.ClassReader::<init> (367 bytes)   callee is too large
                              @ 5   org.springframework.asm.ClassReader::<init> (8 bytes)
                                @ 4   org.springframework.asm.ClassReader::<init> (367 bytes)   callee is too large
                              @ 4   org.springframework.asm.ClassReader::<init> (367 bytes)   callee is too large
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::<init> (33 bytes)
                                @ 3   org.springframework.asm.ClassVisitor::<init> (7 bytes)
                                  @ 3   org.springframework.asm.ClassVisitor::<init> (47 bytes)   callee is too large
                                @ 26   java.util.LinkedHashSet::<init> (9 bytes)
                                  @ 5   java.util.HashSet::<init> (18 bytes)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 10   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 22   java.util.LinkedHashMap::<init> (11 bytes)
                                @ 2   java.util.HashMap::<init> (8 bytes)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 34   org.springframework.util.LinkedMultiValueMap::<init> (17 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 10   java.util.LinkedHashMap::<init> (11 bytes)
                                  @ 2   java.util.HashMap::<init> (8 bytes)
                                    @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 46   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
               !              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                              @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                              @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                 \-> TypeProfile (4957/4957 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                  @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                    @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                   \-> TypeProfile (737/737 counts) = java/lang/String
                                  @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 28   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)   inline (hot)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)   inline (hot)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   too big
                              @ 8   java.nio.file.Files::newInputStream (10 bytes)
                                @ 1   java.nio.file.Files::provider (10 bytes)
                                  @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                  @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                                @ 6   java.nio.file.spi.FileSystemProvider::newInputStream (91 bytes)   callee is too large
                              @ 18   java.nio.file.FileSystemException::getMessage (94 bytes)   not inlineable
                              @ 21   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 10   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::visit (139 bytes)   callee is too large
                              @ 2   org.springframework.util.ClassUtils::convertResourcePathToClassName (15 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 90   org.springframework.util.ClassUtils::convertResourcePathToClassName (15 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 128   org.springframework.util.ClassUtils::convertResourcePathToClassName (15 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 11   java.io.File::canRead (34 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                                @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                                @ 30   java.io.UnixFileSystem::checkAccess (0 bytes)   native method
                              @ 21   java.io.File::isDirectory (43 bytes)   callee is too large
                              @ 39   java.nio.file.Files::isReadable (15 bytes)
               !                @ 11   java.nio.file.Files::isAccessible (14 bytes)
                                  @ 1   java.nio.file.Files::provider (10 bytes)
                                    @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                    @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                                  @ 6   java.nio.file.spi.FileSystemProvider::checkAccess (0 bytes)   no static binding
               !              @ 53   java.nio.file.Files::isDirectory (16 bytes)
                                @ 4   java.nio.file.Files::readAttributes (11 bytes)
                                  @ 1   java.nio.file.Files::provider (10 bytes)
                                    @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                    @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                                  @ 7   java.nio.file.spi.FileSystemProvider::readAttributes (0 bytes)   no static binding
                                @ 7   sun.nio.fs.UnixFileAttributes::isDirectory (19 bytes)
                              @ 1   java.nio.file.Files::provider (10 bytes)
                                @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                              @ 6   java.nio.file.spi.FileSystemProvider::newInputStream (91 bytes)   callee is too large
                              @ 1   org.springframework.asm.Type::getType (10 bytes)
                                @ 3   java.lang.String::length (6 bytes)
                                @ 6   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 4   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 13   java.util.Set::add (0 bytes)   no static binding
                              @ 36   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::<init> (28 bytes)
                                @ 9   org.springframework.core.annotation.AnnotationAttributes::<init> (30 bytes)
                                  @ 1   java.util.LinkedHashMap::<init> (10 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !                  @ 18   org.springframework.core.annotation.AnnotationAttributes::getAnnotationType (13 bytes)
                                    @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                                @ 14   org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor::<init> (12 bytes)
                                  @ 3   org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor::<init> (28 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 17   java.lang.Integer::intValue (5 bytes)
                              @ 28   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 1   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.lang.Class::isArray (0 bytes)   native method
                              @ 13   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 30   java.util.Arrays::hashCode (44 bytes)   callee is too large
                              @ 47   java.util.Arrays::hashCode (44 bytes)   callee is too large
                              @ 64   java.util.Arrays::hashCode (58 bytes)   callee is too large
                              @ 81   java.util.Arrays::hashCode (47 bytes)   callee is too large
                              @ 98   java.util.Arrays::hashCode (44 bytes)   callee is too large
                              @ 115   java.util.Arrays::hashCode (55 bytes)   callee is too large
                              @ 132   java.util.Arrays::hashCode (44 bytes)   callee is too large
                              @ 149   java.util.Arrays::hashCode (56 bytes)   callee is too large
                              @ 160   java.util.Arrays::hashCode (56 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 17   java.lang.Integer::intValue (5 bytes)
                              @ 28   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 51   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 56   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 61   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 10   java.lang.Class::isArray (0 bytes)   (intrinsic)
                              @ 179   java.lang.String::hashCode (55 bytes)   inline (hot)
                               \-> TypeProfile (1712/1712 counts) = java/lang/String
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 69   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 72   java.lang.UnsupportedOperationException::<init> (6 bytes)   not inlineable
                              @ 84   java.nio.file.Files::newByteChannel (26 bytes)
                                @ 6   java.util.HashSet::<init> (17 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 10   java.util.HashMap::<init> (8 bytes)
                                    @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                                @ 12   java.util.Collections::addAll (43 bytes)   callee is too large
                                @ 22   java.nio.file.Files::newByteChannel (11 bytes)
                                  @ 1   java.nio.file.Files::provider (10 bytes)
                                    @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                    @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                                  @ 7   java.nio.file.spi.FileSystemProvider::newByteChannel (0 bytes)   no static binding
                              @ 87   java.nio.channels.Channels::newInputStream (15 bytes)
                                @ 3   java.nio.channels.Channels::checkNotNull (37 bytes)   callee is too large
                                @ 11   sun.nio.ch.ChannelInputStream::<init> (25 bytes)
                                  @ 1   java.io.InputStream::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.util.HashSet::<init> (17 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 10   java.util.HashMap::<init> (8 bytes)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 12   java.util.Collections::addAll (43 bytes)   callee is too large
                              @ 22   java.nio.file.Files::newByteChannel (11 bytes)
                                @ 1   java.nio.file.Files::provider (10 bytes)
                                  @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                  @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                                @ 7   java.nio.file.spi.FileSystemProvider::newByteChannel (0 bytes)   no static binding
                              @ 1   java.nio.file.Files::provider (10 bytes)
                                @ 1   java.nio.file.Path::getFileSystem (0 bytes)   no static binding
                                @ 6   java.nio.file.FileSystem::provider (0 bytes)   no static binding
                              @ 7   java.nio.file.spi.FileSystemProvider::newByteChannel (0 bytes)   no static binding
                              @ 1   sun.nio.fs.UnixPath::toUnixPath (32 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 23  java/nio/file/ProviderMismatchException::<init> (not loaded)   not inlineable
                              @ 10   sun.nio.fs.UnixFileModeAttribute::toUnixMode (113 bytes)   callee is too large
                              @ 20   sun.nio.fs.UnixChannelFactory::newFileChannel (9 bytes)
                                @ 5   sun.nio.fs.UnixChannelFactory::newFileChannel (135 bytes)   callee is too large
                              @ 30  sun/nio/fs/UnixException::rethrowAsIOException (not loaded)   not inlineable
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 23  java/nio/file/ProviderMismatchException::<init> (not loaded)   not inlineable
                              @ 26   java.nio.file.attribute.FileAttribute::name (0 bytes)   not inlineable
                              @ 37   java.lang.String::equals (81 bytes)   callee is too large
                              @ 47   java.lang.String::equals (81 bytes)   callee is too large
                              @ 61   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 71   java.nio.file.attribute.FileAttribute::name (0 bytes)   not inlineable
                              @ 76   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 81   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 84   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 87   java.lang.UnsupportedOperationException::<init> (6 bytes)   not inlineable
                              @ 93   java.nio.file.attribute.FileAttribute::value (0 bytes)   not inlineable
                              @ 101   sun.nio.fs.UnixFileModeAttribute::toUnixMode (173 bytes)   callee is too large
                              @ 5   sun.nio.fs.UnixChannelFactory::newFileChannel (135 bytes)   callee is too large
                              @ 1   sun.nio.fs.UnixChannelFactory$Flags::toFlags (247 bytes)   callee is too large
                              @ 67   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 93   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 104   sun.nio.fs.UnixChannelFactory::open (447 bytes)   callee is too large
                              @ 112   sun.nio.fs.UnixPath::toString (30 bytes)
                                @ 16   sun.nio.fs.Util::toString (12 bytes)
                                  @ 8   java.lang.String::<init> (10 bytes)
                                    @ 6   java.lang.String::<init> (38 bytes)   callee is too large
                                @ 19   sun.nio.fs.UnixFileSystem::normalizeJavaPath (2 bytes)   no static binding
                              @ 131   sun.nio.ch.FileChannelImpl::open (16 bytes)
                                @ 12   sun.nio.ch.FileChannelImpl::<init> (74 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 18   org.springframework.asm.ClassReader::readShort (27 bytes)   inline (hot)
                              @ 65   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 264   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 1   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 12   org.springframework.util.LinkedMultiValueMap::containsKey (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                              @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 28   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 45   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 54   java.util.Collections::emptySet (4 bytes)
                              @ 67   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 79   java.util.HashSet::add (20 bytes)
                              @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 89   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 100   java.util.Set::size (0 bytes)   no static binding
                              @ 170   org.springframework.util.ConcurrentReferenceHashMap$Segment::createReferenceArray (5 bytes)
                              @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                              @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                  @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                    @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                    @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 221   java.util.Set::contains (0 bytes)   no static binding
                              @ 230   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 244   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 251   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)
                              @ 267   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 277   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   callee is too large
                              @ 282   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)
                              @ 319   org.springframework.util.ConcurrentReferenceHashMap::getLoadFactor (5 bytes)
                              @ 331  java/lang/Math::max (not loaded)   not inlineable
                              @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                  @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 347   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 338   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 4   java.util.HashMap$Node::getKey (5 bytes)   accessor
                              @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 11   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 27   java.util.List::get (0 bytes)   no static binding
                              @ 35   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)
                                @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 46   java.util.LinkedHashMap::keySet (25 bytes)
                                @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 49   java.util.HashSet::<init> (40 bytes)   callee is too large
                              @ 58   java.util.HashSet::remove (20 bytes)
                                @ 5   java.util.HashMap::remove (26 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                              @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::removeNode (291 bytes)   callee is too large
                              @ 69   org.springframework.util.LinkedMultiValueMap::keySet (10 bytes)
                                @ 4   java.util.Map::keySet                              @ 8   java.lang.Class::getName (21 bytes)   inline (hot)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 15   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)   inline (hot)
                                @ 7   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 23   java.util.HashSet::add (20 bytes)   inline (hot)
                               \-> TypeProfile (732/732 counts) = java/util/LinkedHashSet
                                @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                  @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                    @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                     \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                    @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                     \-> TypeProfile (384/412 counts) = java/util/HashMap
                                    @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                              @ 32   java.lang.Class::getModifiers (0 bytes)   (intrinsic)
                              @ 35   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                              @ 50   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)   inline (hot)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)   inline (hot)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)   inline (hot)
               !                    @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   too big
                                    @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   too big
                              @ 53   org.springframework.util.LinkedMultiValueMap::add (28 bytes)   inline (hot)
                               \-> TypeProfile (732/732 counts) = org/springframework/util/LinkedMultiValueMap
                                @ 5   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                                @ 10   java.util.HashMap::computeIfAbsent (309 bytes)   inline (hot)
                                 \-> TypeProfile (1193/1193 counts) = java/util/LinkedHashMap
                                  @ 13   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 57   java.util.HashMap::resize (359 bytes)   hot method too big
                                  @ 196   org.springframework.util.LinkedMultiValueMap$$Lambda$12/701141022::apply (5 bytes)   inline (hot)
                                   \-> TypeProfile (1082/1082 counts) = org/springframework/util/LinkedMultiValueMap$$Lambda$12
                                    @ 1   org.springframework.util.LinkedMultiValueMap::lambda$add$0 (8 bytes)   inline (hot)
                                      @ 4   java.util.LinkedList::<init> (10 bytes)   inline (hot)
                                        @ 1   java.util.AbstractSequentialList::<init> (5 bytes)   inline (hot)
                                          @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                            @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 263   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                    @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                  @ 303   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                    @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                                @ 21   java.util.LinkedList::add (7 bytes)   inline (hot)
                                  @ 2   java.util.LinkedList::linkLast (59 bytes)   inline (hot)
                                    @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 59   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                  @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                   \-> TypeProfile (1556/1556 counts) = java/util/LinkedHashMap
                                    @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 9   java.util.AbstractCollection::toArray (147 bytes)   inline (hot)
                                   \-> TypeProfile (1556/1556 counts) = java/util/LinkedHashMap$LinkedValues
                                    @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                                    @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                    @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                                    @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                      @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                                    @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                                      @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                        @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                          @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                     \-> TypeProfile (5124/5124 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                    @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                      @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                    @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                     \-> TypeProfile (1464/1464 counts) = java/util/LinkedHashMap$LinkedValueIterator
               !              @ 90   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::recursivelyCollectMetaAnnotations (155 bytes)   inline (hot)
                                @ 8   java.lang.Class::getName (21 bytes)   inline (hot)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 15   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)   inline (hot)
                                  @ 7   java.lang.String::startsWith (7 bytes)   inline (hot)
                                    @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 23   java.util.HashSet::add (20 bytes)   inline (hot)
                                  @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                    @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                      @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                      @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                       \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                      @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                       \-> TypeProfile (384/412 counts) = java/util/HashMap
                                      @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                @ 32   java.lang.Class::getModifiers (0 bytes)   (intrinsic)
                                @ 35   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                @ 50   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)   inline (hot)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (8 bytes)   inline (hot)
                                    @ 4   org.springframework.core.annotation.AnnotationUtils::getAnnotationAttributes (20 bytes)   inline (hot)
               !                      @ 4   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   too big
                                      @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   too big
                                @ 53   org.springframework.util.LinkedMultiValueMap::add (28 bytes)   inline (hot)
                                 \-> TypeProfile (732/732 counts) = org/springframework/util/LinkedMultiValueMap
                                  @ 5   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                                  @ 10   java.util.HashMap::computeIfAbsent (309 bytes)   inline (hot)
                                   \-> TypeProfile (1193/1193 counts) = java/util/LinkedHashMap
                                    @ 13   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 57   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 196   org.springframework.util.LinkedMultiValueMap$$Lambda$12/701141022::apply (5 bytes)   inline (hot)
                                     \-> TypeProfile (1082/1082 counts) = org/springframework/util/LinkedMultiValueMap$$Lambda$12
                                      @ 1   org.springframework.util.LinkedMultiValueMap::lambda$add$0 (8 bytes)   inline (hot)
                                        @ 4   java.util.LinkedList::<init> (10 bytes)   inline (hot)
                                          @ 1   java.util.AbstractSequentialList::<init> (5 bytes)   inline (hot)
                                            @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 263   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                      @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                    @ 303   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                      @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                                  @ 21   java.util.LinkedList::add (7 bytes)   inline (hot)
                                    @ 2   java.util.LinkedList::linkLast (59 bytes)   inline (hot)
                                      @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 59   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                  @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                  @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                    @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                     \-> TypeProfile (1556/1556 counts) = java/util/LinkedHashMap
                                      @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 9   java.util.AbstractCollection::toArray (147 bytes)   inline (hot)
                                     \-> TypeProfile (1556/1556 counts) = java/util/LinkedHashMap$LinkedValues
                                      @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                                      @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                                      @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                        @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                                      @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                                        @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                          @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                       \-> TypeProfile (5124/5124 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                      @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                        @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                      @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                       \-> TypeProfile (1464/1464 counts) = java/util/LinkedHashMap$LinkedValueIterator
               !                @ 90   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::recursivelyCollectMetaAnnotations (155 bytes)   recursive inlining is too deep
                              @ 5   java.lang.Object::hashCode (0 bytes)   native method
                               \-> TypeProfile (5246/5252 counts) = java/lang/Class
                              @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
 (0 bytes)   no static binding
                              @ 72   java.util.ArrayList::<init> (67 bytes)   callee is too large
                              @ 79   java.util.Collections::reverse (125 bytes)   callee is too large
                              @ 85   java.util.ArrayList::remove (77 bytes)   callee is too large
                              @ 93   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::<init> (26 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 112   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 125   org.springframework.util.LinkedMultiValueMap::get (14 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 132   org.springframework.util.ObjectUtils::isEmpty (113 bytes)   callee is too large
                              @ 141   java.util.Map::get (0 bytes)   no static binding
                              @ 159   java.util.Set::contains (0 bytes)   no static binding
                              @ 170   java.util.List::get (0 bytes)   no static binding
                              @ 182   java.util.HashSet::iterator (13 bytes)
                                @ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                                @ 7   java.util.Set::iterator (0 bytes)   no static binding
                              @ 191   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 201   java.util.Iterator::next (0 bytes)   no static binding
                              @ 215   java.util.LinkedHashMap::get (33 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                                @ 25   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   callee is too large
                              @ 231   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                               \-> TypeProfile (5117/5117 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                              @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                              @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                 \-> TypeProfile (737/737 counts) = java/lang/String
                                @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
               !              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)
                              @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   callee is too large
                              @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 3   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                              @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                  @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (56 bytes)   callee is too large
                              @ 9   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::getMergedAnnotationAttributes (244 bytes)   callee is too large
                              @ 23   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 28   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 32   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getClassName (5 bytes)
                                @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)
                              @ 35   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
               !              @ 52   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   callee is too large
                              @ 2   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 5   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (12 bytes)
                                @ 3   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                                @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                  @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                                   @ 17   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 21   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 38   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.System::arraycopy (0 bytes)   (intrinsic)
               @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                      @ 1   java.util.HashMap::<init> (11 bytes)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 1   java.util.AbstractList::<init> (10 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 46   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 56   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                              @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
                              @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 1   java.util.Map::size (0 bytes)   no static binding
                              @ 59   java.util.HashMap::tableSizeFor (59 bytes)   callee is too large
                              @ 77   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 82   java.util.Map::entrySet (0 bytes)   no static binding
                              @ 87   java.util.Set::iterator (0 bytes)   no static binding
                              @ 96   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 106   java.util.Iterator::next (0 bytes)   no static binding
                              @ 118   java.util.Map$Entry::getKey (0 bytes)   not inlineable
                              @ 127   java.util.Map$Entry::getValue (0 bytes)   not inlineable
                              @ 137   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 146   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                              @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                              @ 1   java.util.HashMap::<init> (11 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 12   org.springframework.util.StringUtils::containsText (37 bytes)   callee is too large
                              @ 17   java.util.Optional::isPresent (13 bytes)   not inlineable
                              @ 40   java.lang.CharSequence::length (0 bytes)   no static binding
                              @ 55   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 58   java.lang.Class::isArray (0 bytes)   native method
                              @ 65   java.lang.reflect.Array::getLength (0 bytes)   native method
                              @ 88   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 105   java.util.Map::isEmpty (0 bytes)   no static binding
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 7   java.util.ArrayList::elementData (7 bytes)
                              @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11  org/springframework/beans/factory/support/MethodOverrides::isEmpty (not loaded)   not inlineable
                              @ 1   org.springframework.util.StringUtils::hasText (24 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                                @ 12   org.springframework.util.StringUtils::containsText (37 bytes)   callee is too large
                              @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 1   java.util.AbstractList::<init> (10 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 31   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 50   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 12                                @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
 java.util.Set::contains (0 bytes)   no static binding
                              @ 23   java.lang.String::equals (81 bytes)   callee is too large
                              @ 32   java.lang.String::equals (81 bytes)   callee is too large
                              @ 57   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 4   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                              @ 5   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)
                                @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 14   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 19   java.util.LinkedHashMap::entrySet (27 bytes)
                                @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 22   java.util.Set::iterator (0 bytes)   no static binding
                              @ 31   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 41   java.util.Iterator::next (0 bytes)   no static binding
                              @ 53   java.util.Map$Entry::getValue (0 bytes)   not inlineable
               !              @ 76   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   callee is too large
               !              @ 125   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   callee is too large
                              @ 159   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 170   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
               !              @ 174   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 245   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
                              @ 256   org.springframework.asm.Type::getClassName (172 bytes)   callee is too large
               !              @ 260   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 294   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 348   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 366   java.util.Map$Entry::setValue (0 bytes)   not inlineable
                              @ 381   java.util.Map$Entry::getKey (0 bytes)   not inlineable
                              @ 388   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 3   java.lang.String::indexOf (25 bytes)   inline (hot)
                                @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                              @ 25   java.util.ArrayList::fastRemove (57 bytes)   callee is too large
                              @ 56   java.lang.Object::equals (11 bytes)   no static binding
                              @ 64   java.util.ArrayList::fastRemove (57 bytes)   callee is too large
                              @ 3   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 10   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 19   java.util.Iterator::next (0 bytes)   no static binding
                              @ 29   java.util.AbstractCollection::add (8 bytes)   no static binding
                              @ 1   java.util.List::size (0 bytes)   no static binding
                              @ 56   java.util.List::listIterator (0 bytes)   no static binding
                              @ 64   java.util.List::listIterator (0 bytes)   no static binding
                              @ 74   java.util.List::size (0 bytes)   no static binding
                              @ 91   java.util.ListIterator::next (0 bytes)   not inlineable
                              @ 100   java.util.ListIterator::previous (0 bytes)   not inlineable
                              @ 105   java.util.ListIterator::set (0 bytes)   not inlineable
                              @ 113   java.util.ListIterator::set (0 bytes)   not inlineable
                              @ 40   java.util.Collections::swap (25 bytes)
                                @ 8   java.util.List::get (0 bytes)   no static binding
                                @ 13   java.util.List::set (0 bytes)   no static binding
                                @ 18   java.util.List::set (0 bytes)   no static binding
                              @ 1   java.lang.CharSequence::length (0 bytes)   no static binding
                              @ 16   java.lang.CharSequence::charAt (0 bytes)   no static binding
                              @ 21   java.lang.Character::isWhitespace (5 bytes)
                                @ 1   java.lang.Character::isWhitespace (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::isWhitespace (0 bytes)   no static binding
                              @ 68   java.lang.Object::equals (11 bytes)   no static binding
                              @ 107   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 143   java.lang.Object::equals (11 bytes)   no static binding
                              @ 200   java.lang.Object::equals (11 bytes)   no static binding
                              @ 224   java.util.HashMap$TreeNode::removeTreeNode (632 bytes)   not inlineable
                              @ 283   java.util.HashMap::afterNodeRemoval (1 bytes)   no static binding
                              @ 1   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
                              @ 4   java.util.Map::isEmpty (0 bytes)   no static binding
                              @ 1   java.util.AbstractSet::<init> (5 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.util.Collection::size (0 bytes)   no static binding
                              @ 24   java.lang.Math::max (11 bytes)
                              @ 27   java.util.HashMap::<init> (8 bytes)
                                @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 35   java.util.AbstractCollection::addAll (42 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 35   org.springframework.util.ObjectUtils::nullSafeHashCode (183 bytes)   callee is too large
                                                        @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
    @ 4   org.springframework.beans.factory.config.BeanDefinitionHolder::<init> (32 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 13   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 13   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 17   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 31   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.util.AbstractCollection::size (0 bytes)   no static binding
                              @ 9   java.util.AbstractCollection::iterator (0 bytes)   no static binding
                              @ 22   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 32   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 39   java.util.Iterator::next (0 bytes)   no static binding
                              @ 52   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 62   java.util.AbstractCollection::finishToArray (83 bytes)   callee is too large
                              @ 5   java.util.HashMap::containsKey (18 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                              @ 1   org.springframework.beans.factory.annotation.AnnotatedBeanDefinition::getMetadata (0 bytes)   not inlineable
                              @ 8   org.springframework.core.type.AnnotationMetadata::getAnnotationTypes (0 bytes)   not inlineable
                              @ 20   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 18   java.util.Set::iterator (0 bytes)   no static binding
                              @ 27   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 37   java.util.Iterator::next (0 bytes)   no static binding
                              @ 50   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (12 bytes)
                                @ 3   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                                @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                  @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                              @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                    @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                      @ 1   java.util.HashMap::<init> (11 bytes)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 66   org.springframework.core.type.AnnotationMetadata::getMetaAnnotationTypes (0 bytes)   not inlineable
                              @ 73   org.springframework.context.annotation.AnnotationBeanNameGenerator::isStereotypeWithNameValue (71 bytes)   callee is too large
                              @ 83   java.util.LinkedHashMap::get (33 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                                @ 25   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   callee is too large
                              @ 105   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 120   java.lang.String::equals (81 bytes)   callee is too large
                              @ 134   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 139   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 144   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 149   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 154   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 159   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 162   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 165   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 16   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 29   org.springframework.util.ObjectUtils::nullSafeHashCode (48 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::hasText (17 bytes)
                                @ 1   org.springframework.util.StringUtils::hasText (24 bytes)
                                  @ 5   java.lang.String::isEmpty (14 bytes)
                                  @ 12   org.springframework.util.StringUtils::containsText (37 bytes)   callee is too large
                                @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 9   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 23   org.springframework.beans.factory.support.AbstractBeanDefinition::validate (36 bytes)   callee is too large
                              @ 35   org.springframework.beans.factory.config.BeanDefinition::getResourceDescription (0 bytes)   no static binding
                              @ 44   org.springframework.beans.factory.BeanDefinitionStoreException::<init> (54 bytes)   not inlineable
                              @ 53   java.util.Map::get (0 bytes)   no static binding
                              @ 67   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAllowBeanDefinitionOverriding (5 bytes)
                              @ 80   org.springframework.beans.factory.support.BeanDefinitionOverrideException::<init> (64 bytes)   not inlineable
                              @ 85   org.springframework.beans.factory.config.BeanDefinition::getRole (0 bytes)   no static binding
                              @ 91   org.springframework.beans.factory.config.BeanDefinition::getRole (0 bytes)   no static binding
                              @ 103   org.apache.commons.logging.LogAdapter$JavaUtilLog::isInfoEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 119  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 124  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 128  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 133  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 137  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 142  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 146  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 151  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 154  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 157   org.apache.commons.logging.LogAdapter$JavaUtilLog::info (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 167   java.lang.Object::equals (11 bytes)   no static binding
                              @ 177   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 193  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 198  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 202  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 207  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 211  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 216  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 220  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 225  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 228  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 231   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 243   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 259  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 264  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 268  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 273  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 277  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 282  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 286  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 291  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 294  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 297   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 308   java.util.Map::put (0 bytes)   no static binding
                              @ 318   org.springframework.beans.factory.support.AbstractBeanFactory::hasBeanCreationStarted (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 338   java.util.Map::put (0 bytes)   no static binding
                              @ 352   java.util.List::size (0 bytes)   no static binding
                              @ 359   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 370   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 379   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 396   java.util.Set::contains (0 bytes)   no static binding
                              @ 412   java.util.LinkedHashSet::<init> (27 bytes)
                                @ 3   java.util.Collection::size (0 bytes)   no static binding
                                @ 11   java.lang.Math::max (11 bytes)
                                @ 17   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                                @ 22   java.util.AbstractCollection::addAll (42 bytes)   callee is too large
                              @ 420   java.util.HashSet::remove (20 bytes)
                                @ 5   java.util.HashMap::remove (26 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::removeNode (291 bytes)   callee is too large
                              @ 455   java.util.Map::put (0 bytes)   no static binding
                              @ 466   java.util.List::add (0 bytes)   no static binding
                              @ 477   java.util.Set::remove (0 bytes)   no static binding
                              @ 494   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 502   org.springframework.beans.factory.support.DefaultListableBeanFactory::resetBeanDefinition (134 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasMethodOverrides (23 bytes)
                                @ 11  org/springframework/beans/factory/support/MethodOverrides::isEmpty (not loaded)   not inlineable
                              @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)
                              @ 20   org.springframework.beans.factory.support.BeanDefinitionValidationException::<init> (6 bytes)   not inlineable
                              @ 25   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)
               !m             @ 32   org.springframework.beans.factory.support.AbstractBeanDefinition::prepareMethodOverrides (68 bytes)   callee is too large
                              @ 4   org.springframework.context.annotation.ScopeMetadata::<init> (18 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   org.springframework.beans.factory.annotation.AnnotatedBeanDefinition::getMetadata (0 bytes)   not inlineable
                              @ 30   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (9 bytes)
                                @ 2   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 5   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (12 bytes)
                                  @ 3   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                                  @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                    @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                      @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                        @ 1   java.util.HashMap::<init> (11 bytes)
                                          @ 1   java.util.AbstractMap::<init> (5 bytes)
                                            @ 1   java.lang.Object::<init> (1 bytes)
                                        @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 45   org.springframework.core.annotation.AnnotationAttributes::getString (11 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                              @ 48   org.springframework.context.annotation.ScopeMetadata::setScopeName (12 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 55   org.springframework.core.annotation.AnnotationAttributes::getEnum (11 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                              @ 80   org.springframework.context.annotation.ScopeMetadata::setScopedProxyMode (12 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   org.springframework.context.annotation.AnnotationBeanNameGenerator::determineBeanNameFromAnnotation (179 bytes)   callee is too large
                              @ 17   org.springframework.util.StringUtils::hasText (24 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                                @ 12   org.springframework.util.StringUtils::containsText (37 bytes)   callee is too large
                              @ 28   org.springframework.context.annotation.AnnotationBeanNameGenerator::buildDefaultBeanName (6 bytes)
                                @ 2   org.springframework.context.annotation.AnnotationBeanNameGenerator::buildDefaultBeanName (31 bytes)   no static binding
                              @ 2   org.springframework.context.annotation.AnnotationBeanNameGenerator::buildDefaultBeanName (31 bytes)   no static binding
                              @ 1   org.springframework.beans.factory.config.BeanDefinition::getBeanClassName (0 bytes)   no static binding
                              @ 18   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 22   org.springframework.util.ClassUtils::getShortName (50 bytes)   callee is too large
                              @ 27   java.beans.Introspector::decapitalize (68 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::hasLength (17 bytes)
                                @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                  @ 5   java.lang.String::isEmpty (14 bytes)
                                @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 9   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 16   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 26   java.lang.String::length (6 bytes)
                              @ 35   java.lang.String::substring (79 bytes)   callee is too large
                              @ 44   java.lang.String::replace (127 bytes)   callee is too large
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 5   java.lang.String::length (6 bytes)
                              @ 14   java.lang.String::length (6 bytes)
                              @ 23   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 26   java.lang.Character::isUpperCase (5 bytes)
                                @ 1   java.lang.Character::isUpperCase (25 bytes)
                                  @ 1   java.lang.Character::getType (9 bytes)
                                    @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                    @ 5   java.lang.CharacterData::getType (0 bytes)   no static binding
                                  @ 9   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 13   java.lang.CharacterData::isOtherUppercase (2 bytes)   no static binding
                              @ 34   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 37   java.lang.Character::isUpperCase (5 bytes)
                                @ 1   java.lang.Character::isUpperCase (25 bytes)
                                  @ 1   java.lang.Character::getType (9 bytes)
                                    @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                    @ 5   java.lang.CharacterData::getType (0 bytes)   no static binding
                                  @ 9   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 13   java.lang.CharacterData::isOtherUppercase (2 bytes)   no static binding
                              @ 46   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 55   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 64   java.lang.String::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 8   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                              @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                @ 1   java.util.Map::values (0 bytes)   no static binding
                                @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 4   java.util.HashMap::size (5 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::getType (0 bytes)   no static binding
                              @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)
                              @ 4   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 1   java.lang.Character::isUpperCase (25 bytes)
                                @ 1   java.lang.Character::getType (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::getType (0 bytes)   no static binding
                                @ 9   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 13   java.lang.CharacterData::isOtherUppercase (2 bytes)   no static binding
                              @ 1   java.lang.Character::getType (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::getType (0 bytes)   no static binding
                              @ 9   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 13   java.lang.CharacterData::isOtherUppercase (2 bytes)   no static binding
                              @ 2   java.lang.CharacterDataLatin1::getPropertiesEx (11 bytes)
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 31   org.springframework.core.type.StandardAnnotationMetadata::<init> (19 bytes)
                                @ 2   org.springframework.core.type.StandardClassMetadata::<init> (16 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 7   java.lang.Class::getAnnotations (11 bytes)
                                  @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                                  @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                    @ 1   java.util.Map::values (0 bytes)   no static binding
                                    @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 45   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)
                              @ 11   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   callee is too large
                              @ 18   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 34   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
               !              @ 39   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 42   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   callee is too large
                              @ 55   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 60   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 64   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 69   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 76   org.springframework.core.NestedIOException::<init> (7 bytes)   not inlineable
               !              @ 90   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 95   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   callee is too large
                              @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 18   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
               !              @ 21   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
               !              @ 30   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (69 bytes)   callee is too large
                              @ 38   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 52   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 57   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 61   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 69   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 73   org.springframework.core.NestedIOException::<init> (7 bytes)   not inlineable
                              @ 89   org.springframework.context.annotation.ConfigurationClassParser::access$1000 (5 bytes)
               !              @ 93   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 98   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   callee is too large
               !              @ 107   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (99 bytes)   callee is too large
               !              @ 3   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   callee is too large
                              @ 12   sun.misc.Resource::getURL (0 bytes)   no static binding
                              @ 7   java.lang.String::length (6 bytes)
                              @ 19   java.util.HashMap::get (23 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 7   org.springframework.util.ClassUtils::resolvePrimitiveClassName (30 bytes)
                                @ 7   java.lang.String::length (6 bytes)
                                @ 19   java.util.HashMap::get (23 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 19   java.util.HashMap::get (23 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 37   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 46   java.lang.String::length (6 bytes)
                              @ 51   java.lang.String::length (6 bytes)
                              @ 55   java.lang.String::substring (79 bytes)   callee is too large
               !              @ 61   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 69   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 72   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 79   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 88   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 97   java.lang.String::length (6 bytes)
                              @ 101   java.lang.String::length (6 bytes)
                              @ 106   java.lang.String::substring (79 bytes)   callee is too large
               !              @ 112   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 120   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 123   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 130   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 139   java.lang.String::length (6 bytes)
                              @ 142   java.lang.String::substring (56 bytes)   callee is too large
               !              @ 148   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 156   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 159   java.lang.Object::getClass (0 bytes)   intrinsic
               !              @ 169   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 176   java.lang.Class::forName (53 bytes)   callee is too large
                              @ 185   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 200   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 207   java.lang.String::substring (79 bytes)   callee is too large
                              @ 210   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 215   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 223   java.lang.String::substring (56 bytes)   callee is too large
                              @ 226   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 229   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 238   java.lang.Class::forName (53 bytes)   callee is too large
                              @ 2   java.lang.System::getSecurityManager (4 bytes)
                              @ 12   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 17   sun.misc.VM::isSystemDomainLoader (10 bytes)
                              @ 24   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 31   sun.misc.VM::isSystemDomainLoader (10 bytes)
                              @ 42   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 49   java.lang.Class::forName0 (0 bytes)   native method
                              @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 11   sun.misc.JarIndex::get (49 bytes)   callee is too large
                              @ 24   java.util.LinkedList::size (5 bytes)
                              @ 36   java.util.LinkedList::toArray (84 bytes)   callee is too large
                              @ 71   java.net.URL::<init> (8 bytes)
               !                @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 78   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 89   java.util.HashMap::get (23 bytes)   no static binding
                              @ 108  sun/misc/URLClassPath$JarLoader$3::<init> (not loaded)   not inlineable
                              @ 115   java.security.AccessController::doPrivileged (0 bytes)   native method
               !              @ 125   sun.misc.URLClassPath$JarLoader::getIndex (22 bytes)
               !                @ 1   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                                @ 13  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 139   java.lang.String::lastIndexOf (11 bytes)
                                @ 7   java.lang.String::lastIndexOf (25 bytes)
                                  @ 21   java.lang.String::lastIndexOf (151 bytes)   callee is too large
                              @ 167   java.lang.String::substring (79 bytes)   callee is too large
                              @ 170   sun.misc.JarIndex::merge (113 bytes)   callee is too large
                              @ 181   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 201   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 204   java.util.Set::add (0 bytes)   no static binding
               !              @ 226   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 240  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 250   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)   no static binding
               !              @ 266   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 273   sun.misc.URLClassPath$JarLoader::validIndex (94 bytes)   callee is too large
                              @ 285  sun/misc/InvalidJarIndexException::<init> (not loaded)   not inlineable
               !              @ 302   sun.misc.URLClassPath$JarLoader::getIndex (22 bytes)
               !                @ 1   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                                @ 13  java/lang/InternalError::<init> (not loaded)   not inlineable
               !              @ 316   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
                              @ 336   sun.misc.JarIndex::get (49 bytes)   callee is too large
                              @ 345   java.util.LinkedList::size (5 bytes)
               !m             @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                              @ 16   java.util.jar.JarFile$JarFileEntry::<init> (11 bytes)
                                @ 7   java.util.jar.JarEntry::<init> (6 bytes)
                                  @ 2   java.util.zip.ZipEntry::<init> (146 bytes)   callee is too large
                              @ 2   java.util.jar.JarFile::getEntry (22 bytes)   no static binding
                              @ 1   org.springframework.core.io.AbstractResource::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   org.springframework.core.io.ResourceLoader::getResource (0 bytes)   not inlineable
               !              @ 20   org.springframework.core.io.DefaultResourceLoader::getResource (144 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 10   java.util.Set::iterator (0 bytes)   no static binding
                              @ 17   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 26   java.util.Iterator::next (0 bytes)   no static binding
                              @ 38  org/springframework/core/io/ProtocolResolver::resolve (not loaded)   not inlineable
                              @ 59   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 67   org.springframework.core.io.DefaultResourceLoader::getResourceByPath (13 bytes)
                                @ 6   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   no static binding
                                @ 9  org/springframework/core/io/DefaultResourceLoader$ClassPathContextResource::<init> (not loaded)   not inlineable
                              @ 74   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 87   java.lang.String::length (6 bytes)
                              @ 90   java.lang.String::substring (56 bytes)   callee is too large
                              @ 94   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   no static binding
                              @ 97   org.springframework.core.io.ClassPathResource::<init> (51 bytes)   callee is too large
                              @ 106   java.net.URL::<init> (7 bytes)
                                @ 3   java.net.URL::<init> (8 bytes)
               !                  @ 4   java.net.URL::<init> (543 bytes)   callee is too large
                              @ 111   org.springframework.util.ResourceUtils::isFileURL (38 bytes)   callee is too large
                              @ 122  org/springframework/core/io/FileUrlResource::<init> (not loaded)   not inlineable
                              @ 133   org.springframework.core.io.UrlResource::<init> (37 bytes)   callee is too large
                              @ 140   org.springframework.core.io.DefaultResourceLoader::getResourceByPath (13 bytes)
                                @ 6   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   no static binding
                                @ 9  org/springframework/core/io/DefaultResourceLoader$ClassPathContextResource::<init> (not loaded)   not inlineable
                              @ 2   java.util.Set::add (0 bytes)   no static binding
                              @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
               !              @ 11   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getAnnotations (64 bytes)   callee is too large
                              @ 14   java.util.Set::iterator (0 bytes)   no static binding
                              @ 23   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 33   java.util.Iterator::next (0 bytes)   no static binding
                              @ 45   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 48   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 59   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 69   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 72   java.lang.String::equals (81 bytes)   callee is too large
                              @ 83   org.springframework.context.annotation.ConfigurationClassParser::collectImports (108 bytes)   callee is too large
                              @ 93   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 98   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getAnnotationAttributes (103 bytes)   callee is too large
                              @ 101   java.util.Set::addAll (0 bytes)   no static binding
                              @ 4   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 12   org.springframework.core.type.AnnotationMetadata::getAnnotationTypes (0 bytes)   not inlineable
                              @ 17   java.util.Set::iterator (0 bytes)   no static binding
                              @ 24   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 33   java.util.Iterator::next (0 bytes)   no static binding
               !              @ 45   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getRelated (111 bytes)   callee is too large
                              @ 48   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::hashCode (13 bytes)
                                      @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                                      @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 23  java/util/ConcurrentModificationException::<init> (not loaded)   not inlineable
                              @ 35  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 13   org.springframework.util.ClassUtils::convertClassNameToResourcePath (15 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 16   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 24   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 33   org.springframework.core.io.ResourceLoader::getResource (0 bytes)   not inlineable
                              @ 41   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)   no static binding
                              @ 49   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 62   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 68   java.lang.String::substring (79 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 76   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 83   java.lang.String::substring (56 bytes)   callee is too large
                              @ 86   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 89   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 98   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 103   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 108   org.springframework.util.ClassUtils::convertClassNameToResourcePath (15 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 11   java.lang.String::replace (127 bytes)   callee is too large
                              @ 111   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 116   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 119   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 130   org.springframework.core.io.ResourceLoader::getResource (0 bytes)   not inlineable
                              @ 139   org.springframework.core.io.Resource::exists (0 bytes)   no static binding
                              @ 150   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)   no static binding
                              @ 1   org.springframework.core.io.AbstractFileResolvingResource::<init> (5 bytes)
                                @ 1   org.springframework.core.io.AbstractResource::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   org.springframework.util.StringUtils::cleanPath (281 bytes)   callee is too large
                              @ 18   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 26   java.lang.String::substring (56 bytes)   callee is too large
               !              @ 44   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 0   java.util.Collections::emptyIterator (4 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 26   java.io.UnixFileSystem::normalize (75 bytes)   inlining prohibited by policy
                              @ 40   java.io.UnixFileSystem::prefixLength (25 bytes)
                                @ 1   java.lang.String::length (6 bytes)
                                @ 11   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !              @ 3   sun.misc.URLClassPath$FileLoader::getResource (164 bytes)   callee is too large
                              @ 12   sun.misc.Resource::getURL (0 bytes)   no static binding
                              @ 4   java.io.FileInputStream::readBytes (0 bytes)   native method
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 9   java.net.URL::openConnection (9 bytes)
                                @ 5   java.net.URLStreamHandler::openConnection (0 bytes)   no static binding
                              @ 14   java.net.URLConnection::getPermission (4 bytes)   no static binding
                              @ 24   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 40   java.security.Permission::getActions (0 bytes)   no static binding
                              @ 45   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 54   java.security.Permission::getName (5 bytes)
                              @ 57   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 71   java.security.Permission::getActions (0 bytes)   no static binding
                              @ 76   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 97   java.net.JarURLConnection::getJarFileURL (5 bytes)
                              @ 105   java.net.URL::getHost (5 bytes)
                              @ 110   java.net.URL::getPort (5 bytes)
                              @ 113   java.lang.SecurityManager::checkConnect (117 bytes)   not inlineable
                              @ 12   java.lang.ClassLoader::getResource (36 bytes)   callee is too large
                              @ 20   java.lang.ClassLoader::getBootstrapResource (23 bytes)
                                @ 0   java.lang.ClassLoader::getBootstrapClassPath (4 bytes)
                                  @ 0   sun.misc.Launcher::getBootstrapClassPath (4 bytes)
                                @ 6   sun.misc.URLClassPath::getResource (7 bytes)
                                  @ 3   sun.misc.URLClassPath::getResource (83 bytes)   callee is too large
                                @ 15   sun.misc.Resource::getURL (0 bytes)   no static binding
                              @ 30   java.lang.ClassLoader::findResource (2 bytes)   no static binding
                              @ 6   java.net.URLClassLoader$2::<init> (15 bytes)
                                @ 11   java.lang.Object::<init> (1 bytes)
                              @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
               !              @ 29   sun.misc.URLClassPath::checkURL (12 bytes)
               !                @ 1   sun.misc.URLClassPath::check (123 bytes)   callee is too large
                              @ 29   java.lang.String::equals (81 bytes)   callee is too large
                              @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   callee is too large
                              @ 57   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   callee is too large
                              @ 6   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                              @ 18   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 32   java.util.Map::get (0 bytes)   no static binding
                              @ 49   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
               !              @ 85   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getRelated (111 bytes)   callee is too large
                              @ 88   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::hashCode (13 bytes)
                                      @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                                      @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 26   java.util.Collections::emptySet (4 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   inline (hot)
                                @ 10   java.lang.String::endsWith (17 bytes)   inline (hot)
                                  @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 35   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   inline (hot)
                                @ 12   sun.misc.URLClassPath$JarLoader$1::<init> (10 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 19   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 28   java.security.PrivilegedActionException::getException (5 bytes)   exception method
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)   inline (hot)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)   inline (hot)
                                 \-> TypeProfile (2963/2963 counts) = java/util/jar/JarFile
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   inline (hot)
                                    @ 22   java.util.zip.ZipFile::ensureOpen (37 bytes)   inline (hot)
                                    @ 34   java.util.zip.ZipCoder::getBytes (192 bytes)   inline (hot)
                                      @ 1   java.util.zip.ZipCoder::encoder (35 bytes)   inline (hot)
                                        @ 12   sun.nio.cs.UTF_8::newEncoder (10 bytes)   executed < MinInliningThreshold times
                                         \-> TypeProfile (1/1 counts) = sun/nio/cs/UTF_8
                                        @ 18   java.nio.charset.CharsetEncoder::onMalformedInput (26 bytes)   executed < MinInliningThreshold times
                                        @ 24   java.nio.charset.CharsetEncoder::onUnmappableCharacter (26 bytes)   executed < MinInliningThreshold times
                                      @ 4   java.nio.charset.CharsetEncoder::reset (11 bytes)   inline (hot)
                                        @ 1   java.nio.charset.CharsetEncoder::implReset (1 bytes)   inline (hot)
                                      @ 9   java.lang.String::toCharArray (25 bytes)   inline (hot)
                                        @ 20   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 17   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)   inline (hot)
                                      @ 62   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   hot method too big
                                      @ 89   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 38   java.util.zip.ZipFile::getEntry (0 bytes)   native method
                                    @ 57   java.util.zip.ZipFile::getZipEntry (251 bytes)   inline (hot)
                                      @ 4   java.util.zip.ZipEntry::<init> (43 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 12   java.util.zip.ZipFile::getEntryFlag (0 bytes)   native method
                                      @ 33   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 57   java.util.zip.ZipCoder::isUTF8 (5 bytes)   accessor
                                      @ 86   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   too big
                                      @ 106   java.util.zip.ZipCoder::toString (190 bytes)   too big
                                      @ 115   java.util.zip.ZipFile::getEntryTime (0 bytes)   native method
                                      @ 124   java.util.zip.ZipFile::getEntryCrc (0 bytes)   native method
                                      @ 133   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
                                      @ 142   java.util.zip.ZipFile::getEntryCSize (0 bytes)   native method
                                      @ 151   java.util.zip.ZipFile::getEntryMethod (0 bytes)   native method
                                      @ 161   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 165   java.util.zip.ZipEntry::setExtra0 (360 bytes)   too big
                                      @ 170   java.util.zip.ZipFile::getEntryBytes (0 bytes)   native method
                                      @ 193   java.util.zip.ZipCoder::isUTF8 (5 bytes)   accessor
                                      @ 222   java.util.zip.ZipCoder::toStringUTF8 (45 bytes)   too big
                                      @ 242   java.util.zip.ZipCoder::toString (190 bytes)   too big
                                    @ 76   java.util.zip.ZipFile::freeEntry (0 bytes)   native method
                                  @ 16   java.util.jar.JarFile$JarFileEntry::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.jar.JarEntry::<init> (6 bytes)   inline (hot)
                                      @ 2   java.util.zip.ZipEntry::<init> (146 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 45   java.util.Objects::requireNonNull (15 bytes)   inline (hot)
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   inline (hot)
                                @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                                @ 10   sun.net.www.ParseUtil::encodePath (336 bytes)   already compiled into a medium method
                                @ 13   java.net.URL::<init> (8 bytes)   inline (hot)
               !                  @ 4   java.net.URL::<init> (543 bytes)   hot method too big
               !                @ 24   sun.misc.URLClassPath::check (123 bytes)   too big
                                @ 51   sun.misc.URLClassPath$JarLoader$2::<init> (26 bytes)   inline (hot)
                                  @ 22   sun.misc.Resource::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 71   java.util.HashSet::<init> (16 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 9   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   hot method too big
              s               @ 2   sun.misc.URLClassPath::getLookupCache (98 bytes)   callee is too large
              s               @ 15   sun.misc.URLClassPath::getNextLoader (88 bytes)   callee is too large
               !              @ 26   sun.misc.URLClassPath$Loader::findResource (108 bytes)   no static binding
                              @ 1   java.lang.String::length (6 bytes)
                              @ 12   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::<init> (6 bytes)
                                @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 30   java.nio.ByteBuffer::allocate (22 bytes)
                                @ 8   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 18   java.nio.HeapByteBuffer::<init> (13 bytes)
                                  @ 9   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                              @ 35   java.nio.CharBuffer::allocate (22 bytes)
                                @ 8   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 18   java.nio.HeapCharBuffer::<init> (13 bytes)
                                  @ 9   java.nio.CharBuffer::<init> (22 bytes)
                                    @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                              @ 42  sun/nio/cs/ThreadLocalCoders::decoderFor (not loaded)   not inlineable
                              @ 48   java.nio.charset.CharsetDecoder::onMalformedInput (26 bytes)
                                @ 21   java.nio.charset.CharsetDecoder::implOnMalformedInput (1 bytes)
                              @ 54   java.nio.charset.CharsetDecoder::onUnmappableCharacter (26 bytes)
                                @ 21   java.nio.charset.CharsetDecoder::implOnUnmappableCharacter (1 bytes)
                              @ 61   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 110   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 129   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 138   java.nio.Buffer::clear (20 bytes)
                              @ 172   sun.net.www.ParseUtil::unescape (17 bytes)
                                @ 7   java.lang.String::substring (79 bytes)   callee is too large
                                @ 12   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 175   java.nio.HeapByteBuffer::put (16 bytes)
                                @ 6   java.nio.Buffer::nextPutIndex (31 bytes)
                                  @ 15  java/nio/BufferOverflowException::<init> (not loaded)   not inlineable
                                @ 9   java.nio.HeapByteBuffer::ix (7 bytes)
                              @ 188   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 207   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 223   java.nio.Buffer::flip (20 bytes)
                              @ 229   java.nio.Buffer::clear (20 bytes)
                              @ 235   java.nio.charset.CharsetDecoder::reset (11 bytes)
                                @ 1   java.nio.charset.CharsetDecoder::implReset (1 bytes)
               !              @ 245   java.nio.charset.CharsetDecoder::decode (287 bytes)   callee is too large
                              @ 252   java.nio.charset.CoderResult::isError (14 bytes)
                              @ 264   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 272   java.nio.charset.CharsetDecoder::flush (49 bytes)   callee is too large
                              @ 279   java.nio.charset.CoderResult::isError (14 bytes)
                              @ 291   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 298   java.nio.Buffer::flip (20 bytes)
                              @ 301   java.nio.CharBuffer::toString (13 bytes)
                                @ 2   java.nio.Buffer::position (5 bytes)
                                @ 6   java.nio.Buffer::limit (5 bytes)
               !                @ 9   java.nio.HeapCharBuffer::toString (30 bytes)
                                  @ 17   java.lang.String::<init> (82 bytes)   callee is too large
                                  @ 26   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 304   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 312   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   callee is too large
                              @ 1   java.net.URLClassLoader$2::run (16 bytes)
                                @ 4   java.net.URLClassLoader::access$000 (5 bytes)
                                @ 12   sun.misc.URLClassPath::findResource (47 bytes)   callee is too large
                              @ 4   java.net.URLClassLoader::access$000 (5 bytes)
                              @ 12   sun.misc.URLClassPath::findResource (47 bytes)   callee is too large
               !m             @ 43   java.nio.channels.spi.AbstractInterruptibleChannel::close (37 bytes)   callee is too large
                              @ 55   java.io.FileInputStream$1::<init> (10 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
              s!              @ 58   java.io.FileDescriptor::closeAll (215 bytes)   callee is too large
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 19   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   too big
                              @ 1   java.io.FileInputStream::available0 (0 bytes)   native method
                              @ 2   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 9   org.springframework.context.annotation.AnnotationConfigUtils::attributesForRepeatable (103 bytes)   callee is too large
                              @ 4   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 12   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                              @ 17   org.springframework.context.annotation.AnnotationConfigUtils::addAttributesIfNotNull (16 bytes)
                                @ 6   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                  @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                    @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                      @ 1   java.util.HashMap::<init> (11 bytes)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                                @ 9   java.util.HashSet::add (20 bytes)
                                  @ 8   java.util.HashMap::put (13 bytes)
                                    @ 2   java.util.HashMap::hash (20 bytes)
                                      @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                    @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 23   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                              @ 39   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 51   java.util.Map::get (0 bytes)   no static binding
                              @ 89   org.springframework.context.annotation.AnnotationConfigUtils::addAttributesIfNotNull (16 bytes)
                                @ 6   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                  @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                    @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                      @ 1   java.util.HashMap::<init> (11 bytes)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                                @ 9   java.util.HashSet::add (20 bytes)
                                  @ 8   java.util.HashMap::put (13 bytes)
                                    @ 2   java.util.HashMap::hash (20 bytes)
                                      @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                    @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 99   java.util.Collections::unmodifiableSet (9 bytes)
                                @ 5   java.util.Collections$UnmodifiableSet::<init> (6 bytes)
                                  @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                  @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 9   java.util.Set::add (0 bytes)   no static binding
                              @ 5   java.util.Collections$UnmodifiableSet::<init> (6 bytes)
                                @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                              @ 1   java.util.HashSet::size (8 bytes)   inline (hot)
                               \-> TypeProfile (198/6371 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (6173/6371 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.HashMap::size (5 bytes)   accessor
                              @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                              @ 34   java.util.HashSet::iterator (13 bytes)   inline (hot)
                               \-> TypeProfile (198/6371 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (6173/6371 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                                 \-> TypeProfile (962/6518 counts) = java/util/HashMap
                                 \-> TypeProfile (5556/6518 counts) = java/util/LinkedHashMap
                                  @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                                 \-> TypeProfile (962/6518 counts) = java/util/HashMap$KeySet
                                 \-> TypeProfile (5556/6518 counts) = java/util/LinkedHashMap$LinkedKeySet
                                  @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (20718/20718 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (198/6371 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (6173/6371 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 5   java.util.Collections$UnmodifiableCollection$1::<init> (26 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                                @ 17   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 17   java.util.Collection::iterator (0 bytes)   no static binding
              s!              @ 3   sun.net.www.protocol.file.Handler::openConnection (194 bytes)   callee is too large
                              @ 1   java.net.URL::getHost (5 bytes)
                              @ 12   java.lang.String::equals (81 bytes)   callee is too large
                              @ 21   java.lang.String::equals (81 bytes)   callee is too large
                              @ 30   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 75   java.net.URL::getFile (5 bytes)
                              @ 78   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 82   java.net.URL::getRef (5 bytes)
                              @ 97   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 102   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 106   java.net.URL::getRef (5 bytes)
                              @ 109   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 112   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 115   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 118   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 121   java.net.URL::<init> (9 bytes)
                                @ 5   java.net.URL::<init> (11 bytes)
                                  @ 7   java.net.URL::<init> (308 bytes)   callee is too large
                              @ 133   java.net.URL::openConnection (111 bytes)   callee is too large
                              @ 143   java.net.URL::openConnection (9 bytes)
                                @ 5   java.net.URLStreamHandler::openConnection (0 bytes)   no static binding
                              @ 169   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 174   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 178   java.net.URL::toExternalForm (9 bytes)
                                @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                              @ 181   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 184   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 187   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 41   java.net.URL::getPath (5 bytes)
               !              @ 44   sun.net.www.ParseUtil::decode (316 bytes)   callee is too large
                              @ 47   java.io.File::<init> (47 bytes)   callee is too large
                              @ 56   sun.net.www.protocol.file.Handler::createFileURLConnection (10 bytes)
                                @ 6   sun.net.www.protocol.file.FileURLConnection::<init> (38 bytes)   callee is too large
                              @ 2   java.net.URLConnection::<init> (44 bytes)   callee is too large
                              @ 15   sun.net.www.MessageHeader::<init> (9 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 5   sun.net.www.MessageHeader::grow (92 bytes)   callee is too large
                              @ 27   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 52   java.util.List::add (0 bytes)   no static binding
                              @ 66   java.util.List::add (0 bytes)   no static binding
                              @ 15   java.lang.Class::getResourceAsStream (26 bytes)
                                @ 2   java.lang.Class::resolveName (99 bytes)   callee is too large
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
               !                @ 16   java.lang.ClassLoader::getSystemResourceAsStream (21 bytes)
                                  @ 1   java.lang.ClassLoader::getSystemResource (19 bytes)
                                    @ 0   java.lang.ClassLoader::getSystemClassLoader (32 bytes)   callee is too large
                                    @ 9   java.lang.ClassLoader::getBootstrapResource (23 bytes)
                                      @ 0   java.lang.ClassLoader::getBootstrapClassPath (4 bytes)
                                        @ 0   sun.misc.Launcher::getBootstrapClassPath (4 bytes)
                                      @ 6   sun.misc.URLClassPath::getResource (7 bytes)
                                        @ 3   sun.misc.URLClassPath::getResource (83 bytes)   callee is too large
                                      @ 15   sun.misc.Resource::getURL (0 bytes)   no static binding
                                    @ 15   java.lang.ClassLoader::getResource (36 bytes)   callee is too large
                                  @ 10   java.net.URL::openStream (8 bytes)
                                    @ 1   java.net.URL::openConnection (9 bytes)
                                      @ 5   java.net.URLStreamHandler::openConnection (0 bytes)   no static binding
                                    @ 4   java.net.URLConnection::getInputStream (10 bytes)   no static binding
               !                @ 22   java.lang.ClassLoader::getResourceAsStream (22 bytes)   no static binding
               !              @ 37   java.lang.ClassLoader::getResourceAsStream (22 bytes)   no static binding
               !              @ 48   java.lang.ClassLoader::getSystemResourceAsStream (21 bytes)
                                @ 1   java.lang.ClassLoader::getSystemResource (19 bytes)
                                  @ 0   java.lang.ClassLoader::getSystemClassLoader (32 bytes)   callee is too large
                                  @ 9   java.lang.ClassLoader::getBootstrapResource (23 bytes)
                                    @ 0   java.lang.ClassLoader::getBootstrapClassPath (4 bytes)
                                      @ 0   sun.misc.Launcher::getBootstrapClassPath (4 bytes)
                                    @ 6   sun.misc.URLClassPath::getResource (7 bytes)
                                      @ 3   sun.misc.URLClassPath::getResource (83 bytes)   callee is too large
                                    @ 15   sun.misc.Resource::getURL (0 bytes)   no static binding
                                  @ 15   java.lang.ClassLoader::getResource (36 bytes)   callee is too large
                                @ 10   java.net.URL::openStream (8 bytes)
                                  @ 1   java.net.URL::openConnection (9 bytes)
                                    @ 5   java.net.URLStreamHandler::openConnection (0 bytes)   no static binding
                                  @ 4   java.net.URLConnection::getInputStream (10 bytes)   no static binding
                              @ 64   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 68   org.springframework.core.io.ClassPathResource::getDescription (83 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 76   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 79   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 82   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 2   java.lang.ClassLoader::getResource (36 bytes)   callee is too large
                              @ 13   java.net.URL::openConnection (9 bytes)
                                @ 5   java.net.URLStreamHandler::openConnection (0 bytes)   no static binding
                              @ 18   java.net.URLConnection::getInputStream (10 bytes)   no static binding
                              @ 38   java.net.JarURLConnection::getJarFile (0 bytes)   no static binding
                              @ 57   java.util.WeakHashMap::containsKey (14 bytes)
                                @ 2   java.util.WeakHashMap::getEntry (72 bytes)   callee is too large
                              @ 70   java.util.WeakHashMap::put (162 bytes)   callee is too large
                              @ 113   java.util.WeakHashMap::put (162 bytes)   callee is too large
                              @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 10   java.io.File::<init> (47 bytes)   callee is too large
                              @ 17   java.io.FileInputStream::<init> (110 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                              @ 1   java.util.HashSet::size (8 bytes)   inline (hot)
                               \-> TypeProfile (267/7198 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (6931/7198 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.HashMap::size (5 bytes)   accessor
                              @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                              @ 34   java.util.HashSet::iterator (13 bytes)   inline (hot)
                               \-> TypeProfile (267/7198 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (6931/7198 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                                 \-> TypeProfile (1030/7886 counts) = java/util/HashMap
                                 \-> TypeProfile (6856/7886 counts) = java/util/LinkedHashMap
                                  @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                                 \-> TypeProfile (1030/7886 counts) = java/util/HashMap$KeySet
                                 \-> TypeProfile (6856/7886 counts) = java/util/LinkedHashMap$LinkedKeySet
                                  @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (23064/23064 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (267/7199 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (6932/7199 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (56 bytes)   inline (hot)
                                @ 9   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::getMergedAnnotationAttributes (244 bytes)   inline (hot)
                                  @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                    @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                     \-> TypeProfile (9095/9095 counts) = java/util/LinkedHashMap
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 11   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                   \-> TypeProfile (863/863 counts) = java/util/LinkedList
                                    @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                  @ 27   java.util.LinkedList::get (14 bytes)   inline (hot)
                                    @ 2   java.util.LinkedList::checkElementIndex (22 bytes)   inline (hot)
                                      @ 2   java.util.LinkedList::isElementIndex (18 bytes)   inline (hot)
                                    @ 7   java.util.LinkedList::node (65 bytes)   too big
                                  @ 35   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)   inline (hot)
                                    @ 2   java.util.LinkedHashMap::<init> (16 bytes)   inline (hot)
                                      @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 12   java.util.HashMap::putMapEntries (154 bytes)   inline (hot)
                                        @ 1   java.util.HashMap::size (5 bytes)   accessor
                                        @ 59   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                        @ 82   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                                          @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                            @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 87   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                                         \-> TypeProfile (1786/1786 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                          @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                            @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                              @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                         \-> TypeProfile (3572/3572 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                                        @ 106   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                          @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                            @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                        @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                        @ 127   java.util.HashMap$Node::getValue (5 bytes)   accessor
                                        @ 137   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                        @ 146   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                          @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                          @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                            @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                              @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                          @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                           \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                          @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                            @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                              @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                          @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                          @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                          @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                        @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                  @ 46   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                    @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 49   java.util.HashSet::<init> (40 bytes)   inline (hot)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 24   java.lang.Math::max (11 bytes)   (intrinsic)
                                    @ 27   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                      @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                        @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                    @ 35   java.util.AbstractCollection::addAll (42 bytes)   inline (hot)
                                      @ 29   java.util.HashSet::add (20 bytes)   already compiled into a medium method
                                  @ 58   java.util.HashSet::remove (20 bytes)   inline (hot)
                                    @ 5   java.util.HashMap::remove (26 bytes)   inline (hot)
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 9   java.util.HashMap::removeNode (291 bytes)   too big
                                  @ 69   org.springframework.util.LinkedMultiValueMap::keySet (10 bytes)   inline (hot)
                                  @ 72   java.util.ArrayList::<init> (67 bytes)   inline (hot)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 31   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                    @ 50   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                  @ 79   java.util.Collections::reverse (125 bytes)   inline (hot)
                                    @ 1   java.util.ArrayList::size (5 bytes)   accessor
                                    @ 40   java.util.Collections::swap (25 bytes)   inline (hot)
                                      @ 8   java.util.ArrayList::get (11 bytes)   inline (hot)
                                        @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                        @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                      @ 13   java.util.ArrayList::set (20 bytes)   inline (hot)
                                        @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                        @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                      @ 18   java.util.ArrayList::set (20 bytes)   inline (hot)
                                        @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                        @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                  @ 85   java.util.ArrayList::remove (77 bytes)   inline (hot)
                                    @ 25   java.util.ArrayList::fastRemove (57 bytes)   too big
                                    @ 56   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 64   java.util.ArrayList::fastRemove (57 bytes)   too big
                                  @ 93   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                    @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                   \-> TypeProfile (2589/2589 counts) = java/util/ArrayList$Itr
                                    @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                  @ 112   java.util.ArrayList$Itr::next (66 bytes)   inline (hot)
                                    @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                                    @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                                  @ 125   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                    @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                     \-> TypeProfile (9095/9095 counts) = java/util/LinkedHashMap
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 132   org.springframework.util.ObjectUtils::isEmpty (113 bytes)   inline (hot)
                                    @ 55   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                    @ 58   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                    @ 88   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                      @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                  @ 141   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                   \-> TypeProfile (1726/1726 counts) = java/util/LinkedHashMap
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                      @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                    @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 23   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 28   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 32   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getClassName (5 bytes)   inline (hot)
                                  @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)   accessor
                                @ 35   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 40   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 43   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
               !                @ 52   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   hot method too big
                              @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (7 bytes)   inline (hot)
                               \-> TypeProfile (5132/5132 counts) = org/springframework/core/type/classreading/AnnotationMetadataReadingVisitor
                                @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (56 bytes)   inline (hot)
                                  @ 9   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::getMergedAnnotationAttributes (244 bytes)   inline (hot)
                                    @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                      @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                       \-> TypeProfile (9107/9107 counts) = java/util/LinkedHashMap
                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                        @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                          @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 11   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                     \-> TypeProfile (865/865 counts) = java/util/LinkedList
                                      @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                    @ 27   java.util.LinkedList::get (14 bytes)   inline (hot)
                                      @ 2   java.util.LinkedList::checkElementIndex (22 bytes)   inline (hot)
                                        @ 2   java.util.LinkedList::isElementIndex (18 bytes)   inline (hot)
                                      @ 7   java.util.LinkedList::node (65 bytes)   too big
                                    @ 35   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)   inline (hot)
                                      @ 2   java.util.LinkedHashMap::<init> (16 bytes)   inline (hot)
                                        @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                          @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 12   java.util.HashMap::putMapEntries (154 bytes)   inline (hot)
                                          @ 1   java.util.HashMap::size (5 bytes)   accessor
                                          @ 59   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                          @ 82   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                                            @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                              @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                          @ 87   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                                           \-> TypeProfile (1786/1786 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                            @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                              @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                                @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                           \-> TypeProfile (3572/3572 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                                          @ 106   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                            @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                              @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                          @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                          @ 127   java.util.HashMap$Node::getValue (5 bytes)   accessor
                                          @ 137   java.util.HashMap::hash (20 bytes)   inline (hot)
                                            @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                          @ 146   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                            @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                            @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                              @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                                @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                              @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                            @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                             \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                            @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                              @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                                @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                              @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                            @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                            @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                            @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                          @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                    @ 46   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                      @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                          @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 49   java.util.HashSet::<init> (40 bytes)   inline (hot)
                                      @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 24   java.lang.Math::max (11 bytes)   (intrinsic)
                                      @ 27   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                        @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                          @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                          @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                      @ 35   java.util.AbstractCollection::addAll (42 bytes)   inline (hot)
                                        @ 29   java.util.HashSet::add (20 bytes)   already compiled into a medium method
                                    @ 58   java.util.HashSet::remove (20 bytes)   inline (hot)
                                      @ 5   java.util.HashMap::remove (26 bytes)   inline (hot)
                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                        @ 9   java.util.HashMap::removeNode (291 bytes)   too big
                                    @ 69   org.springframework.util.LinkedMultiValueMap::keySet (10 bytes)   inline (hot)
                                    @ 72   java.util.ArrayList::<init> (67 bytes)   inline (hot)
                                      @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 31   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 50   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                    @ 79   java.util.Collections::reverse (125 bytes)   inline (hot)
                                      @ 1   java.util.ArrayList::size (5 bytes)   accessor
                                      @ 40   java.util.Collections::swap (25 bytes)   inline (hot)
                                        @ 8   java.util.ArrayList::get (11 bytes)   inline (hot)
                                          @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                          @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                        @ 13   java.util.ArrayList::set (20 bytes)   inline (hot)
                                          @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                          @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                        @ 18   java.util.ArrayList::set (20 bytes)   inline (hot)
                                          @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                          @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                    @ 85   java.util.ArrayList::remove (77 bytes)   inline (hot)
                                      @ 25   java.util.ArrayList::fastRemove (57 bytes)   too big
                                      @ 56   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 64   java.util.ArrayList::fastRemove (57 bytes)   too big
                                    @ 93   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                      @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                     \-> TypeProfile (2592/2592 counts) = java/util/ArrayList$Itr
                                      @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                    @ 112   java.util.ArrayList$Itr::next (66 bytes)   inline (hot)
                                      @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                                      @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                                    @ 125   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                      @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                       \-> TypeProfile (9107/9107 counts) = java/util/LinkedHashMap
                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                        @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                          @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 132   org.springframework.util.ObjectUtils::isEmpty (113 bytes)   inline (hot)
                                      @ 55   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 58   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                      @ 88   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                        @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                    @ 141   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                     \-> TypeProfile (1728/1728 counts) = java/util/LinkedHashMap
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                      @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                  @ 23   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                  @ 28   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 32   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getClassName (5 bytes)   inline (hot)
                                    @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)   accessor
                                  @ 35   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 40   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 43   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
               !                  @ 52   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   hot method too big
                              @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)   inline (hot)
                              @ 30   java.util.List::iterator (0 bytes)   no static binding
                              @ 39   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 49   java.util.Iterator::next (0 bytes)   no static binding
                              @ 61   java.io.Closeable::close (0 bytes)   not inlineable
              s               @ 84   java.lang.Throwable::addSuppressed (72 bytes)   callee is too large
                              @ 150   java.io.Closeable::close (0 bytes)   not inlineable
              s               @ 164   java.lang.Throwable::addSuppressed (72 bytes)   callee is too large
                              @ 171   java.io.Closeable::close (0 bytes)   not inlineable
                              @ 121   java.io.Closeable::close (0 bytes)   not inlineable
              s               @ 192   java.lang.Throwable::addSuppressed (72 bytes)   callee is too large
                              @ 2   sun.net.www.URLConnection::<init> (22 bytes)
                                @ 2   java.net.URLConnection::<init> (44 bytes)   callee is too large
                                @ 15   sun.net.www.MessageHeader::<init> (9 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 5   sun.net.www.MessageHeader::grow (92 bytes)   callee is too large
                              @ 2   java.io.FileInputStream::open0 (0 bytes)   native method
                              @ 4   java.io.FileInputStream::access$000 (5 bytes)
                                @ 1   java.io.FileInputStream::close0 (0 bytes)   native method
                              @ 1   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 6   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 9   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
               !              @ 20   org.springframework.context.annotation.ConfigurationClassParser::processMemberClasses (225 bytes)   callee is too large
                              @ 24   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 31   org.springframework.context.annotation.AnnotationConfigUtils::attributesForRepeatable (13 bytes)
                                @ 2   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 9   org.springframework.context.annotation.AnnotationConfigUtils::attributesForRepeatable (103 bytes)   callee is too large
                              @ 34   java.util.Set::iterator (0 bytes)   no static binding
                              @ 41   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 50   java.util.Iterator::next (0 bytes)   no static binding
               !              @ 73   org.springframework.context.annotation.ConfigurationClassParser::processPropertySource (246 bytes)   callee is too large
                              @ 87   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 92   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 96   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 99   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 104   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 109   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 112   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 115   org.apache.commons.logging.LogAdapter$JavaUtilLog::info (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 124   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 131   org.springframework.context.annotation.AnnotationConfigUtils::attributesForRepeatable (13 bytes)
                                @ 2   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 9   org.springframework.context.annotation.AnnotationConfigUtils::attributesForRepeatable (103 bytes)   callee is too large
                              @ 136   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 149   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 155   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 162   java.util.Set::iterator (0 bytes)   no static binding
                              @ 171   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 181   java.util.Iterator::next (0 bytes)   no static binding
                              @ 198   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 201   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 206   org.springframework.context.annotation.ComponentScanAnnotationParser::parse (482 bytes)   callee is too large
                              @ 213   java.util.Set::iterator (0 bytes)   no static binding
                              @ 222   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 232   java.util.Iterator::next (0 bytes)   no static binding
                              @ 244   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanDefinition (5 bytes)
                              @ 247   org.springframework.beans.factory.config.BeanDefinition::getOriginatingBeanDefinition (0 bytes)   no static binding
                              @ 261   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanDefinition (5 bytes)
               !              @ 272   org.springframework.context.annotation.ConfigurationClassUtils::checkConfigurationClassCandidate (235 bytes)   callee is too large
                              @ 281   org.springframework.beans.factory.config.BeanDefinition::getBeanClassName (0 bytes)   no static binding
                              @ 288   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanName (5 bytes)
                              @ 291   org.springframework.context.annotation.ConfigurationClassParser::parse (31 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !                @ 11   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                                @ 24   org.springframework.context.annotation.ConfigurationClass::<init> (92 bytes)   callee is too large
                                @ 27   org.springframework.context.annotation.ConfigurationClassParser::processConfigurationClass (123 bytes)   callee is too large
                              @ 305   org.springframework.context.annotation.ConfigurationClassParser::getImports (25 bytes)
                                @ 4   java.util.LinkedHashSet::<init> (10 bytes)
                                  @ 6   java.util.HashSet::<init> (18 bytes)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                                @ 12   java.util.LinkedHashSet::<init> (10 bytes)
                                  @ 6   java.util.HashSet::<init> (18 bytes)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                                @ 20   org.springframework.context.annotation.ConfigurationClassParser::collectImports (108 bytes)   callee is too large
               !              @ 309   org.springframework.context.annotation.ConfigurationClassParser::processImports (355 bytes)   callee is too large
                              @ 313   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 318   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (9 bytes)
                                @ 2   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 5   org.springframework.context.annotation.AnnotationConfigUtils::attributesFor (12 bytes)
                                  @ 3   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                                  @ 8   org.springframework.core.annotation.AnnotationAttributes::fromMap (27 bytes)
                                    @ 23   org.springframework.core.annotation.AnnotationAttributes::<init> (22 bytes)
                                      @ 2   java.util.LinkedHashMap::<init> (16 bytes)
                                        @ 1   java.util.HashMap::<init> (11 bytes)
                                          @ 1   java.util.AbstractMap::<init> (5 bytes)
                                            @ 1   java.lang.Object::<init> (1 bytes)
                                        @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 332   org.springframework.core.annotation.AnnotationAttributes::getStringArray (11 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                              @ 341   org.springframework.core.annotation.AnnotationAttributes::getClass (11 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                              @ 378   org.springframework.core.env.PropertyResolver::resolveRequiredPlaceholders (0 bytes)   not inlineable
                              @ 390   org.springframework.context.annotation.ConfigurationClass::addImportedResource (13 bytes)
                                @ 6   java.util.Map::put (0 bytes)   no static binding
               !              @ 401   org.springframework.context.annotation.ConfigurationClassParser::retrieveBeanMethodMetadata (241 bytes)   callee is too large
                              @ 408   java.util.Set::iterator (0 bytes)   no static binding
                              @ 417   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 427   java.util.Iterator::next (0 bytes)   no static binding
                              @ 445   org.springframework.context.annotation.BeanMethod::<init> (7 bytes)
                                @ 3   org.springframework.context.annotation.ConfigurationMethod::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 448   org.springframework.context.annotation.ConfigurationClass::addBeanMethod (12 bytes)
                                @ 5   java.util.Set::add (0 bytes)   no static binding
                              @ 457   org.springframework.context.annotation.ConfigurationClassParser::processInterfaces (107 bytes)   callee is too large
                              @ 461   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 464   org.springframework.core.type.ClassMetadata::hasSuperClass (0 bytes)   not inlineable
                              @ 473   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 476   org.springframework.core.type.ClassMetadata::getSuperClassName (0 bytes)   not inlineable
                              @ 492   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 504   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 519   java.util.Map::put (0 bytes)   no static binding
                              @ 526   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getSuperClass (53 bytes)   callee is too large
                              @ 1   org.springframework.util.CollectionUtils::isEmpty (19 bytes)   inline (hot)
                                @ 5   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                 \-> TypeProfile (2140/2140 counts) = java/util/LinkedList
                                  @ 1   java.util.LinkedList::size (5 bytes)   accessor
                              @ 14   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 20   java.util.AbstractSequentialList::iterator (5 bytes)   inline (hot)
                                @ 1   java.util.AbstractList::listIterator (6 bytes)   inline (hot)
                                  @ 2   java.util.LinkedList::listIterator (15 bytes)   inline (hot)
                                    @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)   inline (hot)
                                      @ 2   java.util.LinkedList::isPositionIndex (18 bytes)   inline (hot)
                                    @ 11   java.util.LinkedList$ListItr::<init> (47 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 35   java.util.LinkedList::node (65 bytes)   inline (hot)
                              @ 29   java.util.LinkedList$ListItr::hasNext (20 bytes)   inline (hot)
                               \-> TypeProfile (18134/18134 counts) = java/util/LinkedList$ListItr
                              @ 40   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 45   java.util.LinkedList$ListItr::next (56 bytes)   inline (hot)
                                @ 1   java.util.LinkedList$ListItr::checkForComodification (23 bytes)   inline (hot)
                                @ 5   java.util.LinkedList$ListItr::hasNext (20 bytes)   inline (hot)
                              @ 50   java.lang.StringBuilder::append (9 bytes)   inline (hot)
                                @ 2   java.lang.String::valueOf (14 bytes)   inline (hot)
                                  @ 10   java.lang.String::toString (2 bytes)   inline (hot)
                                   \-> TypeProfile (20021/20024 counts) = java/lang/String
                                @ 5   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 54   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 60   java.util.LinkedList$ListItr::hasNext (20 bytes)   inline (hot)
                              @ 71   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 29   java.util.LinkedList$ListItr::hasNext (20 bytes)   inline (hot)
                              @ 80   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1   java.io.FileInputStream::close0 (0 bytes)   native method
                              @ 4   java.util.Collection::isEmpty (0 bytes)   no static binding
               !              @ 1   sun.net.www.protocol.file.FileURLConnection::connect (184 bytes)   callee is too large
              s               @ 18   java.net.URLConnection::getFileNameMap (30 bytes)
                                @ 12  sun/net/www/MimeTable::loadTable (not loaded)   not inlineable
                                @ 26  java/net/URLConnection$1::<init> (not loaded)   not inlineable
                              @ 26   java.lang.StringBuffer::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 46   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 54  java/text/Collator::getInstance (not loaded)   not inlineable
                              @ 57   java.util.Collections::sort (8 bytes)
                                @ 2   java.util.List::sort (66 bytes)   no static binding
                              @ 69   java.util.List::size (0 bytes)   no static binding
                              @ 83   java.util.List::get (0 bytes)   no static binding
              s               @ 97   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
              s               @ 105   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
              s               @ 122   java.lang.StringBuffer::toString (36 bytes)   callee is too large
                              @ 125   java.lang.String::getBytes (14 bytes)
               !                @ 10   java.lang.StringCoding::encode (64 bytes)   callee is too large
                              @ 128   java.io.ByteArrayInputStream::<init> (26 bytes)
                                @ 1   java.io.InputStream::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 145   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.io.InputStream::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.lang.Object::<init> (1 bytes)
                              @ 30   java.io.File::getPath (5 bytes)
                              @ 38   java.lang.System::getSecurityManager (4 bytes)
                              @ 48   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 59   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 64   java.io.File::isInvalid (47 bytes)   callee is too large
                              @ 76   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 85   java.io.FileDescriptor::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
              s               @ 96   java.io.FileDescriptor::attach (73 bytes)   callee is too large
                              @ 106   java.io.FileInputStream::open (6 bytes)
                                @ 2   java.io.FileInputStream::open0 (0 bytes)   native method
               !              @ 1   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMemberClasses (238 bytes)   callee is too large
                              @ 6   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 19   java.util.Collection::size (0 bytes)   no static binding
                              @ 24   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 30   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 39   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 49   java.util.Iterator::next (0 bytes)   no static binding
                              @ 61   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 64   org.springframework.context.annotation.ConfigurationClassUtils::isConfigurationCandidate (20 bytes)
                                @ 1   org.springframework.context.annotation.ConfigurationClassUtils::isFullConfigurationCandidate (12 bytes)
                                  @ 3   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
               !                @ 8   org.springframework.context.annotation.ConfigurationClassUtils::isLiteConfigurationCandidate (121 bytes)   callee is too large
                              @ 72   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 75   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 81   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 84   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 89   java.lang.String::equals (81 bytes)   callee is too large
                              @ 99   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 110   org.springframework.core.OrderComparator::sort (20 bytes)
                                @ 1   java.util.ArrayList::size (5 bytes)
                                @ 14   java.util.ArrayList::sort (48 bytes)   callee is too large
                              @ 115   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::<init> (26 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 124   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 134   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 149   java.util.ArrayDeque::contains (53 bytes)   callee is too large
                              @ 168   org.springframework.context.annotation.ConfigurationClassParser$CircularImportProblem::<init> (70 bytes)   not inlineable
                              @ 171   org.springframework.beans.factory.parsing.FailFastProblemReporter::error (9 bytes)
                                @ 5   org.springframework.beans.factory.parsing.BeanDefinitionParsingException::<init> (17 bytes)   not inlineable
                              @ 184   java.util.ArrayDeque::push (6 bytes)
                                @ 2   java.util.ArrayDeque::addFirst (53 bytes)   callee is too large
                              @ 191   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::asConfigClass (42 bytes)   callee is too large
                              @ 194   org.springframework.context.annotation.ConfigurationClassParser::processConfigurationClass (123 bytes)   callee is too large
                              @ 214   java.util.ArrayDeque::pop (5 bytes)
                                @ 1   java.util.ArrayDeque::removeFirst (19 bytes)
                                  @ 1   java.util.ArrayDeque::pollFirst (42 bytes)   callee is too large
                                  @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 201   java.util.ArrayDeque::pop (5 bytes)
                                @ 1   java.util.ArrayDeque::removeFirst (19 bytes)
                                  @ 1   java.util.ArrayDeque::pollFirst (42 bytes)   callee is too large
                                  @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 18   java.lang.Class::getDeclaredClasses (14 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 10   java.lang.Class::getDeclaredClasses0 (0 bytes)   native method
                              @ 28   java.util.ArrayList::<init> (61 bytes)   callee is too large
               !              @ 66   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (69 bytes)   callee is too large
                              @ 69   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 89   org.springframework.context.annotation.ConfigurationClassParser::access$1000 (5 bytes)
                              @ 93   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
               !              @ 96   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 108   org.springframework.core.type.classreading.SimpleMetadataReader::getClassMetadata (5 bytes)
                              @ 113   org.springframework.core.type.ClassMetadata::getMemberClassNames (0 bytes)   not inlineable
                              @ 125   java.util.ArrayList::<init> (61 bytes)   callee is too large
               !              @ 163   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (99 bytes)   callee is too large
                              @ 166   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 181   org.springframework.context.annotation.ConfigurationClassParser::access$1100 (5 bytes)
                              @ 184   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 196   org.springframework.context.annotation.ConfigurationClassParser::access$1100 (5 bytes)
                              @ 203   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 208   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 213   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 218   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 221   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 224   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
               !m             @ 18   java.io.FileInputStream::close (62 bytes)   callee is too large
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 78   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 8   org.springframework.beans.BeanMetadataAttribute::<init> (21 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 11   org.springframework.core.AttributeAccessorSupport::setAttribute (32 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 16   java.util.Map::put (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 16   java.util.Map::put (0 bytes)   no static binding
                              @ 27   org.springframework.core.AttributeAccessorSupport::removeAttribute (17 bytes)   no static binding
                              @ 3   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                              @ 19   java.util.Map::get (0 bytes)   no static binding
                              @ 1   java.io.File::getPath (5 bytes)
                              @ 5   sun.net.DefaultProgressMeteringPolicy::shouldMeterInput (2 bytes)
                              @ 11   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 14   java.io.InputStream::available (2 bytes)   no static binding
                              @ 1   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 17   org.springframework.core.type.StandardClassMetadata::getIntrospectedClass (5 bytes)
               !              @ 20   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (69 bytes)   callee is too large
                              @ 26   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
               !              @ 31   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (99 bytes)   callee is too large
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getMemberClassNames (8 bytes)
                                @ 4   org.springframework.util.StringUtils::toStringArray (14 bytes)
                                  @ 5   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (56 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.config.BeanDefinition::getBeanClassName (0 bytes)   no static binding
                              @ 12   org.springframework.beans.factory.config.BeanDefinition::getFactoryMethodName (0 bytes)   no static binding
                              @ 34   org.springframework.beans.factory.annotation.AnnotatedBeanDefinition::getMetadata (0 bytes)   not inlineable
                              @ 39   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 44   java.lang.String::equals (81 bytes)   callee is too large
                              @ 54   org.springframework.beans.factory.annotation.AnnotatedBeanDefinition::getMetadata (0 bytes)   not inlineable
                              @ 74   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)
                              @ 84   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   callee is too large
                              @ 96   org.springframework.core.type.StandardAnnotationMetadata::<init> (19 bytes)
                                @ 2   org.springframework.core.type.StandardClassMetadata::<init> (16 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 7   java.lang.Class::getAnnotations (11 bytes)
                                  @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                                  @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                    @ 1   java.util.Map::values (0 bytes)   no static binding
                                    @ 9   java.util.Collection::toArray (0 bytes)   no static binding
               !              @ 105   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 114   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)
                              @ 128   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 143   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 148   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 152   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 155   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 160   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 168   org.springframework.context.annotation.ConfigurationClassUtils::isFullConfigurationCandidate (12 bytes)
                                @ 3   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
                              @ 180   org.springframework.beans.factory.config.BeanDefinition::setAttribute (10 bytes)   no static binding
               !              @ 189   org.springframework.context.annotation.ConfigurationClassUtils::isLiteConfigurationCandidate (121 bytes)   callee is too large
                              @ 201   org.springframework.beans.factory.config.BeanDefinition::setAttribute (10 bytes)   no static binding
                              @ 212   org.springframework.context.annotation.ConfigurationClassUtils::getOrder (32 bytes)
                                @ 3   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   org.springframework.core.type.AnnotatedTypeMetadata::getAnnotationAttributes (0 bytes)   not inlineable
                                @ 19   java.util.Map::get (0 bytes)   no static binding
                              @ 228   org.springframework.beans.factory.config.BeanDefinition::setAttribute (10 bytes)   no static binding
                              @ 1   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 8   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 11   org.springframework.core.type.AnnotationMetadata::getAnnotatedMethods (0 bytes)   not inlineable
                              @ 18   java.util.Set::size (0 bytes)   no static binding
                              @ 39   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
               !              @ 44   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 49   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)
                              @ 60   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 63   org.springframework.core.type.AnnotationMetadata::getAnnotatedMethods (0 bytes)   not inlineable
                              @ 72   java.util.Set::size (0 bytes)   no static binding
                              @ 78   java.util.Set::size (0 bytes)   no static binding
                              @ 92   java.util.Set::size (0 bytes)   no static binding
                              @ 97   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 104   java.util.Set::iterator (0 bytes)   no static binding
                              @ 113   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 123   java.util.Iterator::next (0 bytes)   no static binding
                              @ 134   java.util.Set::iterator (0 bytes)   no static binding
                              @ 143   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 153   java.util.Iterator::next (0 bytes)   no static binding
                              @ 165   org.springframework.core.type.MethodMetadata::getMethodName (0 bytes)   not inlineable
                              @ 172   org.springframework.core.type.MethodMetadata::getMethodName (0 bytes)   not inlineable
                              @ 177   java.lang.String::equals (81 bytes)   callee is too large
                              @ 187   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 204   java.util.HashSet::size (8 bytes)
                                @ 4   java.util.HashMap::size (5 bytes)
                              @ 210   java.util.Set::size (0 bytes)   no static binding
                              @ 234   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 5   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 11   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 23   java.util.Map::get (0 bytes)   no static binding
                              @ 37   org.springframework.context.annotation.ConfigurationClass::isImported (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 44   org.springframework.context.annotation.ConfigurationClass::isImported (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 52   org.springframework.context.annotation.ConfigurationClass::mergeImportedBy (15 bytes)
                                @ 8   java.util.Set::addAll (0 bytes)   no static binding
                              @ 61   java.util.Map::remove (0 bytes)   no static binding
                              @ 71   java.util.Map::values (0 bytes)   no static binding
                              @ 78   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 82  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 87   java.util.Collection::removeIf (51 bytes)   no static binding
                              @ 95   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (35 bytes)
                                @ 1   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                                @ 17   org.springframework.core.type.StandardClassMetadata::getIntrospectedClass (5 bytes)
               !                @ 20   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (69 bytes)   callee is too large
                                @ 26   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
               !                @ 31   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (99 bytes)   callee is too large
                              @ 102   org.springframework.context.annotation.ConfigurationClassParser::doProcessConfigurationClass (532 bytes)   callee is too large
                              @ 116   java.util.Map::put (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 21   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 32   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 43   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 54   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 63   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 68   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)
                              @ 78   org.springframework.core.type.classreading.SimpleMetadataReader::getResource (5 bytes)
                              @ 1   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 17   org.springframework.context.annotation.ConfigurationClassParser::isChainedImportOnStack (68 bytes)   callee is too large
                              @ 36   org.springframework.context.annotation.ConfigurationClassParser$CircularImportProblem::<init> (70 bytes)   not inlineable
                              @ 39   org.springframework.beans.factory.parsing.FailFastProblemReporter::error (9 bytes)
                                @ 5   org.springframework.beans.factory.parsing.BeanDefinitionParsingException::<init> (17 bytes)   not inlineable
                              @ 52   java.util.ArrayDeque::push (6 bytes)
                                @ 2   java.util.ArrayDeque::addFirst (53 bytes)   callee is too large
                              @ 56   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 65   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 75   java.util.Iterator::next (0 bytes)   no static binding
                              @ 89   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::isAssignable (48 bytes)   callee is too large
                              @ 97   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::loadClass (53 bytes)   callee is too large
                              @ 106   org.springframework.beans.BeanUtils::instantiateClass (10 bytes)
                                @ 2   org.springframework.util.Assert::isAssignable (8 bytes)
                                  @ 4   org.springframework.util.Assert::isAssignable (25 bytes)
                                    @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                      @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                    @ 12   java.lang.Class::isAssignableFrom (0 bytes)   native method
                                    @ 21   org.springframework.util.Assert::assignableCheckFailed (94 bytes)   callee is too large
               !                @ 6   org.springframework.beans.BeanUtils::instantiateClass (84 bytes)   callee is too large
                              @ 128  org/springframework/context/annotation/ParserStrategyUtils::invokeAwareMethods (not loaded)   not inlineable
                              @ 149   org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler::handle (57 bytes)   callee is too large
                              @ 158   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 161  org/springframework/context/annotation/ImportSelector::selectImports (not loaded)   not inlineable
                              @ 171   org.springframework.context.annotation.ConfigurationClassParser::asSourceClasses (53 bytes)   callee is too large
               !              @ 182   org.springframework.context.annotation.ConfigurationClassParser::processImports (355 bytes)   callee is too large
                              @ 192   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::isAssignable (48 bytes)   callee is too large
                              @ 200   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::loadClass (53 bytes)   callee is too large
                              @ 209   org.springframework.beans.BeanUtils::instantiateClass (10 bytes)
                                @ 2   org.springframework.util.Assert::isAssignable (8 bytes)
                                  @ 4   org.springframework.util.Assert::isAssignable (25 bytes)
                                    @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                      @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                    @ 12   java.lang.Class::isAssignableFrom (0 bytes)   native method
                                    @ 21   org.springframework.util.Assert::assignableCheckFailed (94 bytes)   callee is too large
               !                @ 6   org.springframework.beans.BeanUtils::instantiateClass (84 bytes)   callee is too large
                              @ 231  org/springframework/context/annotation/ParserStrategyUtils::invokeAwareMethods (not loaded)   not inlineable
                              @ 238   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 241   org.springframework.context.annotation.ConfigurationClass::addImportBeanDefinitionRegistrar (13 bytes)
                                @ 6   java.util.Map::put (0 bytes)   no static binding
                              @ 252   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 257   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getMetadata (5 bytes)
                              @ 260   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 265   org.springframework.context.annotation.ConfigurationClassParser$ImportStack::registerImport (12 bytes)
                                @ 6   org.springframework.util.MultiValueMap::add (0 bytes)   not inlineable
                              @ 272   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::asConfigClass (42 bytes)   callee is too large
                              @ 275   org.springframework.context.annotation.ConfigurationClassParser::processConfigurationClass (123 bytes)   callee is too large
                              @ 307   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 312   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 316   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 319   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 324   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)                              @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                              @ 1   java.util.HashSet::size (8 bytes)   inline (hot)
                               \-> TypeProfile (515/10181 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (9666/10181 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.HashMap::size (5 bytes)   accessor
                              @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                              @ 34   java.util.HashSet::iterator (13 bytes)   inline (hot)
                               \-> TypeProfile (515/10181 counts) = java/util/LinkedHashSet
                               \-> TypeProfile (9666/10181 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                                 \-> TypeProfile (1279/12857 counts) = java/util/HashMap
                                 \-> TypeProfile (11578/12857 counts) = java/util/LinkedHashMap
                                  @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                                 \-> TypeProfile (1279/12857 counts) = java/util/HashMap$KeySet
                                 \-> TypeProfile (11578/12857 counts) = java/util/LinkedHashMap$LinkedKeySet
                                  @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (31526/31526 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (515/10186 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (9671/10186 counts) = java/util/LinkedHashMap$LinkedValueIterator
   callee is too large
                              @ 329   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 332   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 337   org.springframework.beans.factory.BeanDefinitionStoreException::<init> (17 bytes)   not inlineable
                              @ 347   java.util.ArrayDeque::pop (5 bytes)
                                @ 1   java.util.ArrayDeque::removeFirst (19 bytes)
                                  @ 1   java.util.ArrayDeque::pollFirst (42 bytes)   callee is too large
                                  @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 285   java.util.ArrayDeque::pop (5 bytes)
                                @ 1   java.util.ArrayDeque::removeFirst (19 bytes)
                                  @ 1   java.util.ArrayDeque::pollFirst (42 bytes)   callee is too large
                                  @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 12   java.io.File::toString (5 bytes)
                                @ 1   java.io.File::getPath (5 bytes)
                              @ 23   java.io.File::isDirectory (43 bytes)   callee is too large
                              @ 40   java.io.File::list (33 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                                @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                                @ 29   java.io.UnixFileSystem::list (0 bytes)   native method
                              @ 56   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 63   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 68   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 74   java.io.FileNotFoundException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 80   java.util.Arrays::asList (9 bytes)
                                @ 5   java.util.Arrays$ArrayList::<init> (16 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 102   java.io.FileInputStream::<init> (21 bytes)
                                @ 10   java.io.File::<init> (47 bytes)   callee is too large
                                @ 17   java.io.FileInputStream::<init> (110 bytes)   callee is too large
                              @ 105   java.io.BufferedInputStream::<init> (9 bytes)
                                @ 5   java.io.BufferedInputStream::<init> (32 bytes)   callee is too large
              s               @ 111   sun.net.ProgressMonitor::getDefault (4 bytes)
                              @ 120   sun.net.ProgressMonitor::shouldMeterInput (11 bytes)
                                @ 5   sun.net.DefaultProgressMeteringPolicy::shouldMeterInput (2 bytes)
                              @ 1   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::getInterfaces (128 bytes)   callee is too large
                              @ 4   java.util.Set::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
               !              @ 33   org.springframework.context.annotation.ConfigurationClassParser::retrieveBeanMethodMetadata (241 bytes)   callee is too large
                              @ 40   java.util.Set::iterator (0 bytes)   no static binding
                              @ 49   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 59   java.util.Iterator::next (0 bytes)   no static binding
                              @ 71   org.springframework.core.type.MethodMetadata::isAbstract (0 bytes)   not inlineable
                              @ 87   org.springframework.context.annotation.BeanMethod::<init> (7 bytes)
                                @ 3   org.springframework.context.annotation.ConfigurationMethod::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 90   org.springframework.context.annotation.ConfigurationClass::addBeanMethod (12 bytes)
                                @ 5   java.util.Set::add (0 bytes)   no static binding
                              @ 100   org.springframework.context.annotation.ConfigurationClassParser::processInterfaces (107 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 11   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   callee is too large
                              @ 24   org.springframework.context.annotation.ConfigurationClass::<init> (92 bytes)   callee is too large
                              @ 27   org.springframework.context.annotation.ConfigurationClassParser::processConfigurationClass (123 bytes)   callee is too large
                              @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                              @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                               \-> TypeProfile (1367/14617 counts) = java/util/HashMap
                               \-> TypeProfile (13250/14617 counts) = java/util/LinkedHashMap
                                @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                              @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                               \-> TypeProfile (1367/14617 counts) = java/util/HashMap$KeySet
                               \-> TypeProfile (13250/14617 counts) = java/util/LinkedHashMap$LinkedKeySet
                                @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)   accessor
                              @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 5   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 13   java.util.Set::iterator (0 bytes)   no static binding
                              @ 20   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 29   java.util.Iterator::next (0 bytes)   no static binding
                              @ 42   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
                              @ 53   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 26   java.lang.Class::createAnnotationData (192 bytes)   too big
                              @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)   executed < MinInliningThreshold times
                              @ 1   org.springframework.core.type.ClassMetadata::isInterface (0 bytes)   not inlineable
                              @ 14   java.util.HashSet::iterator (13 bytes)
                                @ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                                @ 7   java.util.Set::iterator (0 bytes)   no static binding
                              @ 21   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 30   java.util.Iterator::next (0 bytes)   no static binding
                              @ 41   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
                              @ 57   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 60   org.springframework.core.type.AnnotationMetadata::hasAnnotatedMethods (0 bytes)   not inlineable
                              @ 70   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 85   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 90   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 94   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 99   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 104   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 108   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 111   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::                              @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
<init> (82 bytes)   callee is too large
                              @ 114   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::isInterface (5 bytes)
                              @ 2   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (7 bytes)
                                @ 3   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getAnnotationAttributes (56 bytes)   callee is too large
                              @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 5   org.springframework.util.LinkedMultiValueMap::containsKey (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 4   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 27   java.lang.Class::getInterfaces (41 bytes)   callee is too large
               !              @ 58   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (69 bytes)   callee is too large
                              @ 61   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put                              @ 25   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   inline (hot)
 (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::hashCode (13 bytes)
                                      @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                                      @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 80   org.springframework.core.type.ClassMetadata::getInterfaceNames (0 bytes)   not inlineable
               !              @ 111   org.springframework.context.annotation.ConfigurationClassParser::asSourceClass (99 bytes)   callee is too large
                              @ 114   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::hashCode (13 bytes)
                                      @ 4   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                                      @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 4   java.lang.Class::getName (21 bytes)   inline (hot)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getSuperClassName (5 bytes)
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getInterfaceNames (5 bytes)
                              @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::hasSuperClass (13 bytes)
                              @ 17   org.springframework.beans.factory.support.BeanDefinitionResource::getBeanDefinition (5 bytes)   not inlineable
                              @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 31   org.springframework.core.type.StandardAnnotationMetadata::<init> (19 bytes)   inline (hot)
                                @ 2   org.springframework.core.type.StandardClassMetadata::<init> (16 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 7   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 7   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                  @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                    @ 26   java.lang.Class::createAnnotationData (192 bytes)   too big
                                    @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)   executed < MinInliningThreshold times
                                  @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                    @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                     \-> TypeProfile (11689/11689 counts) = java/util/LinkedHashMap
                                      @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 9   java.util.AbstractCollection::toArray (147 bytes)   already compiled into a big method
                                     \-> TypeProfile (11689/11689 counts) = java/util/LinkedHashMap$LinkedValues
                              @ 45   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)   accessor
                              @ 5   java.util.Properties::getProperty (46 bytes)   callee is too large
                              @ 2   jdk.internal.org.objectweb.asm.ClassWriter::newClassItem (70 bytes)   callee is too large
                              @ 19   java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)   callee is too large
                              @ 45   java.lang.Object::clone (0 bytes)   no static binding
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 6   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 9   org.springframework.core.type.AnnotatedTypeMetadata::isAnnotated (0 bytes)   not inlineable
                              @ 18   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 21   org.springframework.core.type.ClassMetadata::isFinal (0 bytes)   not inlineable
                              @ 35   org.springframework.context.annotation.ConfigurationClass$FinalConfigurationProblem::<init> (41 bytes)   not inlineable
                              @ 38   org.springframework.beans.factory.parsing.FailFastProblemReporter::error (9 bytes)
                                @ 5   org.springframework.beans.factory.parsing.BeanDefinitionParsingException::<init> (17 bytes)   not inlineable
                              @ 47   java.util.Set::iterator (0 bytes)   no static binding
                              @ 54   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 63   java.util.Iterator::next (0 bytes)   no static binding
                              @ 74   org.springframework.context.annotation.BeanMethod::validate (60 bytes)   callee is too large
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)
                              @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)
                              @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   callee is too large
                              @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)
                              @ 11   java.lang.invoke.LambdaForm$NamedFunction::methodType (23 bytes)
                                @ 11   java.lang.invoke.MethodHandle::type (5 bytes)
                                @ 19   java.lang.invoke.MemberName::getInvocationType (56 bytes)   callee is too large
                              @ 15   java.lang.invoke.MethodType::parameterType (7 bytes)
                              @ 24   java.lang.invoke.InvokerBytecodeGenerator::emitPushArgument (120 bytes)   callee is too large
                              @ 1   java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                  @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                  @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
                              @ 26   java.lang.invoke.LambdaForm$Name::index (5 bytes)
                              @ 29   java.lang.invoke.InvokerBytecodeGenerator::emitLoadInsn (21 bytes)
                                @ 2   java.lang.invoke.InvokerBytecodeGenerator::loadInsnOpcode (86 bytes)   callee is too large
                                @ 17   jdk.internal.org.objectweb.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 41   java.lang.invoke.InvokerBytecodeGenerator::emitImplicitConversion (159 bytes)   callee is too large
                              @ 67   java.lang.invoke.InvokerBytecodeGenerator::emitConst (191 bytes)   callee is too large
                              @ 74   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 77   sun.invoke.util.Wrapper::isWrapperType (13 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (59 bytes)   callee is too large
                              @ 92   java.lang.invoke.InvokerBytecodeGenerator::emitConst (191 bytes)   callee is too large
                              @ 104   java.lang.invoke.InvokerBytecodeGenerator::constantPlaceholder (141 bytes)   callee is too large
                              @ 107   jdk.internal.org.objectweb.asm.MethodVisitor::visitLdcInsn (16 bytes)   no static binding
                              @ 116   java.lang.invoke.InvokerBytecodeGenerator::emitImplicitConversion (159 bytes)   callee is too large
                              @ 24   java.lang.invoke.MethodType::checkPtype (19 bytes)
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                  @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 56   java.lang.invoke.MethodType::checkSlotCount (33 bytes)
                                @ 13   java.lang.StringBuilder::<init> (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 22   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                                @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                  @ 5   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 2   java.lang.invoke.InvokerBytecodeGenerator::loadInsnOpcode (86 bytes)   callee is too large
                              @ 17   jdk.internal.org.objectweb.asm.MethodVisitor::visitVarInsn (17 bytes)   no static binding
                              @ 2   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator::shouldSkip (128 bytes)   callee is too large
                              @ 9   org.springframework.context.annotation.ConfigurationClass::getBeanName (5 bytes)
                              @ 14   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 25   org.springframework.beans.factory.support.BeanDefinitionRegistry::containsBeanDefinition (0 bytes)   not inlineable
                              @ 38   org.springframework.beans.factory.support.BeanDefinitionRegistry::removeBeanDefinition (0 bytes)   not inlineable
                              @ 48   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 51   org.springframework.core.type.ClassMetadata::getClassName (0 bytes)   not inlineable
                              @ 56   org.springframework.context.annotation.ConfigurationClassParser$ImportStack::removeImportingClass (88 bytes)   callee is too large
                              @ 63   org.springframework.context.annotation.ConfigurationClass::isImported (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 71   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader::registerBeanDefinitionForImportedConfigurationClass (150 bytes)   callee is too large
                              @ 75   org.springframework.context.annotation.ConfigurationClass::getBeanMethods (5 bytes)
                              @ 78   java.util.Set::iterator (0 bytes)   no static binding
                              @ 85   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 94   java.util.Iterator::next (0 bytes)   no static binding
                              @ 107   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader::loadBeanDefinitionsForBeanMethod (636 bytes)   callee is too large
                              @ 115   org.springframework.context.annotation.ConfigurationClass::getImportedResources (5 bytes)
                              @ 118   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader::loadBeanDefinitionsFromImportedResources (22 bytes)
                                @ 4   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 11   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                  @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                    @ 11   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$18/892083096::get$Lambda (10 bytes)
                                      @ 6   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$18/892083096::<init> (15 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
               !                @ 16   java.util.Map::forEach (81 bytes)   no static binding
                              @ 123   org.springframework.context.annotation.ConfigurationClass::getImportBeanDefinitionRegistrars (5 bytes)
                              @ 126   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader::loadBeanDefinitionsFromRegistrars (13 bytes)
                                @ 2   java.lang.invoke.LambdaForm$MH/2025864991::linkToTargetMethod (9 bytes)   force inline by annotation
                                  @ 5   java.lang.invoke.LambdaForm$DMH/985655350::invokeStatic_L_L (14 bytes)   force inline by annotation
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                    @ 10   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$19/1758624236::get$Lambda (9 bytes)
                                      @ 5   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$19/1758624236::<init> (10 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
               !                @ 7   java.util.Map::forEach (81 bytes)   no static binding
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                              @ 11   java.lang.invoke.MethodHandle::linkToStatic(LLL)L (0 bytes)   MemberName not constant
                              @ 6   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$18/892083096::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.lang.invoke.LambdaForm$MH/2025864991::linkToTargetMethod (9 bytes)   force inline by annotation
                                @ 5   java.lang.invoke.LambdaForm$DMH/985655350::invokeStatic_L_L (14 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 10   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$19/1758624236::get$Lambda (9 bytes)
                                    @ 5   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$19/1758624236::<init> (10 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 7   java.util.Map::forEach (81 bytes)   no static binding
                              @ 5   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$19/1758624236::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.lang.invoke.MethodHandle::invokeBasic(LL)L (0 bytes)   receiver not constant
                              @ 5   java.lang.invoke.MethodHandle::invokeBasic(L)L (0 bytes)   receiver not constant
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                              @ 10   java.lang.invoke.MethodHandle::linkToStatic(LL)L (0 bytes)   MemberName not constant
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 19   org.springframework.context.annotation.ConfigurationClass::isImported (18 bytes)
                                @ 4   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 28   org.springframework.context.annotation.ConfigurationClass::getImportedBy (5 bytes)
                              @ 31   java.util.Set::iterator (0 bytes)   no static binding
                              @ 40   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 50   java.util.Iterator::next (0 bytes)   no static binding
                              @ 63   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator::shouldSkip (128 bytes)   callee is too large
                              @ 82   java.lang.Boolean::valueOf (14 bytes)
                              @ 94   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader::access$100 (5 bytes)
                              @ 98   org.springframework.context.annotation.ConfigurationClass::getMetadata (5 bytes)
                              @ 104   org.springframework.context.annotation.ConditionEvaluator::shouldSkip (250 bytes)   callee is too large
                              @ 107   java.lang.Boolean::valueOf (14 bytes)
                              @ 117   java.util.Map::put (0 bytes)   no static binding
                              @ 124   java.lang.Boolean::booleanValue (5 bytes)
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 22   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 38  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 43  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 47  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 52  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 56  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 59  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 62   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 72   org.springframework.beans.factory.NoSuchBeanDefinitionException::<init> (39 bytes)   not inlineable
                              @ 4   java.util.HashMap::<init> (11 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 11   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$18/892083096::get$Lambda (10 bytes)
                                    @ 6   org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$$Lambda$18/892083096::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 16   java.util.Map::forEach (81 bytes)   no static binding
                              @ 16   java.util.jar.JarFile::getMetaInfEntryNames (0 bytes)   native method
                              @ 38   java.lang.String::toUpperCase (439 bytes)   callee is too large
                              @ 45   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 54   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 63   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 72   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 79   java.util.jar.JarFile::getManifest (5 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   java.lang.Enum::ordinal (5 bytes)
                              @ 67   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 72   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 76   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Enum::toString (5 bytes)
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 79   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 82  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 1   java.util.zip.ZipCoder::decoder (35 bytes)
                                @ 12   java.nio.charset.Charset::newDecoder (0 bytes)   no static binding
                                @ 18   java.nio.charset.CharsetDecoder::onMalformedInput (26 bytes)
                                  @ 21   java.nio.charset.CharsetDecoder::implOnMalformedInput (1 bytes)
                                @ 24   java.nio.charset.CharsetDecoder::onUnmappableCharacter (26 bytes)
                                  @ 21   java.nio.charset.CharsetDecoder::implOnUnmappableCharacter (1 bytes)
                              @ 4   java.nio.charset.CharsetDecoder::reset (11 bytes)
                                @ 1   java.nio.charset.CharsetDecoder::implReset (1 bytes)
                              @ 11   java.nio.charset.CharsetDecoder::maxCharsPerByte (5 bytes)
                              @ 35   java.lang.String::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 8   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 62   sun.nio.cs.UTF_8$Decoder::decode (779 bytes)   inlining prohibited by policy
                              @ 81   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 94   java.lang.String::<init> (82 bytes)   callee is too large
               !              @ 101   java.nio.ByteBuffer::wrap (20 bytes)
                                @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                  @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 108   java.nio.CharBuffer::wrap (8 bytes)
               !                @ 4   java.nio.CharBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapCharBuffer::<init> (14 bytes)
                                    @ 10   java.nio.CharBuffer::<init> (22 bytes)
                                      @ 6   java.nio.Buffer::<init> (121 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
               !              @ 119   java.nio.charset.CharsetDecoder::decode (287 bytes)   callee is too large
                              @ 126   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 138   java.nio.charset.CoderResult::toString (52 bytes)   callee is too large
                              @ 141   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 148   java.nio.charset.CharsetDecoder::flush (49 bytes)   callee is too large
                              @ 155   java.nio.charset.CoderResult::isUnderflow (13 bytes)
                              @ 167   java.nio.charset.CoderResult::toString (52 bytes)   callee is too large
                              @ 170   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 183   java.nio.Buffer::position (5 bytes)
                              @ 186   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 17   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 37  java/util/zip/ZipUtils::get16 (not loaded)   not inlineable
                              @ 46  java/util/zip/ZipUtils::get16 (not loaded)   not inlineable
                              @ 118  java/util/zip/ZipUtils::get64 (not loaded)   not inlineable
                              @ 130  java/util/zip/ZipUtils::get64 (not loaded)   not inlineable
                              @ 157  java/util/zip/ZipUtils::get16 (not loaded)   not inlineable
                              @ 169  java/util/zip/ZipUtils::get16 (not loaded)   not inlineable
                              @ 186  java/util/zip/ZipUtils::get64 (not loaded)   not inlineable
                              @ 189  java/util/zip/ZipUtils::winTimeToFileTime (not loaded)   not inlineable
                              @ 202  java/util/zip/ZipUtils::get64 (not loaded)   not inlineable
                              @ 205  java/util/zip/ZipUtils::winTimeToFileTime (not loaded)   not inlineable
                              @ 218  java/util/zip/ZipUtils::get64 (not loaded)   not inlineable
                              @ 221  java/util/zip/ZipUtils::winTimeToFileTime (not loaded)   not inlineable
                              @ 233   java.lang.Byte::toUnsignedInt (6 bytes)
                              @ 263  java/util/zip/ZipUtils::get32 (not loaded)   not inlineable
                              @ 266  java/util/zip/ZipUtils::unixTimeToFileTime (not loaded)   not inlineable
                              @ 297  java/util/zip/ZipUtils::get32 (not loaded)   not inlineable
                              @ 300  java/util/zip/ZipUtils::unixTimeToFileTime (not loaded)   not inlineable
                              @ 331  java/util/zip/ZipUtils::get32 (not loaded)   not inlineable
                              @ 334  java/util/zip/ZipUtils::unixTimeToFileTime (not loaded)   not inlineable
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 14   org.springframework.util.StringUtils::replace (132 bytes)   inline (hot)
                                @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                @ 22   java.lang.String::indexOf (7 bytes)   (intrinsic)
                                @ 34   java.lang.String::length (6 bytes)   inline (hot)
                                @ 40   java.lang.String::length (6 bytes)   inline (hot)
                                @ 44   java.lang.String::length (6 bytes)   inline (hot)
                                @ 59   java.lang.StringBuilder::<init> (6 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 68   java.lang.String::length (6 bytes)   inline (hot)
                                @ 83   java.lang.String::substring (79 bytes)   inline (hot)
                                  @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 86   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 93   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 107   java.lang.String::indexOf (25 bytes)   inline (hot)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                                @ 119   java.lang.String::substring (56 bytes)   inline (hot)
                                  @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 122   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 128   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                  @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 21   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 68   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 78   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                              @ 82   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 87   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 90   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                              @ 96   java.lang.String::substring (56 bytes)   inline (hot)
                                @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 103   org.springframework.util.StringUtils::delimitedListToStringArray (7 bytes)   inline (hot)
                                @ 3   org.springframework.util.StringUtils::delimitedListToStringArray (165 bytes)   inline (hot)
                                  @ 26   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 31   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                  @ 86   java.lang.String::indexOf (25 bytes)   inline (hot)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                                  @ 102   java.lang.String::substring (79 bytes)   inline (hot)
                                    @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                        @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 106   org.springframework.util.StringUtils::deleteAny (73 bytes)   inline (hot)
                                    @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                      @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                    @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 109   java.util.ArrayList::add (29 bytes)   inline (hot)
                                    @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                      @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                        @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                      @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                        @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                          @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                            @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                  @ 118   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 86   java.lang.String::indexOf (25 bytes)   inline (hot)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                                  @ 128   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 137   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 147   java.lang.String::substring (56 bytes)   inline (hot)
                                    @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                        @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 151   org.springframework.util.StringUtils::deleteAny (73 bytes)   inline (hot)
                                    @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                      @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                    @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 154   java.util.ArrayList::add (29 bytes)   inline (hot)
                                    @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                      @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                        @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                      @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                        @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                          @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                            @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                  @ 161   org.springframework.util.StringUtils::toStringArray (14 bytes)   inline (hot)
                                    @ 5   java.util.ArrayList::toArray (60 bytes)   inline (hot)
                                      @ 18   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 21   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                      @ 39   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 112   java.util.LinkedList::<init> (10 bytes)   inline (hot)
                                @ 1   java.util.AbstractSequentialList::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 143   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 156   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 184   java.util.LinkedList::add (32 bytes)   inline (hot)
                                @ 2   java.util.LinkedList::checkPositionIndex (22 bytes)   inline (hot)
                                  @ 2   java.util.LinkedList::isPositionIndex (18 bytes)   inline (hot)
                                @ 15   java.util.LinkedList::linkLast (59 bytes)   inline (hot)
                                  @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 25   java.util.LinkedList::node (65 bytes)   inline (hot)
                                @ 28   java.util.LinkedList::linkBefore (63 bytes)   inline (hot)
                                  @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 219   java.util.LinkedList::size (5 bytes)   accessor
                              @ 260   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 264   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 271   org.springframework.util.StringUtils::collectionToDelimitedString (10 bytes)   inline (hot)
                                @ 6   org.springframework.util.StringUtils::collectionToDelimitedString (84 bytes)   already compiled into a big method
                              @ 274   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 277   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                 \-> TypeProfile (16760/16760 counts) = java/util/LinkedHashMap
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 11   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                               \-> TypeProfile (914/914 counts) = java/util/LinkedList
                                @ 1   java.util.LinkedList::size (5 bytes)   accessor
                              @ 27   java.util.LinkedList::get (14 bytes)   inline (hot)
                                @ 2   java.util.LinkedList::checkElementIndex (22 bytes)   inline (hot)
                                  @ 2   java.util.LinkedList::isElementIndex (18 bytes)   inline (hot)
                                @ 7   java.util.LinkedList::node (65 bytes)   too big
                              @ 35   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)   inline (hot)
                                @ 2   java.util.LinkedHashMap::<init> (16 bytes)   inline (hot)
                                  @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 12   java.util.HashMap::putMapEntries (154 bytes)   inline (hot)
                                    @ 1   java.util.HashMap::size (5 bytes)   accessor
                                    @ 59   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                    @ 82   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                                      @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                          @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 87   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                                     \-> TypeProfile (1786/1786 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                      @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                        @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                          @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                     \-> TypeProfile (3572/3572 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                                    @ 106   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                      @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                        @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                    @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                    @ 127   java.util.HashMap$Node::getValue (5 bytes)   accessor
                                    @ 137   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                    @ 146   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                      @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                      @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                        @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                      @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                       \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                      @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                        @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                      @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                      @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                      @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                    @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 46   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 49   java.util.HashSet::<init> (40 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 24   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 27   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                    @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                @ 35   java.util.AbstractCollection::addAll (42 bytes)   inline (hot)
                                  @ 3   java.util.Collections$EmptySet::iterator (4 bytes)   inline (hot)
                                  @ 3   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                   \-> TypeProfile (497/3014 counts) = java/util/LinkedHashMap$LinkedKeySet
                                   \-> TypeProfile (2517/3014 counts) = java/util/Collections$EmptySet
                                    @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                      @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 0   java.util.Collections::emptyIterator (4 bytes)   inline (hot)
                                  @ 10   java.util.Collections$EmptyIterator::hasNext (2 bytes)   inline (hot)
                                  @ 10   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                   \-> TypeProfile (994/3511 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                   \-> TypeProfile (2517/3511 counts) = java/util/Collections$EmptyIterator
                                  @ 19   java.util.LinkedHashMap$LinkedKeyIterator::next (8 bytes)   inline (hot)
                                   \-> TypeProfile (497/497 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                    @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                    @ 4   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                  @ 29   java.util.HashSet::add (20 bytes)   inline (hot)
                                    @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                      @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                        @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                        @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                         \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                        @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                         \-> TypeProfile (384/412 counts) = java/util/HashMap
                                        @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                  @ 10   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 58   java.util.HashSet::remove (20 bytes)   inline (hot)
                                @ 5   java.util.HashMap::remove (26 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 9   java.util.HashMap::removeNode (291 bytes)   too big
                              @ 69   org.springframework.util.LinkedMultiValueMap::keySet (10 bytes)   inline (hot)
                              @ 72   java.util.ArrayList::<init> (67 bytes)   inline (hot)
                                @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 31   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 50   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 79   java.util.Collections::reverse (125 bytes)   inline (hot)
                                @ 1   java.util.ArrayList::size (5 bytes)   accessor
                                @ 40   java.util.Collections::swap (25 bytes)   inline (hot)
                                  @ 8   java.util.ArrayList::get (11 bytes)   inline (hot)
                                    @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                    @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                  @ 13   java.util.ArrayList::set (20 bytes)   inline (hot)
                                    @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                    @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                  @ 18   java.util.ArrayList::set (20 bytes)   inline (hot)
                                    @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                    @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                              @ 85   java.util.ArrayList::remove (77 bytes)   inline (hot)
                                @ 25   java.util.ArrayList::fastRemove (57 bytes)   too big
                                @ 56   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 64   java.util.ArrayList::fastRemove (57 bytes)   too big
                              @ 93   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                               \-> TypeProfile (2742/2742 counts) = java/util/ArrayList$Itr
                                @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 112   java.util.ArrayList$Itr::next (66 bytes)   inline (hot)
                                @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                                @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 125   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                 \-> TypeProfile (16760/16760 counts) = java/util/LinkedHashMap
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 132   org.springframework.util.ObjectUtils::isEmpty (113 bytes)   inline (hot)
                                @ 55   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 58   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                @ 88   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                  @ 1   java.util.LinkedList::size (5 bytes)   accessor
                              @ 141   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                               \-> TypeProfile (1828/1828 counts) = java/util/LinkedHashMap
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                  @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 0   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 7   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 13   sun.misc.Resource::getCodeSourceURL (0 bytes)   no static binding
                              @ 28   java.lang.String::substring (79 bytes)   callee is too large
                              @ 34   sun.misc.Resource::getManifest (2 bytes)   no static binding
               !              @ 46   java.net.URLClassLoader::definePackageInternal (81 bytes)   callee is too large
                              @ 50   sun.misc.Resource::getByteBuffer (24 bytes)
              s                 @ 1   sun.misc.Resource::cachedInputStream (20 bytes)
                                  @ 9   sun.misc.Resource::getInputStream (0 bytes)   no static binding
                                @ 16   sun.nio.ByteBuffered::getByteBuffer (0 bytes)   not inlineable
                              @ 61   sun.misc.Resource::getCodeSigners (2 bytes)   no static binding
                              @ 74   java.security.CodeSource::<init> (40 bytes)   callee is too large
                              @ 79   sun.misc.PerfCounter::getReadClassBytesTime (4 bytes)
                              @ 83   sun.misc.PerfCounter::addElapsedTimeFrom (10 bytes)
                                @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s                 @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 92   java.security.SecureClassLoader::defineClass (12 bytes)
               !m               @ 5   java.security.SecureClassLoader::getProtectionDomain (114 bytes)   callee is too large
                                @ 8   java.lang.ClassLoader::defineClass (108 bytes)   callee is too large
               !              @ 97   sun.misc.Resource::getBytes (242 bytes)   callee is too large
                              @ 103   sun.misc.Resource::getCodeSigners (2 bytes)   no static binding
                              @ 116   java.security.CodeSource::<init> (40 bytes)   callee is too large
                              @ 121   sun.misc.PerfCounter::getReadClassBytesTime (4 bytes)
                              @ 125   sun.misc.PerfCounter::addElapsedTimeFrom (10 bytes)
                                @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s                 @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 138   java.security.SecureClassLoader::defineClass (16 bytes)
               !m               @ 9   java.security.SecureClassLoader::getProtectionDomain (114 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::defineClass (43 bytes)   callee is too large
                              @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                              @ 16   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 28   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 31   java.lang.NoClassDefFoundError::<init> (6 bytes)   not inlineable
                              @ 42   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 56   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 61   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 69   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 72   java.lang.String::substring (79 bytes)   callee is too large
                              @ 75   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 78   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 81   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 101   java.security.ProtectionDomain::getCodeSource (5 bytes)
               !m             @ 104   java.lang.ClassLoader::checkCerts (195 bytes)   callee is too large
                              @ 4   java.lang.ClassLoader::preDefineClass (109 bytes)   callee is too large
                              @ 12   java.lang.ClassLoader::defineClassSourceLocation (28 bytes)
                                @ 1   java.security.ProtectionDomain::getCodeSource (5 bytes)
                                @ 12   java.security.CodeSource::getLocation (5 bytes)
                                @ 19   java.security.CodeSource::getLocation (5 bytes)
                                @ 22   java.net.URL::toString (5 bytes)
                                  @ 1   java.net.URL::toExternalForm (9 bytes)
                                    @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                              @ 27   java.lang.ClassLoader::defineClass1 (0 bytes)   native method
                              @ 37   java.lang.ClassLoader::postDefineClass (26 bytes)
                                @ 1   java.security.ProtectionDomain::getCodeSource (5 bytes)
                                @ 8   java.security.ProtectionDomain::getCodeSource (5 bytes)
                                @ 11   java.security.CodeSource::getCertificates (98 bytes)   callee is too large
                                @ 22   java.lang.ClassLoader::setSigners (6 bytes)
                                  @ 2   java.lang.Class::setSigners (0 bytes)   native method
                              @ 1   java.security.ProtectionDomain::getCodeSource (5 bytes)
                              @ 8   java.security.ProtectionDomain::getCodeSource (5 bytes)
                              @ 11   java.security.CodeSource::getCertificates (98 bytes)   callee is too large
                              @ 22   java.lang.ClassLoader::setSigners (6 bytes)
                                @ 2   java.lang.Class::setSigners (0 bytes)   native method
                              @ 3   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 20   java.lang.String::substring (79 bytes)   callee is too large
                              @ 33   java.security.CodeSource::getCertificates (98 bytes)   callee is too large
                              @ 59   java.util.Map::get (0 bytes)   no static binding
                              @ 93   java.util.Map::put (0 bytes)   no static binding
                              @ 138   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 156   java.lang.ClassLoader::compareCerts (149 bytes)   callee is too large
                              @ 170   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 175   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 179   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 184   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 187   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 190   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 1   java.net.URL::getRef (5 bytes)
                              @ 6   java.net.URL::getRef (5 bytes)
                              @ 24   java.lang.String::equals (81 bytes)   callee is too large
                              @ 33   java.net.URLStreamHandler::sameFile (136 bytes)   no static binding
                              @ 9   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::getMergedAnnotationAttributes (244 bytes)   inline (hot)
                                @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                  @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                   \-> TypeProfile (16921/16921 counts) = java/util/LinkedHashMap
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                      @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 11   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                 \-> TypeProfile (914/914 counts) = java/util/LinkedList
                                  @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                @ 27   java.util.LinkedList::get (14 bytes)   inline (hot)
                                  @ 2   java.util.LinkedList::checkElementIndex (22 bytes)   inline (hot)
                                    @ 2   java.util.LinkedList::isElementIndex (18 bytes)   inline (hot)
                                  @ 7   java.util.LinkedList::node (65 bytes)   too big
                                @ 35   org.springframework.core.annotation.AnnotationAttributes::<init> (35 bytes)   inline (hot)
                                  @ 2   java.util.LinkedHashMap::<init> (16 bytes)   inline (hot)
                                    @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 12   java.util.HashMap::putMapEntries (154 bytes)   inline (hot)
                                      @ 1   java.util.HashMap::size (5 bytes)   accessor
                                      @ 59   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                      @ 82   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                                        @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                            @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 87   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                                       \-> TypeProfile (1786/1786 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                        @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                          @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                       \-> TypeProfile (3572/3572 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                                      @ 106   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                        @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                          @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                      @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                      @ 127   java.util.HashMap$Node::getValue (5 bytes)   accessor
                                      @ 137   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                      @ 146   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                        @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                        @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                          @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                            @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                        @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                         \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                        @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                          @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                            @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                        @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                        @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                        @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                      @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                @ 46   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                  @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                    @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 49   java.util.HashSet::<init> (40 bytes)   inline (hot)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 24   java.lang.Math::max (11 bytes)   (intrinsic)
                                  @ 27   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                    @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                      @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                  @ 35   java.util.AbstractCollection::addAll (42 bytes)   inline (hot)
                                    @ 3   java.util.Collections$EmptySet::iterator (4 bytes)   inline (hot)
                                    @ 3   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                     \-> TypeProfile (497/3246 counts) = java/util/LinkedHashMap$LinkedKeySet
                                     \-> TypeProfile (2749/3246 counts) = java/util/Collections$EmptySet
                                      @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                        @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                          @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 0   java.util.Collections::emptyIterator (4 bytes)   inline (hot)
                                    @ 10   java.util.Collections$EmptyIterator::hasNext (2 bytes)   inline (hot)
                                    @ 10   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                     \-> TypeProfile (994/3743 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                     \-> TypeProfile (2749/3743 counts) = java/util/Collections$EmptyIterator
                                    @ 19   java.util.LinkedHashMap$LinkedKeyIterator::next (8 bytes)   inline (hot)
                                     \-> TypeProfile (497/497 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                      @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                      @ 4   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                    @ 29   java.util.HashSet::add (20 bytes)   inline (hot)
                                      @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                        @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                          @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                          @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                           \-> TypeProfile (1/1 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                          @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                           \-> TypeProfile (384/412 counts) = java/util/HashMap
                                          @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                    @ 10   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                @ 58   java.util.HashSet::remove (20 bytes)   inline (hot)
                                  @ 5   java.util.HashMap::remove (26 bytes)   inline (hot)
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 9   java.util.HashMap::removeNode (291 bytes)   too big
                                @ 69   org.springframework.util.LinkedMultiValueMap::keySet (10 bytes)   inline (hot)
                                @ 72   java.util.ArrayList::<init> (67 bytes)   inline (hot)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 31   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 50   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                @ 79   java.util.Collections::reverse (125 bytes)   inline (hot)
                                  @ 1   java.util.ArrayList::size (5 bytes)   accessor
                                  @ 40   java.util.Collections::swap (25 bytes)   inline (hot)
                                    @ 8   java.util.ArrayList::get (11 bytes)   inline (hot)
                                      @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                      @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                    @ 13   java.util.ArrayList::set (20 bytes)   inline (hot)
                                      @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                      @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                    @ 18   java.util.ArrayList::set (20 bytes)   inline (hot)
                                      @ 2   java.util.ArrayList::rangeCheck (22 bytes)   inline (hot)
                                      @ 7   java.util.ArrayList::elementData (7 bytes)   inline (hot)
                                @ 85   java.util.ArrayList::remove (77 bytes)   inline (hot)
                                  @ 25   java.util.ArrayList::fastRemove (57 bytes)   too big
                                  @ 56   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 64   java.util.ArrayList::fastRemove (57 bytes)   too big
                                @ 93   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                  @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                 \-> TypeProfile (2742/2742 counts) = java/util/ArrayList$Itr
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 112   java.util.ArrayList$Itr::next (66 bytes)   inline (hot)
                                  @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                                  @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 125   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                  @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                   \-> TypeProfile (16921/16921 counts) = java/util/LinkedHashMap
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                      @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 132   org.springframework.util.ObjectUtils::isEmpty (113 bytes)   inline (hot)
                                  @ 55   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 58   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                  @ 88   java.util.AbstractCollection::isEmpty (13 bytes)   inline (hot)
                                    @ 1   java.util.LinkedList::size (5 bytes)   accessor
                                @ 141   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                 \-> TypeProfile (1828/1828 counts) = java/util/LinkedHashMap
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 102   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 23   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                              @ 28   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 32   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::getClassName (5 bytes)   inline (hot)
                                @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::getClassName (5 bytes)   accessor
                              @ 35   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 40   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 43   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
               !              @ 52   org.springframework.core.type.classreading.AnnotationReadingVisitorUtils::convertClassValues (398 bytes)   hot method too big
                              @ 1   java.security.ProtectionDomain::getCodeSource (5 bytes)
                              @ 12   java.security.CodeSource::getLocation (5 bytes)
                              @ 19   java.security.CodeSource::getLocation (5 bytes)
                              @ 22   java.net.URL::toString (5 bytes)
                                @ 1   java.net.URL::toExternalForm (9 bytes)
                                  @ 5   java.net.URLStreamHandler::toExternalForm (219 bytes)   callee is too large
                              @ 1   java.net.URL::getHost (5 bytes)
                              @ 6   java.net.URL::getHost (5 bytes)
                              @ 14   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 29   java.lang.String::equals (81 bytes)   callee is too large
                              @ 41   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 54   java.lang.String::equals (81 bytes)   callee is too large
                              @ 65   java.net.URLStreamHandler::hostsEqual (75 bytes)   callee is too large
              s!              @ 2   java.net.URLStreamHandler::getHostAddress (54 bytes)   callee is too large
              s!              @ 8   java.net.URLStreamHandler::getHostAddress (54 bytes)   callee is too large
                              @ 25   java.net.InetAddress::equals (2 bytes)   no static binding
                              @ 30   java.net.URL::getHost (5 bytes)
                              @ 37   java.net.URL::getHost (5 bytes)
                              @ 44   java.net.URL::getHost (5 bytes)
                              @ 48   java.net.URL::getHost (5 bytes)
                              @ 51   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 56   java.net.URL::getHost (5 bytes)
                              @ 63   java.net.URL::getHost (5 bytes)
                              @ 115  java/security/CodeSigner::equals (not loaded)   not inlineable
               !              @ 221   java.security.cert.Certificate::equals (38 bytes)   not inlineable
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                              @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m               @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 4   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::determineTargetType (60 bytes)   callee is too large
                              @ 15   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 22   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)
                              @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 32   java.util.List::iterator (0 bytes)   no static binding
                              @ 41   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 51   java.util.Iterator::next (0 bytes)   no static binding
                              @ 81   org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor::predictBeanType (2 bytes)   no static binding
                              @ 111   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 22   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 1   org.springframework.beans.factory.support.RootBeanDefinition::getTargetType (30 bytes)
                                @ 22   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 12   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)
               !              @ 22   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getTypeForFactoryMethod (536 bytes)   callee is too large
               !              @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   callee is too large
                              @ 38   org.springframework.util.ObjectUtils::isEmpty (15 bytes)
                              @ 45   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 9   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                                @ 21  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
               !m               @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   callee is too large
                              @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 9   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 21  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
               !m             @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   callee is too large
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 17   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isSingletonCurrentlyInCreation (11 bytes)
                                @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 36   java.util.Map::get (0 bytes)   no static binding
                              @ 55   java.util.Map::get (0 bytes)   no static binding
                              @ 72   org.springframework.beans.factory.ObjectFactory::getObject (0 bytes)   not inlineable
                              @ 84   java.util.Map::put (0 bytes)   no static binding
                              @ 95   java.util.Map::remove (0 bytes)   no static binding
                              @ 7   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 2   org.springframework.core.AttributeAccessorSupport::getAttribute (17 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.Map::get (0 bytes)   no static binding
                              @ 14   org.springframework.beans.BeanMetadataAttribute::getValue (5 bytes)
                              @ 1   org.springframework.beans.BeanMetadataAttributeAccessor::<init> (5 bytes)
                                @ 1   org.springframework.core.AttributeAccessorSupport::<init> (16 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                              @ 45   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 83   org.springframework.beans.factory.config.BeanDefinition::getParentName (0 bytes)   no static binding
                              @ 88   org.springframework.beans.factory.support.AbstractBeanDefinition::setParentName (11 bytes)   no static binding
                              @ 93   org.springframework.beans.factory.config.BeanDefinition::getBeanClassName (0 bytes)   no static binding
                              @ 98   org.springframework.beans.factory.support.AbstractBeanDefinition::setBeanClassName (6 bytes)
                              @ 103   org.springframework.beans.factory.config.BeanDefinition::getScope (0 bytes)   no static binding
                              @ 108   org.springframework.beans.factory.support.AbstractBeanDefinition::setScope (6 bytes)
                              @ 113   org.springframework.beans.factory.config.BeanDefinition::isAbstract (0 bytes)   no static binding
                              @ 118   org.springframework.beans.factory.support.AbstractBeanDefinition::setAbstract (6 bytes)
                              @ 123   org.springframework.beans.factory.config.BeanDefinition::isLazyInit (0 bytes)   no static binding
                              @ 128   org.springframework.beans.factory.support.AbstractBeanDefinition::setLazyInit (6 bytes)
                              @ 133   org.springframework.beans.factory.config.BeanDefinition::getFactoryBeanName (0 bytes)   no static binding
                              @ 138   org.springframework.beans.factory.support.AbstractBeanDefinition::setFactoryBeanName (6 bytes)
                              @ 143   org.springframework.beans.factory.config.BeanDefinition::getFactoryMethodName (0 bytes)   no static binding
                              @ 148   org.springframework.beans.factory.support.AbstractBeanDefinition::setFactoryMethodName (6 bytes)
                              @ 153   org.springframework.beans.factory.config.BeanDefinition::getRole (0 bytes)   no static binding
                              @ 158   org.springframework.beans.factory.support.AbstractBeanDefinition::setRole (6 bytes)
                              @ 163   org.springframework.beans.factory.config.BeanDefinition::getSource (10 bytes)   no static binding
                              @ 168   org.springframework.beans.BeanMetadataAttributeAccessor::setSource (6 bytes)
                              @ 173   org.springframework.core.AttributeAccessorSupport::copyAttributesFrom (56 bytes)   callee is too large
                              @ 189   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)
                              @ 197   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   callee is too large
                              @ 200   org.springframework.beans.factory.support.AbstractBeanDefinition::setBeanClass (6 bytes)
                              @ 204   org.springframework.beans.factory.support.AbstractBeanDefinition::hasConstructorArgumentValues (23 bytes)
                                @ 11  org/springframework/beans/factory/config/ConstructorArgumentValues::isEmpty (not loaded)   not inlineable
                              @ 216   org.springframework.beans.factory.config.BeanDefinition::getConstructorArgumentValues (0 bytes)   no static binding
                              @ 221  org/springframework/beans/factory/config/ConstructorArgumentValues::<init> (not loaded)   not inlineable
                              @ 224   org.springframework.beans.factory.support.AbstractBeanDefinition::setConstructorArgumentValues (6 bytes)
                              @ 228   org.springframework.beans.factory.support.AbstractBeanDefinition::hasPropertyValues (23 bytes)
                                @ 11  org/springframework/beans/MutablePropertyValues::isEmpty (not loaded)   not inlineable
                              @ 240   org.springframework.beans.factory.config.BeanDefinition::getPropertyValues (0 bytes)   no static binding
                              @ 245  org/springframework/beans/MutablePropertyValues::<init> (not loaded)   not inlineable
                              @ 248   org.springframework.beans.factory.support.AbstractBeanDefinition::setPropertyValues (6 bytes)
                              @ 252   org.springframework.beans.factory.support.AbstractBeanDefinition::hasMethodOverrides (23 bytes)
                                @ 11  org/springframework/beans/factory/support/MethodOverrides::isEmpty (not loaded)   not inlineable
                              @ 264   org.springframework.beans.factory.support.AbstractBeanDefinition::getMethodOverrides (23 bytes)
                                @ 12  org/springframework/beans/factory/support/MethodOverrides::<init> (not loaded)   not inlineable
                              @ 267  org/springframework/beans/factory/support/MethodOverrides::<init> (not loaded)   not inlineable
                              @ 270   org.springframework.beans.factory.support.AbstractBeanDefinition::setMethodOverrides (6 bytes)
                              @ 275   org.springframework.beans.factory.support.AbstractBeanDefinition::getAutowireMode (5 bytes)
                              @ 278   org.springframework.beans.factory.support.AbstractBeanDefinition::setAutowireMode (6 bytes)
                              @ 283   org.springframework.beans.factory.support.AbstractBeanDefinition::getDependencyCheck (5 bytes)
                              @ 286   org.springframework.beans.factory.support.AbstractBeanDefinition::setDependencyCheck (6 bytes)
                              @ 291   org.springframework.beans.factory.support.AbstractBeanDefinition::getDependsOn (5 bytes)
                              @ 294   org.springframework.beans.factory.support.AbstractBeanDefinition::setDependsOn (6 bytes)
                              @ 299   org.springframework.beans.factory.support.AbstractBeanDefinition::isAutowireCandidate (5 bytes)
                              @ 302   org.springframework.beans.factory.support.AbstractBeanDefinition::setAutowireCandidate (6 bytes)
                              @ 307   org.springframework.beans.factory.support.AbstractBeanDefinition::isPrimary (5 bytes)
                              @ 310   org.springframework.beans.factory.support.AbstractBeanDefinition::setPrimary (6 bytes)
                              @ 315   org.springframework.beans.factory.support.AbstractBeanDefinition::copyQualifiersFrom (20 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 14   java.util.Map::putAll (0 bytes)   no static binding
                              @ 320   org.springframework.beans.factory.support.AbstractBeanDefinition::getInstanceSupplier (5 bytes)
                              @ 323   org.springframework.beans.factory.support.AbstractBeanDefinition::setInstanceSupplier (6 bytes)
                              @ 328   org.springframework.beans.factory.support.AbstractBeanDefinition::isNonPublicAccessAllowed (5 bytes)
                              @ 331   org.springframework.beans.factory.support.AbstractBeanDefinition::setNonPublicAccessAllowed (6 bytes)
                              @ 336   org.springframework.beans.factory.support.AbstractBeanDefinition::isLenientConstructorResolution (5 bytes)
                              @ 339   org.springframework.beans.factory.support.AbstractBeanDefinition::setLenientConstructorResolution (6 bytes)
                              @ 344   org.springframework.beans.factory.support.AbstractBeanDefinition::getInitMethodName (5 bytes)
                              @ 347   org.springframework.beans.factory.support.AbstractBeanDefinition::setInitMethodName (6 bytes)
                              @ 352   org.springframework.beans.factory.support.AbstractBeanDefinition::isEnforceInitMethod (5 bytes)
                              @ 355   org.springframework.beans.factory.support.AbstractBeanDefinition::setEnforceInitMethod (6 bytes)
                              @ 360   org.springframework.beans.factory.support.AbstractBeanDefinition::getDestroyMethodName (5 bytes)
                              @ 363   org.springframework.beans.factory.support.AbstractBeanDefinition::setDestroyMethodName (6 bytes)
                              @ 368   org.springframework.beans.factory.support.AbstractBeanDefinition::isEnforceDestroyMethod (5 bytes)
                              @ 371   org.springframework.beans.factory.support.AbstractBeanDefinition::setEnforceDestroyMethod (6 bytes)
                              @ 376   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 379   org.springframework.beans.factory.support.AbstractBeanDefinition::setSynthetic (6 bytes)
                              @ 384   org.springframework.beans.factory.support.AbstractBeanDefinition::getResource (5 bytes)
                              @ 387   org.springframework.beans.factory.support.AbstractBeanDefinition::setResource (6 bytes)
                              @ 399   org.springframework.beans.factory.config.BeanDefinition::getConstructorArgumentValues (0 bytes)   no static binding
                              @ 404  org/springframework/beans/factory/config/ConstructorArgumentValues::<init> (not loaded)   not inlineable
                              @ 407   org.springframework.beans.factory.support.AbstractBeanDefinition::setConstructorArgumentValues (6 bytes)
                              @ 416   org.springframework.beans.factory.config.BeanDefinition::getPropertyValues (0 bytes)   no static binding
                              @ 421  org/springframework/beans/MutablePropertyValues::<init> (not loaded)   not inlineable
                              @ 424   org.springframework.beans.factory.support.AbstractBeanDefinition::setPropertyValues (6 bytes)
                              @ 429   org.springframework.beans.factory.config.BeanDefinition::getResourceDescription (0 bytes)   no static binding
                              @ 434   org.springframework.beans.factory.support.AbstractBeanDefinition::setResourceDescription (21 bytes)
                                @ 10   org.springframework.core.io.DescriptiveResource::<init> (19 bytes)
                                  @ 1   org.springframework.core.io.AbstractResource::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 8   java.io.FileInputStream::<init> (110 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)
                              @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   callee is too large
                              @ 12   java.lang.System::getSecurityManager (4 bytes)
                              @ 21  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 30  java/security/AccessController::doPrivileged (not loaded)   not inlineable
               !              @ 40   org.springframework.beans.factory.support.AbstractBeanFactory::doResolveBeanClass (284 bytes)   callee is too large
                              @ 48   java.security.PrivilegedActionException::getException (5 bytes)
                              @ 61   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 66   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 71   org.springframework.beans.factory.CannotLoadBeanClassException::<init> (86 bytes)   not inlineable
                              @ 82   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 87   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 92   org.springframework.beans.factory.CannotLoadBeanClassException::<init> (86 bytes)   not inlineable
                              @ 103   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 108   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 113   org.springframework.beans.factory.CannotLoadBeanClassException::<init> (91 bytes)   not inlineable
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
               !m             @ 9   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 21   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 38   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 50   org.springframework.beans.factory.support.FactoryBeanRegistrySupport::getTypeForFactoryBean (50 bytes)   callee is too large
                              @ 63   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 78   org.springframework.core.ResolvableType::isInstance (21 bytes)
                                @ 6   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 9   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 83   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 92   org.springframework.core.ResolvableType::isInstance (21 bytes)
                                @ 6   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 9   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 101   org.springframework.core.ResolvableType::hasGenerics (14 bytes)
                                @ 1   org.springframework.core.ResolvableType::getGenerics (148 bytes)   no static binding
                              @ 109   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 117   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 124   org.springframework.beans.factory.support.RootBeanDefinition::getTargetType (30 bytes)
                                @ 22   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 138   org.springframework.util.ClassUtils::getUserClass (14 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 7   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 10   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                  @ 1   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   java.lang.String::contains (20 bytes)
                                    @ 2   java.lang.String::toString (2 bytes)
                                    @ 7   java.lang.String::indexOf (7 bytes)
                                      @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                  @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 145   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 159   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 170   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 205   org.springframework.core.ResolvableType::isAssignableFrom (7 bytes)   no static binding
                              @ 221   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 229   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 238   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 250   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 260   org.springframework.beans.factory.support.AbstractBeanFactory::originalBeanName (37 bytes)   callee is too large
                              @ 264   org.springframework.beans.factory.BeanFactory::isTypeMatch (0 bytes)   not inlineable
                              @ 272   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 278   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 329   org.springframework.beans.factory.support.RootBeanDefinition::getDecoratedDefinition (5 bytes)
                              @ 340   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 349   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanName (5 bytes)
                              @ 354   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanDefinition (5 bytes)
               !m             @ 359   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 367   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanName (5 bytes)
                              @ 374   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 388   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 397   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 407   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 423   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 430   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 445   org.springframework.beans.factory.support.AbstractBeanFactory::getTypeForFactoryBean (199 bytes)   no static binding
                              @ 458   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 477   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 491   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 525   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 536   org.springframework.core.ResolvableType::isAssignableFrom (7 bytes)   no static binding
                              @ 543   org.springframework.core.ResolvableType::isAssignableFrom (10 bytes)   no static binding
                              @ 1   java.util.IdentityHashMap::maskNull (12 bytes)
                              @ 17   java.util.IdentityHashMap::hash (18 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 52   java.util.IdentityHashMap::nextKeyIndex (15 bytes)
                              @ 12   org.springframework.util.ClassUtils::isAssignable (81 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 9   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 14   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 23   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 33   java.util.IdentityHashMap::get (60 bytes)   callee is too large
                              @ 56   java.util.IdentityHashMap::get (60 bytes)   callee is too large
                              @ 71   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 6   org.springframework.beans.factory.support.AbstractBeanFactory::isFactoryBean (65 bytes)   callee is too large
                              @ 14   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)
                              @ 12   org.springframework.util.ObjectUtils::isEmpty (15 bytes)
                              @ 19   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)
                              @ 80   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 83   org.springframework.core.DecoratingClassLoader::excludeClass (18 bytes)   not inlineable
                              @ 93   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 107   org.springframework.beans.factory.support.AbstractBeanFactory::evaluateBeanDefinitionString (55 bytes)   callee is too large
                              @ 116   java.lang.String::equals (81 bytes)   callee is too large
                              @ 165  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 171  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 176  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 179  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 182   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 200  java/lang/ClassLoader::loadClass (not loaded)   not inlineable
                              @ 210   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 226  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 232  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 237  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 243  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 248  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 254  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 259  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 262  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 265   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
               !              @ 274   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 280   org.springframework.beans.factory.support.AbstractBeanDefinition::resolveBeanClass (24 bytes)
                                @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                  @ 16   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
               !                @ 13   org.springframework.util.ClassUtils::forName (247 bytes)   callee is too large
                              @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 23   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 20   java.util.Map::get (0 bytes)   no static binding
                              @ 36   org.springframework.beans.factory.config.BeanDefinition::getParentName (0 bytes)   no static binding
                              @ 55   org.springframework.beans.factory.support.RootBeanDefinition::cloneBeanDefinition (9 bytes)   no static binding
                              @ 68   org.springframework.beans.factory.support.RootBeanDefinition::<init> (48 bytes)   callee is too large
                              @ 78   org.springframework.beans.factory.config.BeanDefinition::getParentName (0 bytes)   no static binding
                              @ 83   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 91   java.lang.String::equals (81 bytes)   callee is too large
                              @ 100   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (44 bytes)   callee is too large
                              @ 109   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 129   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (44 bytes)   callee is too large
                              @ 244   org.springframework.beans.factory.support.RootBeanDefinition::<init> (48 bytes)   callee is too large
                              @ 252   org.springframework.beans.factory.support.AbstractBeanDefinition::overrideFrom (391 bytes)   callee is too large
                              @ 257   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)
                              @ 260   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 270   org.springframework.beans.factory.support.AbstractBeanDefinition::setScope (6 bytes)
                              @ 278   org.springframework.beans.factory.config.BeanDefinition::isSingleton (0 bytes)   no static binding
                              @ 288   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 297   org.springframework.beans.factory.config.BeanDefinition::getScope (0 bytes)   no static binding
                              @ 302   org.springframework.beans.factory.support.AbstractBeanDefinition::setScope (6 bytes)
                              @ 310   org.springframework.beans.factory.support.AbstractBeanFactory::isCacheBeanMetadata (5 bytes)
                              @ 323   java.util.Map::put (0 bytes)   no static binding
                              @ 149  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 155  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 160  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 166  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 170  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 176  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 179  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 182   org.springframework.beans.factory.NoSuchBeanDefinitionException::<init> (43 bytes)   not inlineable
                              @ 196   org.springframework.beans.factory.config.BeanDefinition::getResourceDescription (0 bytes)   no static binding
                              @ 206  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 212  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 216   org.springframework.beans.factory.config.BeanDefinition::getParentName (0 bytes)   no static binding
                              @ 221  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 226  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 229  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 234   org.springframework.beans.factory.BeanDefinitionStoreException::<init> (54 bytes)   not inlineable
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 7   org.springframework.core.AttributeAccessorSupport::attributeNames (13 bytes)
                                @ 4   java.util.Map::keySet (0 bytes)   no static binding
                                @ 9   org.springframework.util.StringUtils::toStringArray (14 bytes)
                                  @ 5   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 41   org.springframework.core.AttributeAccessor::getAttribute (0 bytes)   not inlineable
                              @ 46   org.springframework.core.AttributeAccessorSupport::setAttribute (32 bytes)   no static binding
                              @ 10   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.util.Map::keySet (0 bytes)   no static binding
                              @ 9   org.springframework.util.StringUtils::toStringArray (14 bytes)
                                @ 5   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 3   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 4   java.io.File::length (33 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                                @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                                @ 29   java.io.UnixFileSystem::getLength (0 bytes)   native method
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 13   java.lang.SecurityManager::checkRead (15 bytes)   not inlineable
                              @ 17   java.io.File::isInvalid (47 bytes)   callee is too large
                              @ 29   java.io.UnixFileSystem::getLength (0 bytes)   native method
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                               \-> TypeProfile (10625/11729 counts) = java/util/LinkedHashMap$LinkedValues
                              @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                               \-> TypeProfile (10625/11729 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (501/34992 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (34491/34992 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                              @ 114   java.util.LinkedHashMap$LinkedKeyIterator::next (8 bytes)   inline (hot)
                               \-> TypeProfile (501/34992 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (34491/34992 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                @ 4   java.util.HashMap$Node::getKey (5 bytes)   accessor
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 128   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (1104/11734 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                               \-> TypeProfile (10630/11734 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 16   org.springframework.beans.factory.config.BeanDefinition::getScope (0 bytes)   no static binding
                              @ 31   org.springframework.beans.factory.support.AbstractBeanFactory::getRegisteredScope (20 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.Map::get (0 bytes)   no static binding
                              @ 46   org.springframework.beans.factory.config.BeanExpressionContext::<init> (21 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 49   org.springframework.context.expression.StandardBeanExpressionResolver::evaluate (239 bytes)   callee is too large
                              @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                              @ 2   org.springframework.beans.factory.support.AbstractBeanDefinition::<init> (438 bytes)   callee is too large
                              @ 20   java.lang.Object::<init> (1 bytes)
                              @ 36   java.lang.Object::<init> (1 bytes)
                              @ 17   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                               \-> TypeProfile (5142/5142 counts) = java/lang/String
                              @ 192   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   inline (hot)
                                @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                                @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                                @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   too big
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 14   java.util.Map::get (0 bytes)   no static binding
                              @ 36   org.springframework.expression.common.TemplateAwareExpressionParser::parseExpression (27 bytes)
                                @ 5   org.springframework.context.expression.StandardBeanExpressionResolver$1::isTemplate (2 bytes)
                                @ 16   org.springframework.expression.common.TemplateAwareExpressionParser::parseTemplate (44 bytes)   callee is too large
                                @ 23   org.springframework.expression.common.TemplateAwareExpressionParser::doParseExpression (0 bytes)   no static binding
                              @ 48   java.util.Map::put (0 bytes)   no static binding
                              @ 59   java.util.Map::get (0 bytes)   no static binding
                              @ 79   org.springframework.expression.spel.support.StandardEvaluationContext::<init> (50 bytes)   callee is too large
                              @ 90   org.springframework.context.expression.BeanExpressionContextAccessor::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 93   org.springframework.expression.spel.support.StandardEvaluationContext::addPropertyAccessor (9 bytes)
                                @ 1   org.springframework.expression.spel.support.StandardEvaluationContext::initPropertyAccessors (39 bytes)   callee is too large
                                @ 5   org.springframework.expression.spel.support.StandardEvaluationContext::addBeforeDefault (16 bytes)
                                  @ 2   java.util.List::size (0 bytes)   no static binding
                                  @ 10   java.util.List::add (0 bytes)   no static binding
                              @ 102   org.springframework.context.expression.BeanFactoryAccessor::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 105   org.springframework.expression.spel.support.StandardEvaluationContext::addPropertyAccessor (9 bytes)
                                @ 1   org.springframework.expression.spel.support.StandardEvaluationContext::initPropertyAccessors (39 bytes)   callee is too large
                                @ 5   org.springframework.expression.spel.support.StandardEvaluationContext::addBeforeDefault (16 bytes)
                                  @ 2   java.util.List::size (0 bytes)   no static binding
                                  @ 10   java.util.List::add (0 bytes)   no static binding
                              @ 114   org.springframework.context.expression.MapAccessor::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 117   org.springframework.expression.spel.support.StandardEvaluationContext::addPropertyAccessor (9 bytes)
                                @ 1   org.springframework.expression.spel.support.StandardEvaluationContext::initPropertyAccessors (39 bytes)   callee is too large
                                @ 5   org.springframework.expression.spel.support.StandardEvaluationContext::addBeforeDefault (16 bytes)
                                  @ 2   java.util.List::size (0 bytes)   no static binding
                                  @ 10   java.util.List::add (0 bytes)   no static binding
                              @ 126   org.springframework.context.expression.EnvironmentAccessor::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 129   org.springframework.expression.spel.support.StandardEvaluationContext::addPropertyAccessor (9 bytes)
                                @ 1   org.springframework.expression.spel.support.StandardEvaluationContext::initPropertyAccessors (39 bytes)   callee is too large
                                @ 5   org.springframework.expression.spel.support.StandardEvaluationContext::addBeforeDefault (16 bytes)
                                  @ 2   java.util.List::size (0 bytes)   no static binding
                                  @ 10   java.util.List::add (0 bytes)   no static binding
                              @ 139   org.springframework.beans.factory.config.BeanExpressionContext::getBeanFactory (5 bytes)
                              @ 142   org.springframework.context.expression.BeanFactoryResolver::<init> (16 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 145   org.springframework.expression.spel.support.StandardEvaluationContext::setBeanResolver (6 bytes)
                              @ 155   org.springframework.beans.factory.config.BeanExpressionContext::getBeanFactory (5 bytes)
                              @ 158   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)
                              @ 163   org.springframework.expression.spel.support.StandardTypeLocator::<init> (27 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.LinkedList::<init> (10 bytes)
                                  @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                @ 23   org.springframework.expression.spel.support.StandardTypeLocator::registerImport (12 bytes)
                                  @ 5   java.util.LinkedList::add (7 bytes)
                                    @ 2   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                              @ 166   org.springframework.expression.spel.support.StandardEvaluationContext::setTypeLocator (12 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                              @ 170   org.springframework.beans.factory.config.BeanExpressionContext::getBeanFactory (5 bytes)
                              @ 173   org.springframework.beans.factory.support.AbstractBeanFactory::getConversionService (5 bytes)
                              @ 193  org/springframework/expression/spel/support/StandardTypeConverter::<init> (not loaded)   not inlineable
                              @ 196   org.springframework.expression.spel.support.StandardEvaluationContext::setTypeConverter (12 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                              @ 202   org.springframework.context.expression.StandardBeanExpressionResolver::customizeEvaluationContext (1 bytes)
                              @ 212   java.util.Map::put (0 bytes)   no static binding
                              @ 221   org.springframework.expression.common.LiteralExpression::getValue (6 bytes)
                                @ 2   org.springframework.expression.common.LiteralExpression::getValue (5 bytes)
                              @ 235   org.springframework.beans.factory.BeanExpressionException::<init> (7 bytes)   not inlineable
                              @ 4   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   org.springframework.context.expression.StandardBeanExpressionResolver$1::getExpressionPrefix (8 bytes)
                                @ 4   org.springframework.context.expression.StandardBeanExpressionResolver::access$000 (5 bytes)
                              @ 17   org.springframework.context.expression.StandardBeanExpressionResolver$1::getExpressionSuffix (8 bytes)
                                @ 4   org.springframework.context.expression.StandardBeanExpressionResolver::access$100 (5 bytes)
                              @ 30   java.lang.String::length (6 bytes)
                              @ 41   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 70   java.lang.String::substring (79 bytes)   callee is too large
                              @ 73   org.springframework.expression.common.LiteralExpression::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 76   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 86   java.lang.String::length (6 bytes)
                              @ 98   org.springframework.expression.common.TemplateAwareExpressionParser::skipToCorrectEndSuffix (490 bytes)   callee is too large
                              @ 120  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 125  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 130  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 135  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 140  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 145  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 151   java.lang.String::substring (56 bytes)   callee is too large
                              @ 154  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 157  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 160   org.springframework.expression.ParseException::<init> (8 bytes)   not inlineable
                              @ 182  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 187  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 192  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 197  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 202  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 207  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 210  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 213   org.springframework.expression.ParseException::<init> (8 bytes)   not inlineable
                              @ 222   java.lang.String::length (6 bytes)
                              @ 228   java.lang.String::substring (79 bytes)   callee is too large
                              @ 235   java.lang.String::trim (77 bytes)   callee is too large
                              @ 242   java.lang.String::isEmpty (14 bytes)
                              @ 259  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 264  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 269  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 274  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 279  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 284  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 287  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 290   org.springframework.expression.ParseException::<init> (8 bytes)   not inlineable
                              @ 299   org.springframework.expression.common.TemplateAwareExpressionParser::doParseExpression (0 bytes)   no static binding
                              @ 302   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 312   java.lang.String::length (6 bytes)
                              @ 329   java.lang.String::substring (56 bytes)   callee is too large
                              @ 332   org.springframework.expression.common.LiteralExpression::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 335   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 342   java.lang.String::length (6 bytes)
                              @ 355   java.util.ArrayList::toArray (60 bytes)   callee is too large
                              @ 5   org.springframework.context.expression.StandardBeanExpressionResolver$1::isTemplate (2 bytes)
                              @ 16   org.springframework.expression.common.TemplateAwareExpressionParser::parseTemplate (44 bytes)   callee is too large
                              @ 23   org.springframework.expression.common.TemplateAwareExpressionParser::doParseExpression (0 bytes)   no static binding
                              @ 1   java.lang.String::isEmpty (14 bytes)
                              @ 13   org.springframework.expression.common.LiteralExpression::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 20   org.springframework.expression.common.TemplateAwareExpressionParser::parseExpressions (364 bytes)   callee is too large
                              @ 40  org/springframework/expression/common/CompositeStringExpression::<init> (not loaded)   not inlineable
                              @ 4   org.springframework.context.expression.StandardBeanExpressionResolver::access$000 (5 bytes)
                              @ 4   org.springframework.context.expression.StandardBeanExpressionResolver::access$100 (5 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   org.springframework.expression.common.LiteralExpression::getValue (5 bytes)
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 7   org.springframework.util.ClassUtils::resolvePrimitiveClassName (30 bytes)   inline (hot)
                                @ 7   java.lang.String::length (6 bytes)   inline (hot)
                              @ 19   java.util.HashMap::get (23 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                  @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 37   java.lang.String::endsWith (17 bytes)   inline (hot)
                                @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 79   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 130   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 176   java.lang.Class::forName (53 bytes)   inline (hot)
                                @ 2   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 49   java.lang.Class::forName0 (0 bytes)   native method
                              @ 185   java.lang.String::lastIndexOf (13 bytes)   call site not reached
                              @ 200   java.lang.StringBuilder::<init> (7 bytes)   call site not reached
                              @ 207   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 210   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                              @ 215   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                              @ 223   java.lang.String::substring (56 bytes)   already compiled into a medium method
                              @ 226   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                              @ 229   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                              @ 238   java.lang.Class::forName (53 bytes)   too big
                              @ 107   java.lang.Character::toUpperCase (6 bytes)   inline (hot)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::toUpperCase (53 bytes)   inline (hot)
                                    @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 114   java.lang.Character::toUpperCase (6 bytes)   inline (hot)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::toUpperCase (53 bytes)   inline (hot)
                                    @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 131   java.lang.Character::toLowerCase (6 bytes)   inline (hot)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::toLowerCase (39 bytes)   inline (hot)
                                    @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 136   java.lang.Character::toLowerCase (6 bytes)   inline (hot)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::toLowerCase (39 bytes)   inline (hot)
                                    @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 26   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 31   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 86   java.lang.String::indexOf (25 bytes)   inline (hot)
                                @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                              @ 102   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 106   org.springframework.util.StringUtils::deleteAny (73 bytes)   inline (hot)
                                @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 109   java.util.ArrayList::add (29 bytes)   inline (hot)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                    @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                      @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                        @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                        @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 118   java.lang.String::length (6 bytes)   inline (hot)
                              @ 86   java.lang.String::indexOf (25 bytes)   inline (hot)
                                @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                              @ 128   java.lang.String::length (6 bytes)   inline (hot)
                              @ 137   java.lang.String::length (6 bytes)   inline (hot)
                              @ 147   java.lang.String::substring (56 bytes)   inline (hot)
                                @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 151   org.springframework.util.StringUtils::deleteAny (73 bytes)   inline (hot)
                                @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                @ 8   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                  @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                              @ 154   java.util.ArrayList::add (29 bytes)   inline (hot)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                    @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                      @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                        @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                        @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 161   org.springframework.util.StringUtils::toStringArray (14 bytes)   inline (hot)
                                @ 5   java.util.ArrayList::toArray (60 bytes)   inline (hot)
                                  @ 18   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 21   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                  @ 39   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 5   java.lang.String::length (6 bytes)   inline (hot)
                              @ 16   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 23   sun.misc.VM::allowArraySyntax (4 bytes)   inline (hot)
                              @ 31   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
               !              @ 3   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   already compiled into a big method
                              @ 488   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 508   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 528   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 538   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 546   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 172   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 296   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 311   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 346   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 259   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 270   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                              @ 82   java.util.concurrent.ConcurrentHashMap$ForwardingNode::<init> (14 bytes)
                                @ 5   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 172   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 296   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 311   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 346   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 488   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 508   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 528   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 538   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 546   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 625  java/util/concurrent/ConcurrentHashMap$TreeNode::<init> (not loaded)   not inlineable
                              @ 723   java.util.concurrent.ConcurrentHashMap::untreeify (61 bytes)   callee is too large
                              @ 740  java/util/concurrent/ConcurrentHashMap$TreeBin::<init> (not loaded)   not inlineable
                              @ 759   java.util.concurrent.ConcurrentHashMap::untreeify (61 bytes)   callee is too large
                              @ 776  java/util/concurrent/ConcurrentHashMap$TreeBin::<init> (not loaded)   not inlineable
                              @ 791   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 801   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 809   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 259   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 270   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (76 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 50   java.lang.String::length (6 bytes)   inline (hot)
                              @ 65   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 89   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 111   java.lang.String::regionMatches (149 bytes)   already compiled into a big method
                              @ 123   java.lang.String::length (6 bytes)   inline (hot)
                              @ 132   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 162   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 185   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 188   java.lang.String::toLowerCase (8 bytes)   executed < MinInliningThreshold times
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   too big
                              @ 270   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !m             @ 386   java.net.URL::getURLStreamHandler (313 bytes)   too big
                              @ 434   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 504   sun.net.www.protocol.file.Handler::parseURL (18 bytes)   inline (hot)
                              @ 504   sun.net.www.protocol.jar.Handler::parseURL (201 bytes)   inline (hot)
                               \-> TypeProfile (373/9606 counts) = sun/net/www/protocol/jar/Handler
                               \-> TypeProfile (9233/9606 counts) = sun/net/www/protocol/file/Handler
                                @ 11   java.lang.String::indexOf (70 bytes)   too big
                                @ 41   java.lang.String::length (6 bytes)   inline (hot)
                                @ 44   java.lang.String::substring (79 bytes)   already compiled into a medium method
                                @ 55   java.net.URL::getFile (5 bytes)   accessor
                                @ 64   java.lang.String::length (6 bytes)   inline (hot)
                                @ 74   java.lang.String::substring (79 bytes)   already compiled into a medium method
                                @ 79   java.lang.String::equalsIgnoreCase (48 bytes)   too big
                                @ 88   java.lang.String::substring (79 bytes)   already compiled into a medium method
               !                @ 99   sun.net.www.protocol.jar.Handler::parseAbsoluteSpec (93 bytes)   too big
                                @ 115   sun.net.www.protocol.jar.Handler::parseContextSpec (154 bytes)   too big
                                @ 122   sun.net.www.protocol.jar.Handler::indexOfBangSlash (52 bytes)   too big
                                @ 132   java.lang.String::substring (79 bytes)   already compiled into a medium method
                                @ 141   java.lang.String::substring (56 bytes)   already compiled into a medium method
                                @ 150   sun.net.www.ParseUtil::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 159   sun.net.www.ParseUtil::canonizeString (195 bytes)   too big
                                @ 168   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 173   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 178   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 181   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                                @ 197   java.net.URLStreamHandler::setURL (159 bytes)   too big
                                @ 8   java.lang.String::replace (127 bytes)   inline (hot)
                                @ 14   java.net.URLStreamHandler::parseURL (1193 bytes)   hot method too big
                              @ 62   java.lang.Object::equals (11 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::<init> (5 bytes)
                                @ 1   java.util.concurrent.locks.ReentrantLock$Sync::<init> (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::<init> (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.concurrent.locks.ReentrantLock$Sync::<init> (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::<init> (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 13   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 1   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 90   jdk.internal.org.objectweb.asm.Type::getType (269 bytes)   callee is too large
                              @ 1   java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                  @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                  @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
              s               @ 19   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
              s               @ 38   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
              s               @ 55   java.lang.StringBuffer::append (15 bytes)
                                @ 9   java.lang.AbstractStringBuilder::append (40 bytes)   callee is too large
              s               @ 62   java.lang.StringBuffer::append (13 bytes)
                                @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
              s               @ 82   java.lang.StringBuffer::append (15 bytes)
                                @ 9   java.lang.AbstractStringBuilder::append (40 bytes)   callee is too large
                              @ 4   java.lang.StringBuffer::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   jdk.internal.org.objectweb.asm.Type::getDescriptor (87 bytes)   callee is too large
              s               @ 14   java.lang.StringBuffer::toString (36 bytes)   callee is too large
               !              @ 23   java.lang.StringCoding::encode (120 bytes)   inline (hot)
                                @ 3   java.lang.StringCoding::deref (19 bytes)   inline (hot)
                                  @ 1   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                    @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                      @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                        @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                        @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                    @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                  @ 15   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                    @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 32   java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)   accessor
                                @ 35   java.lang.String::equals (81 bytes)   (intrinsic)
               !                @ 116   java.lang.StringCoding$StringEncoder::encode (179 bytes)   inline (hot)
                                  @ 5   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)   inline (hot)
                                  @ 8   java.lang.StringCoding::access$000 (6 bytes)   inline (hot)
                                    @ 2   java.lang.StringCoding::scale (7 bytes)   inline (hot)
                                  @ 48   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   hot method too big
                                  @ 67   java.lang.StringCoding::access$300 (8 bytes)   inline (hot)
                                    @ 4   java.lang.StringCoding::safeTrim (24 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 6   org.springframework.beans.factory.config.BeanDefinition::getAttribute (10 bytes)   no static binding
                              @ 11   java.lang.String::equals (81 bytes)   callee is too large
                              @ 20   java.net.URL::getProtocol (5 bytes)   accessor
               !m             @ 36   java.net.URL::set (114 bytes)   inline (hot)
                              @ 5   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)   inline (hot)
                              @ 8   java.lang.StringCoding::access$000 (6 bytes)   inline (hot)
                                @ 2   java.lang.StringCoding::scale (7 bytes)   inline (hot)
                              @ 48   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   hot method too big
                              @ 67   java.lang.StringCoding::access$300 (8 bytes)   inline (hot)
                                @ 4   java.lang.StringCoding::safeTrim (24 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 10   java.lang.NullPointerException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 25   java.util.zip.ZipFile::ensureOpen (37 bytes)   callee is too large
                              @ 32   java.util.zip.ZipCoder::isUTF8 (5 bytes)
                              @ 61   java.util.zip.ZipCoder::getBytesUTF8 (43 bytes)   callee is too large
                              @ 65   java.util.zip.ZipFile::getEntry (0 bytes)   native method
                              @ 84   java.util.zip.ZipCoder::getBytes (192 bytes)   callee is too large
                              @ 88   java.util.zip.ZipFile::getEntry (0 bytes)   native method
                              @ 109   java.util.zip.ZipFile$ZipFileInputStream::<init> (41 bytes)   callee is too large
                              @ 115   java.util.zip.ZipFile::getEntryMethod (0 bytes)   native method
                              @ 159   java.util.Map::put (0 bytes)   no static binding
                              @ 186   java.util.zip.ZipFile::getEntrySize (0 bytes)   native method
               !m             @ 222   java.util.zip.ZipFile::getInflater (56 bytes)   callee is too large
                              @ 239   java.util.zip.ZipFile$ZipFileInflaterInputStream::<init> (29 bytes)
                                @ 10   java.util.zip.InflaterInputStream::<init> (79 bytes)   callee is too large
                              @ 260   java.util.Map::put (0 bytes)   no static binding
                              @ 292   java.util.zip.ZipException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.util.jar.JarFile::getManifestFromReference (117 bytes)   callee is too large
                              @ 11   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 27   java.util.jar.JarFile::getManEntry (83 bytes)   callee is too large
                              @ 3   java.lang.StringCoding::deref (19 bytes)   inline (hot)
                                @ 1   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                  @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                    @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                      @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                      @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                      @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                  @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                @ 15   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 32   java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)   accessor
                              @ 35   java.lang.String::equals (81 bytes)   (intrinsic)
               !              @ 116   java.lang.StringCoding$StringEncoder::encode (179 bytes)   inline (hot)
                                @ 5   java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)   inline (hot)
                                @ 8   java.lang.StringCoding::access$000 (6 bytes)   inline (hot)
                                  @ 2   java.lang.StringCoding::scale (7 bytes)   inline (hot)
                                @ 48   sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   hot method too big
                                @ 67   java.lang.StringCoding::access$300 (8 bytes)   inline (hot)
                                  @ 4   java.lang.StringCoding::safeTrim (24 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
               !              @ 44   java.util.jar.JarFile::getBytes (96 bytes)   callee is too large
                              @ 61  java/util/jar/JarVerifier::<init> (not loaded)   not inlineable
                              @ 80   java.io.ByteArrayInputStream::<init> (26 bytes)
                                @ 1   java.io.InputStream::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 83   java.util.jar.Manifest::<init> (37 bytes)   callee is too large
               !m             @ 96   java.util.zip.ZipFile::getInputStream (304 bytes)   callee is too large
                              @ 99   java.util.jar.Manifest::<init> (7 bytes)
                                @ 3   java.util.jar.Manifest::<init> (37 bytes)   callee is too large
                              @ 109   java.lang.ref.SoftReference::<init> (13 bytes)
                                @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.String::replace (127 bytes)   inline (hot)
                              @ 14   java.net.URLStreamHandler::parseURL (1193 bytes)   hot method too big
                              @ 36   java.lang.String::regionMatches (149 bytes)   already compiled into a big method
                              @ 1   java.util.ArrayDeque::pollFirst (42 bytes)   callee is too large
                              @ 1   java.util.jar.JarFile::maybeInstantiateVerifier (96 bytes)   callee is too large
               !m             @ 13   java.util.zip.ZipFile::getInputStream (304 bytes)   callee is too large
               !              @ 25   java.util.jar.JarFile::initializeVerifier (247 bytes)   callee is too large
               !m             @ 42   java.util.zip.ZipFile::getInputStream (304 bytes)   callee is too large
                              @ 51   java.util.jar.JarFile::getManifestFromReference (117 bytes)   callee is too large
                              @ 70   java.util.zip.ZipEntry::getName (5 bytes)
                              @ 73   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)   no static binding
               !m             @ 78   java.util.zip.ZipFile::getInputStream (304 bytes)   callee is too large
                              @ 85  java/util/jar/JarVerifier$VerifierStream::<init> (not loaded)   not inlineable
                              @ 4   sun.misc.URLClassPath$JarLoader::access$600 (5 bytes)
                              @ 0   sun.misc.SharedSecrets::javaUtilJarAccess (18 bytes)
                                @ 11   sun.misc.Unsafe::ensureClassInitialized (0 bytes)   native method
                              @ 7   sun.misc.URLClassPath$JarLoader::access$700 (5 bytes)
                              @ 10   java.util.jar.JavaUtilJarAccessImpl::ensureInitialization (5 bytes)
              s!                @ 1   java.util.jar.JarFile::ensureInitialization (41 bytes)   callee is too large
                              @ 19   sun.misc.URLClassPath$JarLoader::access$700 (5 bytes)
                              @ 22   java.util.jar.JarFile::getManifest (5 bytes)   no static binding
                              @ 4   java.util.jar.JarFile::access$200 (5 bytes)
                                @ 1   java.util.jar.JarFile::maybeInstantiateVerifier (96 bytes)   callee is too large
                              @ 16   java.lang.RuntimeException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 31   java.util.jar.JarFile::access$300 (5 bytes)
                              @ 42   java.util.jar.JarFile::access$300 (5 bytes)
                              @ 50  java/util/jar/JarVerifier::getCodeSigners (not loaded)   not inlineable
                              @ 71  java/lang/Object::clone (not loaded)   not inlineable
              s!              @ 1   java.util.jar.JarFile::ensureInitialization (41 bytes)   callee is too large
                              @ 1   java.util.jar.JarFile::maybeInstantiateVerifier (96 bytes)   callee is too large
                              @ 13   java.lang.RuntimeException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 32   java.util.jar.JarFile::initializeVerifier (247 bytes)   callee is too large
                              @ 1   java.util.jar.Manifest::getEntries (5 bytes)
                              @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 4   sun.misc.URLClassPath$JarLoader::access$700 (5 bytes)
              s               @ 11   java.util.jar.JarFile::getInputStream (89 bytes)   callee is too large
                              @ 4   java.util.zip.ZipEntry::getSize (5 bytes)
                              @ 4   java.util.jar.JarEntry::getCodeSigners (22 bytes)   no static binding
                              @ 1   java.util.jar.JarFile::maybeInstantiateVerifier (96 bytes)   callee is too large
                              @ 2   java.util.jar.Manifest::getAttributes (14 bytes)
                                @ 1   java.util.jar.Manifest::getEntries (5 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 22  java/util/jar/JarVerifier::isTrustedManifestEntry (not loaded)   not inlineable
                              @ 36   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 51   java.lang.SecurityException::<init> (6 bytes)   not inlineable
                              @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 9   java.lang.AbstractStringBuilder::append (50 bytes)   no static binding
                              @ 21   java.lang.Integer::stringSize (21 bytes)
                              @ 30   java.lang.Integer::stringSize (21 bytes)
                              @ 43   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 52   java.lang.Integer::getChars (131 bytes)   callee is too large
                              @ 18   org.springframework.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 822   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 959   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 983   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 968   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 974   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 992   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 998   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1011   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1015   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1028   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1032   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1062   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1066   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1045   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 1049   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1079   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 1089   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 831   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 840   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 846   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 855   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 864   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 870   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1096   org.springframework.asm.Frame::getLocal (46 bytes)   callee is too large
                              @ 1099   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1147   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1151   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1174   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1269   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1273   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1282   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1291   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1302   org.springframework.asm.Frame::getLocal (46 bytes)   callee is too large
                              @ 1362   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1327   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1181   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1190   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1201   org.springframework.asm.Frame::getLocal (46 bytes)   callee is too large
                              @ 1261   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1226   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1378   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1370   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1401   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1409   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1415   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1422   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1428   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1436   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1442   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1448   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1455   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1461   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1467   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1475   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1481   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1487   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1493   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1500   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1506   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1514   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1520   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1526   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1532   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1539   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1545   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1551   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1559   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1565   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1571   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1577   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1583   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1590   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1596   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1602   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1608   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1616   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1622   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1628   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1634   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1640   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1646   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1653   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1659   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1667   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1673   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1729   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1735   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1741   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1749   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1755   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1761   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1695   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1701   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1707   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1771   org.springframework.asm.Frame::setLocal (65 bytes)   callee is too large
                              @ 1799   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1805   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1127   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1133   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1139   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1779   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1785   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1791   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1813   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1819   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1825   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1107   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1113   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1119   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1715   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1721   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1681   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1687   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1847   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1853   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1865   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1394   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1876   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 1887   org.springframework.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1895   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1905   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 1916   org.springframework.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1920   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1932   org.springframework.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1943   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 1960   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 1971   org.springframework.asm.Frame::addInitializedType (77 bytes)   callee is too large
                              @ 1981   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 1992   org.springframework.asm.Frame::pop (53 bytes)   callee is too large
                              @ 2002   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 2018   org.springframework.asm.SymbolTable::addUninitializedType (103 bytes)   callee is too large
                              @ 2022   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2029   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 2083   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2092   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2128   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2137   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2101   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2110   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2119   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2146   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2156   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 2167   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 2174   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2189   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2194   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2199   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 2202   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 2205   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 2218   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 2222   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2235   org.springframework.asm.Frame::pop (42 bytes)   callee is too large
                              @ 2242   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 2255   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 2268   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 2272   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 1833   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 1839   org.springframework.asm.Frame::push (109 bytes)   callee is too large
                              @ 2280   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 2290   org.springframework.asm.Frame::push (63 bytes)   callee is too large
                              @ 1386   org.springframework.asm.Frame::pop (44 bytes)   callee is too large
                              @ 2300   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
              s               @ 38   sun.misc.URLClassPath::getLookupCache (98 bytes)   inline (hot)
              s               @ 51   sun.misc.URLClassPath::getNextLoader (88 bytes)   already compiled into a big method
               !              @ 62   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   already compiled into a big method
               !              @ 62   sun.misc.URLClassPath$FileLoader::getResource (164 bytes)   inline (hot)
                               \-> TypeProfile (2742/25940 counts) = sun/misc/URLClassPath$FileLoader
                               \-> TypeProfile (23198/25940 counts) = sun/misc/URLClassPath$JarLoader
                                @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                                @ 10   java.net.URL::<init> (8 bytes)   inline (hot)
               !                  @ 4   java.net.URL::<init> (543 bytes)   hot method too big
                                @ 20   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                                @ 25   sun.net.www.ParseUtil::encodePath (336 bytes)   hot method too big
                                @ 28   java.net.URL::<init> (8 bytes)   inline (hot)
               !                  @ 4   java.net.URL::<init> (543 bytes)   hot method too big
                                @ 33   java.net.URL::getFile (5 bytes)   accessor
                                @ 38   java.net.URL::getFile (5 bytes)   accessor
                                @ 41   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !                @ 54   sun.misc.URLClassPath::check (123 bytes)   inline (hot)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 60   java.lang.String::indexOf (7 bytes)   (intrinsic)
                                @ 126   java.lang.String::replace (127 bytes)   inline (hot)
                                @ 129   java.io.File::<init> (113 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 31   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 75   java.io.UnixFileSystem::normalize (75 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 19   java.lang.String::charAt (29 bytes)   inline (hot)
                                    @ 69   java.io.UnixFileSystem::normalize (132 bytes)   too big
                                  @ 78   java.io.UnixFileSystem::resolve (103 bytes)   inline (hot)
                                    @ 3   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 13   java.lang.String::charAt (29 bytes)   inline (hot)
                                    @ 54   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 83   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                    @ 87   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                    @ 92   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                    @ 96   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                    @ 99   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                  @ 106   java.io.UnixFileSystem::prefixLength (25 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 11   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 136   java.io.File::exists (43 bytes)   inline (hot)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                  @ 17   java.io.File::isInvalid (47 bytes)   inline (hot)
                                    @ 13   java.lang.String::indexOf (7 bytes)   inline (hot)
                                      @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                                  @ 29   java.io.UnixFileSystem::getBooleanAttributes (49 bytes)   inline (hot)
                                    @ 2   java.io.UnixFileSystem::getBooleanAttributes0 (0 bytes)   native method
                                    @ 7   java.io.File::getName (42 bytes)   inline (hot)
                                      @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                        @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                          @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                        @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                            @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                            @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 12   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 20   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 151   sun.misc.URLClassPath$FileLoader$1::<init> (26 bytes)   inline (hot)
                                  @ 22   sun.misc.Resource::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
              s               @ 51   sun.misc.URLClassPath::getNextLoader (88 bytes)   already compiled into a big method
                              @ 119   org.springframework.asm.SymbolTable::addMergedType (148 bytes)   callee is too large
                              @ 146   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 235   java.lang.Math::min (11 bytes)
                              @ 244   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 18   org.springframework.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 121   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 192   java.lang.Object::equals (11 bytes)   no static binding
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 282  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 339   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 38   java.lang.Math::max (11 bytes)
                              @ 52   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 234   org.springframework.asm.Frame::getInitializedType (152 bytes)   callee is too large
                              @ 250   org.springframework.asm.Frame::merge (317 bytes)   callee is too large
                              @ 292   org.springframework.asm.Frame::merge (317 bytes)   callee is too large
                              @ 330   org.springframework.asm.Frame::merge (317 bytes)   callee is too large
                              @ 404   org.springframework.asm.Frame::getInitializedType (152 bytes)   callee is too large
                              @ 420   org.springframework.asm.Frame::merge (317 bytes)   callee is too large
                              @ 587   org.springframework.asm.Frame::getInitializedType (152 bytes)   callee is too large
                              @ 606   org.springframework.asm.Frame::merge (317 bytes)   callee is too large
                              @ 59   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 69   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 76   org.springframework.asm.SymbolTable::getType (7 bytes)
                              @ 82   org.springframework.asm.SymbolTable::addConstantClass (8 bytes)
                                @ 4   org.springframework.asm.SymbolTable::addConstantUtf8Reference (101 bytes)   callee is too large
                              @ 88   org.springframework.asm.ByteVector::putShort (52 bytes)   callee is too large
                              @ 98   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 104   org.springframework.asm.SymbolTable::getType (7 bytes)
                              @ 111   org.springframework.asm.ByteVector::putShort (52 bytes)   callee is too large
                              @ 122   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 133   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 149   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 169   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 177   org.springframework.asm.SymbolTable::getType (7 bytes)
                              @ 183   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 188   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 308   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 319   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 341   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 330   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 264   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 275   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 286   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 297   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 359   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 365   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 368   org.springframework.asm.SymbolTable::addConstantClass (8 bytes)
                                @ 4   org.springframework.asm.SymbolTable::addConstantUtf8Reference (101 bytes)   callee is too large
                              @ 374   org.springframework.asm.ByteVector::putShort (52 bytes)   callee is too large
                              @ 352   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 2   org.springframework.asm.SymbolTable::hash (10 bytes)
                                @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 8   org.springframework.asm.SymbolTable::get (13 bytes)
                              @ 42   java.lang.String::equals (81 bytes)   callee is too large
                              @ 68   org.springframework.asm.SymbolTable::addConstantUtf8 (98 bytes)   callee is too large
                              @ 71   org.springframework.asm.ByteVector::put12 (64 bytes)   callee is too large
                              @ 94   org.springframework.asm.SymbolTable$Entry::<init> (17 bytes)
                                @ 7   org.springframework.asm.Symbol::<init> (38 bytes)   callee is too large
                              @ 97   org.springframework.asm.SymbolTable::put (150 bytes)   callee is too large
                              @ 1   java.lang.String::length (6 bytes)
                              @ 17   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 43   org.springframework.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 85   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 127   org.springframework.asm.ByteVector::encodeUtf8 (337 bytes)   callee is too large
                              @ 2   org.springframework.asm.SymbolTable::hash (10 bytes)
                                @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 8   org.springframework.asm.SymbolTable::get (13 bytes)
                              @ 37   java.lang.String::equals (81 bytes)   callee is too large
                              @ 61   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 65   org.springframework.asm.ByteVector::putUTF8 (144 bytes)   callee is too large
                              @ 88   org.springframework.asm.SymbolTable$Entry::<init> (17 bytes)
                                @ 7   org.springframework.asm.Symbol::<init> (38 bytes)   callee is too large
                              @ 91   org.springframework.asm.SymbolTable::put (150 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)
                              @ 11  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 5   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)
                              @ 10   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (7 bytes)
                                @ 3   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.util.Deque::poll (0 bytes)   not inlineable
               !m             @ 27   java.util.zip.Inflater::ended (32 bytes)
                                @ 11   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 52   java.util.zip.Inflater::<init> (27 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 17   java.util.zip.Inflater::init (0 bytes)   native method
                                @ 20   java.util.zip.ZStreamRef::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.io.FilterInputStream::<init> (10 bytes)
                                @ 1   java.io.InputStream::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 62   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 48   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   java.lang.String::equals (81 bytes)   callee is too large
                              @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
               !m             @ 9   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 25   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 35   org.springframework.beans.factory.FactoryBean::isSingleton (2 bytes)   not inlineable
                              @ 50   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 63   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 75   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 85   org.springframework.beans.factory.support.AbstractBeanFactory::originalBeanName (37 bytes)   callee is too large
                              @ 88   org.springframework.beans.factory.BeanFactory::isSingleton (0 bytes)   not inlineable
                              @ 96   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 103   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 113   org.springframework.beans.factory.support.AbstractBeanFactory::isFactoryBean (35 bytes)
                                @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                                @ 23   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 120   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 133  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 138  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 142  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 145  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 148   org.springframework.beans.factory.support.AbstractBeanFactory::getBean (9 bytes)
               !                @ 5   org.springframework.beans.factory.support.AbstractBeanFactory::doGetBean (833 bytes)   callee is too large
                              @ 158   org.springframework.beans.factory.FactoryBean::isSingleton (2 bytes)   not inlineable
                              @ 165   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 18   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 27   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 31   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 34   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 37   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 59   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 64   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 86   java.lang.Math::min (11 bytes)
                              @ 89   java.lang.System::arraycopy (0 bytes)   intrinsic
               !              @ 1   java.lang.invoke.MemberName::clone (14 bytes)
                                @ 1   java.lang.Object::clone (0 bytes)   native method
                                @ 10   java.lang.invoke.MethodHandleStatics::newInternalError (9 bytes)
                                  @ 5  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 32   java.lang.invoke.MethodHandleNatives::resolve (0 bytes)   native method
                              @ 41   java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
                              @ 44   java.lang.invoke.MemberName::checkForTypeAlias (168 bytes)   callee is too large
                              @ 50   java.lang.invoke.MemberName::access$002 (7 bytes)
                              @ 85   java.lang.invoke.MemberName::access$002 (7 bytes)
                              @ 117   java.lang.invoke.MemberName::access$200 (6 bytes)
                                @ 2   java.lang.invoke.MemberName::initResolved (53 bytes)   callee is too large
                              @ 72   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 112   java.util.concurrent.ConcurrentHashMap$Traverser::pushState (66 bytes)   callee is too large
                              @ 148   java.util.concurrent.ConcurrentHashMap$Traverser::recoverState (118 bytes)   callee is too large
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 41   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 70   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 94   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 147   java.lang.Object::equals (11 bytes)   no static binding
                              @ 178   java.lang.Object::equals (11 bytes)   no static binding
                              @ 228   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 290  java/util/concurrent/ConcurrentHashMap$TreeNode::findTreeNode (not loaded)   not inlineable
                              @ 324   java.lang.Object::equals (11 bytes)   no static binding
                              @ 351  java/util/concurrent/ConcurrentHashMap$TreeBin::removeTreeNode (not loaded)   not inlineable
                              @ 366   java.util.concurrent.ConcurrentHashMap::untreeify (61 bytes)   callee is too large
                              @ 369   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 405   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
                              @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 28   java.util.concurrent.ConcurrentHashMap$Traverser::advance (188 bytes)   callee is too large
                              @ 8   org.springframework.beans.factory.support.AbstractBeanFactory::lambda$clearMetadataCache$4 (14 bytes)
                                @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::isBeanEligibleForMetadataCaching (11 bytes)   no static binding
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::isBeanEligibleForMetadataCaching (11 bytes)   no static binding
                              @ 9   org.springframework.beans.factory.support.AbstractBeanFactory::isBeanEligibleForMetadataCaching (11 bytes)
                                @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 13   java.lang.IllegalStateException::<init> (5 bytes)   don't inline Throwable constructors
               !m             @ 32   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 1   java.lang.Object::clone (0 bytes)   native method
                              @ 10   java.lang.invoke.MethodHandleStatics::newInternalError (9 bytes)
                                @ 5  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                              @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (34491/35328 counts) = java/util/LinkedHashMap$LinkedValueIterator
                              @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                               \-> TypeProfile (34491/35328 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::removeNode (291 bytes)   callee is too large
                              @ 1   java.net.URL::getProtocol (5 bytes)   accessor
                              @ 7   java.net.URL::getAuthority (5 bytes)   accessor
                              @ 13   java.net.URL::getUserInfo (5 bytes)   accessor
                              @ 19   java.net.URL::getHost (5 bytes)   accessor
                              @ 25   java.net.URL::getPort (5 bytes)   accessor
                              @ 31   java.net.URL::getPath (5 bytes)   accessor
                              @ 37   java.net.URL::getQuery (5 bytes)   accessor
                              @ 43   java.net.URL::getRef (5 bytes)   accessor
                              @ 63   java.lang.String::indexOf (7 bytes)   inline (hot)
                                @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                              @ 138   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 150   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 162   java.lang.String::charAt (29 bytes)   call site not reached
                              @ 174   java.lang.String::charAt (29 bytes)   call site not reached
                              @ 204   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 216   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 231   java.lang.String::indexOf (70 bytes)   too big
                              @ 252   java.lang.String::indexOf (70 bytes)   too big
                              @ 277   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 289   java.lang.String::indexOf (7 bytes)   call site not reached
                              @ 306   java.lang.String::lastIndexOf (13 bytes)   call site not reached
                              @ 326   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 337   java.lang.String::substring (56 bytes)   already compiled into a medium method
                              @ 355   java.lang.String::length (6 bytes)   inline (hot)
                              @ 364   java.lang.String::charAt (29 bytes)   call site not reached
                              @ 376   java.lang.String::indexOf (7 bytes)   call site not reached
                              @ 397   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 407   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 568   java.lang.String::indexOf (7 bytes)   call site not reached
                              @ 583   java.lang.String::length (6 bytes)   inline (hot)
                              @ 599   java.lang.String::substring (56 bytes)   already compiled into a medium method
                              @ 602   java.lang.Integer::parseInt (7 bytes)   executed < MinInliningThreshold times
                              @ 612   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 668   java.lang.String::length (6 bytes)   inline (hot)
                              @ 695   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 707   java.lang.String::substring (79 bytes)   already compiled into a medium method
                              @ 722   java.lang.String::length (6 bytes)   inline (hot)
                              @ 735   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                  @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 763   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 773   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 776   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 781   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 788   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 791   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                  @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 794   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 919   java.lang.String::indexOf (7 bytes)   (intrinsic)
                              @ 975   java.lang.String::indexOf (25 bytes)   inline (hot)
                                @ 21   java.lang.String::indexOf (166 bytes)   inline (hot)
                              @ 1072   java.lang.String::endsWith (17 bytes)   inline (hot)
                                @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 1123   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 1150   java.lang.String::endsWith (17 bytes)   inline (hot)
                                @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 1161   java.lang.String::length (6 bytes)   inline (hot)
                              @ 1166   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1189   java.net.URLStreamHandler::setURL (40 bytes)   inline (hot)
                                @ 20   java.net.URL::getProtocol (5 bytes)   accessor
               !m               @ 36   java.net.URL::set (114 bytes)   inline (hot)
                              @ 3   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 4   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::determineTargetType (60 bytes)   inline (hot)
                                @ 1   org.springframework.beans.factory.support.RootBeanDefinition::getTargetType (30 bytes)   inline (hot)
                                @ 12   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)   accessor
               !                @ 22   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getTypeForFactoryMethod (536 bytes)   too big
               !                @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   inline (hot)
                                  @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)   inline (hot)
                                  @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   too big
                                  @ 12   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
               !                  @ 40   org.springframework.beans.factory.support.AbstractBeanFactory::doResolveBeanClass (284 bytes)   inline (hot)
                                    @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)   unloaded signature classes
                                    @ 12   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                    @ 19   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                                    @ 93   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)   inline (hot)
                                      @ 16   java.lang.Class::getName (21 bytes)   inline (hot)
                                        @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 107   org.springframework.beans.factory.support.AbstractBeanFactory::evaluateBeanDefinitionString (55 bytes)   inline (hot)
                                      @ 16   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)   accessor
                                      @ 31   org.springframework.beans.factory.support.AbstractBeanFactory::getRegisteredScope (20 bytes)   unloaded signature classes
                                      @ 46   org.springframework.beans.factory.config.BeanExpressionContext::<init> (21 bytes)   unloaded signature classes
               !                      @ 49   org.springframework.context.expression.StandardBeanExpressionResolver::evaluate (239 bytes)   inline (hot)
                                       \-> TypeProfile (1348/1348 counts) = org/springframework/context/expression/StandardBeanExpressionResolver
                                        @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                          @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                        @ 14   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                         \-> TypeProfile (1343/1343 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                          @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                            @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                          @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 36   org.springframework.expression.common.TemplateAwareExpressionParser::parseExpression (27 bytes)   inline (hot)
                                         \-> TypeProfile (488/488 counts) = org/springframework/expression/spel/standard/SpelExpressionParser
                                          @ 16   org.springframework.expression.common.TemplateAwareExpressionParser::parseTemplate (44 bytes)   too big
                                          @ 23   org.springframework.expression.spel.standard.SpelExpressionParser::doParseExpression (7 bytes)   never executed
                                        @ 48   java.util.concurrent.ConcurrentHashMap::put (8 bytes)   inline (hot)
                                         \-> TypeProfile (488/488 counts) = java/util/concurrent/ConcurrentHashMap
               !m                         @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
                                        @ 59   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                         \-> TypeProfile (1343/1343 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 1   org.springframework.beans.factory.config.BeanExpressionContext::hashCode (8 bytes)   inline (hot)
                                            @ 4   java.lang.Object::hashCode (0 bytes)   native method
                                             \-> TypeProfile (1489/1489 counts) = org/springframework/beans/factory/support/DefaultListableBeanFactory
                                            @ 4   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                          @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                            @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                          @ 73   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                          @ 149   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                        @ 221   org.springframework.expression.common.LiteralExpression::getValue (6 bytes)   inline (hot)
                                         \-> TypeProfile (1343/1343 counts) = org/springframework/expression/common/LiteralExpression
                                          @ 2   org.springframework.expression.common.LiteralExpression::getValue (5 bytes)   inline (hot)
                                    @ 116   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 280   org.springframework.beans.factory.support.AbstractBeanDefinition::resolveBeanClass (24 bytes)   unloaded signature classes
                                  @ 48   java.security.PrivilegedActionException::getException (5 bytes)   exception method
                                @ 38   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                @ 45   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                              @ 15   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)   accessor
                              @ 22   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)   accessor
                              @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)   accessor
                              @ 32   java.util.concurrent.CopyOnWriteArrayList::iterator (14 bytes)   inline (hot)
                               \-> TypeProfile (6319/6319 counts) = java/util/concurrent/CopyOnWriteArrayList
                                @ 5   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)   accessor
                                @ 10   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (7 bytes)   unloaded signature classes
                              @ 41   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                               \-> TypeProfile (25276/25276 counts) = java/util/concurrent/CopyOnWriteArrayList$COWIterator
                              @ 51   java.util.concurrent.CopyOnWriteArrayList$COWIterator::next (32 bytes)   inline (hot)
                                @ 1   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                              @ 81   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter::predictBeanType (2 bytes)   inline (hot)
                              @ 41   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                              @ 8   java.lang.reflect.Executable::getRoot (0 bytes)   no static binding
              s               @ 18   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                              @ 29   java.lang.reflect.Executable::getAnnotationBytes (0 bytes)   no static binding
                              @ 32   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 36   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 39   java.lang.System$2::getConstantPool (5 bytes)
                                @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 45   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
               !              @ 48   sun.reflect.annotation.AnnotationParser::parseAnnotations (37 bytes)   callee is too large
                              @ 4   java.lang.invoke.MethodTypeForm::parameterSlotCount (9 bytes)
                                @ 5   java.lang.invoke.MethodTypeForm::unpack (30 bytes)
                              @ 5   java.lang.invoke.MethodTypeForm::unpack (30 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 5   java.lang.invoke.MethodType::checkRtype (6 bytes)
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 9   java.lang.invoke.MethodType::checkPtypes (61 bytes)   callee is too large
                              @ 30   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 1   java.lang.invoke.MethodType::ptypes (5 bytes)
                              @ 7   java.lang.invoke.MethodTypeForm::canonicalizeAll (66 bytes)   callee is too large
                              @ 13   java.lang.invoke.MethodType::returnType (5 bytes)
                              @ 21   java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)   callee is too large
                              @ 60   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 21   java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init> (15 bytes)
                                @ 3   java.lang.ref.WeakReference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 8   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 26   java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
                              @ 35   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 56   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 10   sun.invoke.util.BytecodeDescriptor::unparse (12 bytes)
                                @ 1   java.lang.invoke.MethodType::returnType (5 bytes)
                                @ 5   java.lang.invoke.MethodType::parameterList (17 bytes)
                                  @ 4   java.lang.Object::clone (0 bytes)   no static binding
                                  @ 10   java.util.Arrays::asList (9 bytes)
                                    @ 5   java.util.Arrays$ArrayList::<init> (16 bytes)
                                      @ 1   java.util.AbstractList::<init> (10 bytes)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 6   java.util.Objects::requireNonNull (14 bytes)
                                        @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                  @ 13   java.util.Collections::unmodifiableList (27 bytes)
                                    @ 12   java.util.Collections$UnmodifiableRandomAccessList::<init> (6 bytes)
                                      @ 2   java.util.Collections$UnmodifiableList::<init> (11 bytes)
                                        @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)   callee is too large
                                @ 8   sun.invoke.util.BytecodeDescriptor::unparseMethod (68 bytes)   callee is too large
                              @ 5   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 8   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 34   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 50   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 60   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 71   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 77   java.io.DataOutputStream::writeByte (14 bytes)
                                @ 5   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 10   java.io.DataOutputStream::incCount (20 bytes)
                              @ 86   java.io.DataOutputStream::writeShort (35 bytes)
                                @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 31   java.io.DataOutputStream::incCount (20 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 19   java.lang.Object::equals (11 bytes)   no static binding
                              @ 28   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 31   java.lang.Class::isArray (0 bytes)   native method
                              @ 38   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 41   java.lang.Class::isArray (0 bytes)   native method
                              @ 49   org.springframework.util.ObjectUtils::arrayEquals (290 bytes)   callee is too large
                              @ 21   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 45   java.lang.Class::newReflectionData (74 bytes)   callee is too large
                              @ 1   java.lang.reflect.Executable::<init> (5 bytes)
                                @ 1   java.lang.reflect.AccessibleObject::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 16   org.springframework.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 54   org.springframework.asm.Frame::execute (2305 bytes)   no static binding
                              @ 111   org.springframework.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor (94 bytes)   callee is too large
                              @ 4   org.springframework.asm.SymbolTable::hash (10 bytes)
                                @ 4   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 10   org.springframework.asm.SymbolTable::get (13 bytes)
                              @ 41   java.lang.String::equals (81 bytes)   callee is too large
                              @ 74   org.springframework.asm.SymbolTable$Entry::<init> (17 bytes)
                                @ 7   org.springframework.asm.Symbol::<init> (38 bytes)   callee is too large
                              @ 77   org.springframework.asm.SymbolTable::addTypeInternal (85 bytes)   callee is too large
                              @ 2   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 143   java.lang.String::length (6 bytes)
                              @ 148   java.lang.String::substring (79 bytes)   callee is too large
                              @ 156   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 169   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 186   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 366   java.lang.String::length (6 bytes)
                              @ 371   java.lang.String::substring (79 bytes)   callee is too large
                              @ 379   org.springframework.asm.SymbolTable::addType (81 bytes)   callee is too large
                              @ 392   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 411   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
               !m             @ 1   java.util.zip.ZipFile$ZipFileInflaterInputStream::close (67 bytes)   callee is too large
               !m             @ 1   java.util.zip.ZipFile$ZipFileInputStream::close (110 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   org.springframework.asm.SymbolTable::addConstantUtf8Reference (101 bytes)   callee is too large
                              @ 1   java.lang.Number::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   org.springframework.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.Class::isArray (0 bytes)   native method
                              @ 12   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 17   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 25   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 158   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 152   java.lang.AssertionError::<init> (5 bytes)   not inlineable
                              @ 168   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 173   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 178   java.lang.String::length (6 bytes)
                              @ 196   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 216   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 229   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 21   org.springframework.asm.Frame::putAbstractType (379 bytes)   callee is too large
                              @ 2   java.util.LinkedList::checkElementIndex (22 bytes)
                                @ 2   java.util.LinkedList::isElementIndex (18 bytes)
                                @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 7   java.util.LinkedList::node (65 bytes)   callee is too large
                              @ 2   java.util.LinkedList::isElementIndex (18 bytes)
                              @ 14   java.util.LinkedList::outOfBoundsMsg (32 bytes)
                                @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 17   org.springframework.asm.Edge::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                              @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m             @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                              @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m             @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                              @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
                              @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                              @ 11   java.lang.UnsupportedOperationException::<init> (5 bytes)   not inlineable
                              @ 26  java/nio/ReadOnlyBufferException::<init> (not loaded)   not inlineable
                              @ 17   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 21   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 28   java.lang.reflect.Method::getName (5 bytes)
                              @ 32   java.lang.reflect.Method::getName (5 bytes)
                              @ 43   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 46   java.lang.Object::equals (11 bytes)
                              @ 63   java.lang.reflect.Executable::equalParamTypes (36 bytes)   callee is too large
                              @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                              @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s               @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                              @ 11   java.util.Map::get (0 bytes)   no static binding
                              @ 16   java.lang.Class::cast (27 bytes)
                              @ 5   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                               \-> TypeProfile (17938/17938 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 24   org.springframework.beans.factory.support.DefaultListableBeanFactory::getBeanDefinition (78 bytes)   inline (hot)
                                @ 5   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                 \-> TypeProfile (3533/3533 counts) = java/util/concurrent/ConcurrentHashMap
                                  @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)   inline (hot)
               !m               @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   hot method too big
                                @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                                @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                                @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s                 @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                                @ 11   java.util.Map::get (0 bytes)   no static binding
                                @ 16   java.lang.Class::cast (27 bytes)
                                  @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                                  @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                                  @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.reflect.AnnotatedElement::getAnnotation (0 bytes)   no static binding
                              @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::getAnnotation (0 bytes)   no static binding
                              @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 16   java.lang.Class::getName (21 bytes)   inline (hot)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 65   java.lang.reflect.Method::<init> (68 bytes)   callee is too large
                              @ 4   java.util.Collections::emptyMap (4 bytes)
                              @ 12   sun.reflect.annotation.AnnotationParser::parseAnnotations2 (135 bytes)   callee is too large
                              @ 23  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 33  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 0                                @ 5   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)   accessor
                              @ 10   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (7 bytes)   unloaded signature classes
 java.lang.System::getSecurityManager (4 bytes)
                              @ 11   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 17   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 38   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 45   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
                              @ 13   java.lang.RuntimeException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 24   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
                              @ 55   java.lang.reflect.Method::isDefault (28 bytes)
                                @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                                @ 13   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                @ 16   java.lang.Class::isInterface (0 bytes)   native method
                              @ 4   java.nio.Buffer::nextGetIndex (38 bytes)   inline (hot)
                              @ 7   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                              @ 14   java.nio.Bits::getShort (18 bytes)   inline (hot)
                                @ 6   java.nio.Bits::getShortB (16 bytes)   inline (hot)
                                  @ 2   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                  @ 9   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                  @ 12   java.nio.Bits::makeShort (12 bytes)   inline (hot)
              s               @ 18   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                              @ 32   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 36   java.lang.reflect.Field::getDeclaringClass (5 bytes)
                              @ 39   java.lang.System$2::getConstantPool (5 bytes)
                                @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 45   java.lang.reflect.Field::getDeclaringClass (5 bytes)
               !              @ 48   sun.reflect.annotation.AnnotationParser::parseAnnotations (37 bytes)   callee is too large
                              @ 1   java.lang.reflect.Method::isBridge (16 bytes)
                                @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                              @ 13   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 21   org.springframework.util.ReflectionUtils::getAllDeclaredMethods (39 bytes)   callee is too large
                              @ 50   org.springframework.core.BridgeMethodResolver::isBridgedCandidateFor (46 bytes)   callee is too large
                              @ 59   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 72   java.util.ArrayList::size (5 bytes)
                              @ 83   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
                              @ 94   org.springframework.core.BridgeMethodResolver::searchCandidates (115 bytes)   callee is too large
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 7   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 19   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 34   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 7   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 20   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 41   java.lang.Enum::ordinal (5 bytes)
                              @ 0   java.lang.Class::checkInitted (19 bytes)
                                @ 11   java.lang.Class$3::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 4   java.lang.Class::reflectionData (49 bytes)   callee is too large
                              @ 37   java.lang.Class::getDeclaredMethods0 (0 bytes)   native method
                              @ 40   sun.reflect.Reflection::filterMethods (31 bytes)
                                @ 13   java.util.Map::get (0 bytes)   no static binding
                                @ 21   sun.reflect.Reflection::filter (220 bytes)   callee is too large
                              @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                  @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                    @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                     \-> TypeProfile (5247/5253 counts) = java/lang/Class
                                    @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                  @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                    @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                    @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                    @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                      @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                       \-> TypeProfile (5516/5516 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                      @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                        @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                          @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                      @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                      @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                         \-> TypeProfile (741/760 counts) = java/lang/String
                                        @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                        @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                        @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 49   org.springframework.util.ObjectUtils::arrayEquals (290 bytes)   too big
                                      @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                 \-> TypeProfile (13249/13249 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                  @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                    @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
               !              @ 3   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   callee is too large
                              @ 12   sun.misc.Resource::getURL (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 4   java.lang.invoke.MethodHandle::invokeBasic()L (0 bytes)   receiver not constant
                              @ 1   org.springframework.beans.factory.support.RootBeanDefinition::getTargetType (30 bytes)   inline (hot)
                              @ 12   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)   accessor
               !              @ 22   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getTypeForFactoryMethod (536 bytes)   too big
               !              @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   inline (hot)
                                @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)   inline (hot)
                                @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   too big
                                @ 12   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
               !                @ 40   org.springframework.beans.factory.support.AbstractBeanFactory::doResolveBeanClass (284 bytes)   inline (hot)
                                  @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)   unloaded signature classes
                                  @ 12   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                  @ 19   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                                  @ 93   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)   inline (hot)
                                    @ 16   java.lang.Class::getName (21 bytes)   inline (hot)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 107   org.springframework.beans.factory.support.AbstractBeanFactory::evaluateBeanDefinitionString (55 bytes)   inline (hot)
                                    @ 16   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)   accessor
                                    @ 31   org.springframework.beans.factory.support.AbstractBeanFactory::getRegisteredScope (20 bytes)   unloaded signature classes
                                    @ 46   org.springframework.beans.factory.config.BeanExpressionContext::<init> (21 bytes)   unloaded signature classes
               !                    @ 49   org.springframework.context.expression.StandardBeanExpressionResolver::evaluate (239 bytes)   inline (hot)
                                     \-> TypeProfile (1555/1555 counts) = org/springframework/context/expression/StandardBeanExpressionResolver
                                      @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                        @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                      @ 14   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                       \-> TypeProfile (1489/1489 counts) = java/util/concurrent/ConcurrentHashMap
                                        @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                        @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                          @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                        @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 36   org.springframework.expression.common.TemplateAwareExpressionParser::parseExpression (27 bytes)   inline (hot)
                                       \-> TypeProfile (488/488 counts) = org/springframework/expression/spel/standard/SpelExpressionParser
                                        @ 16   org.springframework.expression.common.TemplateAwareExpressionParser::parseTemplate (44 bytes)   too big
                                        @ 23   org.springframework.expression.spel.standard.SpelExpressionParser::doParseExpression (7 bytes)   never executed
                                      @ 48   java.util.concurrent.ConcurrentHashMap::put (8 bytes)   inline (hot)
                                       \-> TypeProfile (488/488 counts) = java/util/concurrent/ConcurrentHashMap
               !m                       @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
                                      @ 59   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                       \-> TypeProfile (1489/1489 counts) = java/util/concurrent/ConcurrentHashMap
                                        @ 1   org.springframework.beans.factory.config.BeanExpressionContext::hashCode (8 bytes)   inline (hot)
                                          @ 4   java.lang.Object::hashCode (0 bytes)   native method
                                           \-> TypeProfile (1490/1490 counts) = org/springframework/beans/factory/support/DefaultListableBeanFactory
                                          @ 4   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                        @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                        @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                          @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                        @ 73   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                        @ 149   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                      @ 221   org.springframework.expression.common.LiteralExpression::getValue (6 bytes)   inline (hot)
                                       \-> TypeProfile (1489/1489 counts) = org/springframework/expression/common/LiteralExpression
                                        @ 2   org.springframework.expression.common.LiteralExpression::getValue (5 bytes)   inline (hot)
                                  @ 116   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 280   org.springframework.beans.factory.support.AbstractBeanDefinition::resolveBeanClass (24 bytes)   unloaded signature classes
                                @ 48   java.security.PrivilegedActionException::getException (5 bytes)   exception method
                              @ 38   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                              @ 45   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                              @ 1   java.lang.Class::getEnclosingMethodInfo (21 bytes)
                                @ 1   java.lang.Class::getEnclosingMethod0 (0 bytes)   native method
                                @ 17  java/lang/Class$EnclosingMethodInfo::<init> (not loaded)   not inlineable
                              @ 10   java.lang.Class::getDeclaringClass (22 bytes)
                                @ 1   java.lang.Class::getDeclaringClass0 (0 bytes)   native method
                                @ 10   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 13   java.lang.ClassLoader::getClassLoader (11 bytes)
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 17   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
                              @ 18  java/lang/Class$EnclosingMethodInfo::getEnclosingClass (not loaded)   not inlineable
                              @ 48   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 51   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 55   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
                              @ 37  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 1   java.lang.Class::getDeclaringClass0 (0 bytes)   native method
                              @ 10   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 13   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 17   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
                              @ 1   java.lang.Class::getEnclosingClass (60 bytes)   callee is too large
                              @ 12   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 16   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 19   java.lang.String::length (6 bytes)
                              @ 22   java.lang.String::substring (56 bytes)   callee is too large
                              @ 34  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 1   java.lang.reflect.AccessibleObject::getDeclaredAnnotations (10 bytes)   no static binding
                              @ 11   org.springframework.beans.MutablePropertyValues::isEmpty (10 bytes)
                                @ 4   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 5   java.util.RegularEnumSet::add (40 bytes)   callee is too large
                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   callee is too large
                              @ 17   java.lang.Enum::ordinal (5 bytes)
                              @ 1   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 14   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 32   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 36   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 41   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Class::toString (47 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 51   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 54   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   callee is too large
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 1   java.lang.String::length (6 bytes)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   callee is too large
                              @ 26   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 185  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 11   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
               !              @ 9   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::lambda$determineCandidateConstructors$0 (89 bytes)   callee is too large
                              @ 3   java.lang.reflect.Method::getAnnotation (6 bytes)
                                @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)
                                  @ 1   java.util.Objects::requireNonNull (14 bytes)
              s                   @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                                  @ 11   java.util.Map::get (0 bytes)   no static binding
                                  @ 16   java.lang.Class::cast (27 bytes)
                                    @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                                    @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                                    @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 28   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 37   org.springframework.beans.factory.annotation.Lookup::value (0 bytes)   not inlineable
                              @ 42   org.springframework.beans.factory.support.LookupOverride::<init> (19 bytes)   not inlineable
                              @ 52   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (44 bytes)   callee is too large
                              @ 64   org.springframework.beans.factory.support.AbstractBeanDefinition::getMethodOverrides (23 bytes)
                                @ 12  org/springframework/beans/factory/support/MethodOverrides::<init> (not loaded)   not inlineable
                              @ 69  org/springframework/beans/factory/support/MethodOverrides::addOverride (not loaded)   not inlineable
                              @ 84   org.springframework.beans.factory.BeanCreationException::<init> (43 bytes)   not inlineable
                              @ 4   java.lang.Object::clone (0 bytes)   no static binding
              s               @ 1   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                              @ 4   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                @ 1   java.util.Map::values (0 bytes)   no static binding
                                @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 24   java.lang.Class::getDeclaredMethods (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   callee is too large
                                @ 14   java.lang.Class::copyMethods (36 bytes)   callee is too large
                              @ 29   org.springframework.util.ReflectionUtils::findConcreteMethodsOnInterfaces (100 bytes)   callee is too large
                              @ 40   java.util.List::size (0 bytes)   no static binding
                              @ 56   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 64   java.util.List::iterator (0 bytes)   no static binding
                              @ 73   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 83   java.util.Iterator::next (0 bytes)   no static binding
                              @ 126   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 144   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 149   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 153   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 156   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 161   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 165   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 168   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 173   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 176   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 180   java.lang.IllegalStateException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                @ 12   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 24   java.util.Map::put (0 bytes)   no static binding
                              @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 12   java.util.HashMap::<init> (11 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 24   java.util.Map::put (0 bytes)   no static binding
                              @ 3   org.springframework.asm.ClassVisitor::<init> (47 bytes)   callee is too large
                              @ 12   org.springframework.asm.MethodVisitor::visitLabel (16 bytes)   no static binding
                              @ 1   java.lang.reflect.AccessibleObject::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::determineTargetType (60 bytes)   inline (hot)
                                @ 1   org.springframework.beans.factory.support.RootBeanDefinition::getTargetType (30 bytes)   inline (hot)
                                @ 12   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)   accessor
               !                @ 22   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getTypeForFactoryMethod (536 bytes)   too big
               !                @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   inline (hot)
                                  @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)   inline (hot)
                                  @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   too big
                                  @ 12   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
               !                  @ 40   org.springframework.beans.factory.support.AbstractBeanFactory::doResolveBeanClass (284 bytes)   inline (hot)
                                    @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)   unloaded signature classes
                                    @ 12   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                    @ 19   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                                    @ 93   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)   inline (hot)
                                      @ 16   java.lang.Class::getName (21 bytes)   inline (hot)
                                        @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 107   org.springframework.beans.factory.support.AbstractBeanFactory::evaluateBeanDefinitionString (55 bytes)   inline (hot)
                                      @ 16   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)   accessor
                                      @ 31   org.springframework.beans.factory.support.AbstractBeanFactory::getRegisteredScope (20 bytes)   unloaded signature classes
                                      @ 46   org.springframework.beans.factory.config.BeanExpressionContext::<init> (21 bytes)   unloaded signature classes
               !                      @ 49   org.springframework.context.expression.StandardBeanExpressionResolver::evaluate (239 bytes)   inline (hot)
                                       \-> TypeProfile (1566/1566 counts) = org/springframework/context/expression/StandardBeanExpressionResolver
                                        @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)   inline (hot)
                                          @ 5   java.lang.String::isEmpty (14 bytes)   inline (hot)
                                        @ 14   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                         \-> TypeProfile (1501/1501 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                          @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                            @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                          @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 36   org.springframework.expression.common.TemplateAwareExpressionParser::parseExpression (27 bytes)   inline (hot)
                                         \-> TypeProfile (488/488 counts) = org/springframework/expression/spel/standard/SpelExpressionParser
                                          @ 16   org.springframework.expression.common.TemplateAwareExpressionParser::parseTemplate (44 bytes)   too big
                                          @ 23   org.springframework.expression.spel.standard.SpelExpressionParser::doParseExpression (7 bytes)   never executed
                                        @ 48   java.util.concurrent.ConcurrentHashMap::put (8 bytes)   inline (hot)
                                         \-> TypeProfile (488/488 counts) = java/util/concurrent/ConcurrentHashMap
               !m                         @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
                                        @ 59   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                         \-> TypeProfile (1501/1501 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 1   org.springframework.beans.factory.config.BeanExpressionContext::hashCode (8 bytes)   inline (hot)
                                            @ 4   java.lang.Object::hashCode (0 bytes)   native method
                                             \-> TypeProfile (1503/1503 counts) = org/springframework/beans/factory/support/DefaultListableBeanFactory
                                            @ 4   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                          @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                          @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                            @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                          @ 73   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                          @ 149   org.springframework.beans.factory.config.BeanExpressionContext::equals (49 bytes)   inline (hot)
                                        @ 221   org.springframework.expression.common.LiteralExpression::getValue (6 bytes)   inline (hot)
                                         \-> TypeProfile (1501/1501 counts) = org/springframework/expression/common/LiteralExpression
                                          @ 2   org.springframework.expression.common.LiteralExpression::getValue (5 bytes)   inline (hot)
                                    @ 116   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 280   org.springframework.beans.factory.support.AbstractBeanDefinition::resolveBeanClass (24 bytes)   unloaded signature classes
                                  @ 48   java.security.PrivilegedActionException::getException (5 bytes)   exception method
                                @ 38   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                @ 45   org.springframework.beans.factory.support.AbstractBeanFactory::getTempClassLoader (5 bytes)   unloaded signature classes
                              @ 15   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)   accessor
                              @ 22   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)   accessor
                              @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)   accessor
                              @ 32   java.util.concurrent.CopyOnWriteArrayList::iterator (14 bytes)   inline (hot)
                               \-> TypeProfile (14125/14125 counts) = java/util/concurrent/CopyOnWriteArrayList
                                @ 5   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)   accessor
                                @ 10   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (7 bytes)   unloaded signature classes
                              @ 41   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                               \-> TypeProfile (77684/77684 counts) = java/util/concurrent/CopyOnWriteArrayList$COWIterator
                              @ 51   java.util.concurrent.CopyOnWriteArrayList$COWIterator::next (32 bytes)   inline (hot)
                                @ 1   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                              @ 81   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter::predictBeanType (2 bytes)   inline (hot)
                              @ 81   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter::predictBeanType (2 bytes)   inline (hot)
                               \-> TypeProfile (7062/21187 counts) = org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor
                               \-> TypeProfile (14125/21187 counts) = org/springframework/context/annotation/ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor
                              @ 41   java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext (18 bytes)   inline (hot)
                              @ 18   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 21   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 39   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 33   java.lang.reflect.AnnotatedElement::getDeclaredAnnotations (0 bytes)   no static binding
                              @ 18   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                              @ 23   java.util.concurrent.ConcurrentMap::computeIfAbsent (51 bytes)   callee is too large
                              @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 6   java.nio.Buffer::<init> (121 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 55   java.nio.Buffer::limit (62 bytes)   inline (hot)
                                @ 61   java.nio.Buffer::position (43 bytes)   inline (hot)
                              @ 15   java.nio.Bits::byteOrder (20 bytes)   inline (hot)
                              @ 6   java.lang.System$2::getAnnotationType (5 bytes)
                                @ 1   java.lang.Class::getAnnotationType (5 bytes)
                              @ 21   sun.reflect.annotation.AnnotationType::<init> (362 bytes)   callee is too large
                              @ 29   java.lang.System$2::casAnnotationType (7 bytes)
                                @ 3   java.lang.Class::casAnnotationType (7 bytes)
                                  @ 3   java.lang.Class$Atomic::casAnnotationType (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 39   java.lang.System$2::getAnnotationType (5 bytes)
                                @ 1   java.lang.Class::getAnnotationType (5 bytes)
                              @ 1   java.util.List::iterator (0 bytes)   no static binding
                              @ 10   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 32   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 41   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (20 bytes)
                                @ 5   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 8   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)
                                  @ 7   java.lang.String::startsWith (7 bytes)
                                    @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 50   java.util.Set::contains (0 bytes)   no static binding
                              @ 60   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 64   java.lang.String::equals (81 bytes)   callee is too large
                              @ 72   org.springframework.core.annotation.AnnotatedElementUtils$Processor::alwaysProcesses (0 bytes)   not inlineable
               !              @ 148   org.springframework.core.annotation.AnnotatedElementUtils::getRawAnnotationsFromContainer (33 bytes)
                                @ 1   org.springframework.core.annotation.AnnotationUtils::getValue (7 bytes)
               !                  @ 3   org.springframework.core.annotation.AnnotationUtils::getValue (101 bytes)   callee is too large
                                @ 23   org.springframework.core.annotation.AnnotationUtils::handleIntrospectionFailure (131 bytes)   callee is too large
                              @ 182   org.springframework.core.annotation.AnnotatedElementUtils$Processor::process (0 bytes)   not inlineable
                              @ 196   org.springframework.core.annotation.AnnotatedElementUtils$Processor::getAggregatedResults (0 bytes)   not inlineable
                              @ 203   java.util.List::add (0 bytes)   no static binding
                              @ 87   org.springframework.core.annotation.AnnotatedElementUtils$Processor::process (0 bytes)   not inlineable
                              @ 101   org.springframework.core.annotation.AnnotatedElementUtils$Processor::aggregates (0 bytes)   not inlineable
                              @ 116   org.springframework.core.annotation.AnnotatedElementUtils$Processor::getAggregatedResults (0 bytes)   not inlineable
                              @ 123   java.util.List::add (0 bytes)   no static binding
                              @ 219   java.util.List::iterator (0 bytes)   no static binding
                              @ 228   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 238   java.util.Iterator::next (0 bytes)   no static binding
                              @ 250   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 259   org.springframework.core.annotation.AnnotationUtils::hasPlainJavaAnnotationsOnly (66 bytes)   callee is too large
               !              @ 279   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (178 bytes)   callee is too large
                              @ 296   org.springframework.core.annotation.AnnotatedElementUtils$Processor::postProcess (0 bytes)   not inlineable
                              @ 303   org.springframework.core.annotation.AnnotatedElementUtils$Processor::aggregates (0 bytes)   not inlineable
                              @ 318   org.springframework.core.annotation.AnnotatedElementUtils$Processor::getAggregatedResults (0 bytes)   not inlineable
                              @ 325   java.util.List::add (0 bytes)   no static binding
                              @ 4   org.springframework.asm.Context::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 48   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 60   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 72   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 83   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 114   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 173   org.springframework.asm.ClassReader::getFirstAttributeOffset (136 bytes)   callee is too large
                              @ 183   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 198   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 208   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 220   java.lang.String::equals (81 bytes)   callee is too large
                              @ 231   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 243   java.lang.String::equals (81 bytes)   callee is too large
                              @ 260   java.lang.String::equals (81 bytes)   callee is too large
                              @ 277   java.lang.String::equals (81 bytes)   callee is too large
                              @ 288   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 300   java.lang.String::equals (81 bytes)   callee is too large
                              @ 317   java.lang.String::equals (81 bytes)   callee is too large
                              @ 328   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 340   java.lang.String::equals (81 bytes)   callee is too large
                              @ 357   java.lang.String::equals (81 bytes)   callee is too large
                              @ 374   java.lang.String::equals (81 bytes)   callee is too large
                              @ 394   java.lang.String::equals (81 bytes)   callee is too large
                              @ 415   java.lang.String::equals (81 bytes)   callee is too large
                              @ 430   org.springframework.asm.ClassReader::readUtf (161 bytes)   callee is too large
                              @ 442   java.lang.String::equals (81 bytes)   callee is too large
                              @ 459   java.lang.String::equals (81 bytes)   callee is too large
                              @ 476   java.lang.String::equals (81 bytes)   callee is too large
                              @ 493   java.lang.String::equals (81 bytes)   callee is too large
                              @ 504   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 516   java.lang.String::equals (81 bytes)   callee is too large
                              @ 533   java.lang.String::equals (81 bytes)   callee is too large
                              @ 551   org.springframework.asm.ClassReader::readAttribute (78 bytes)   callee is too large
                              @ 591   org.springframework.asm.ClassReader::readInt (52 bytes)   callee is too large
                              @ 604   org.springframework.asm.ClassVisitor::visit (24 bytes)   no static binding
                              @ 628   org.springframework.asm.ClassVisitor::visitSource (17 bytes)   no static binding
                              @ 28   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::pollForPurge (11 bytes)   inline (hot)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)   inline (hot)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   inline (hot)
                                    @ 58   sun.misc.VM::addFinalRefCount (24 bytes)   inline (hot)
                              @ 45   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   executed < MinInliningThreshold times
                              @ 54   java.util.Collections::emptySet (4 bytes)   inline (hot)
                              @ 170   org.springframework.util.ConcurrentReferenceHashMap$Segment::createReferenceArray (5 bytes)   inline (hot)
                              @ 251   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   call site not reached
                              @ 277   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   too big
                              @ 319   org.springframework.util.ConcurrentReferenceHashMap::getLoadFactor (5 bytes)   inline (hot)
                              @ 331   java.lang.Math::max (11 bytes)   (intrinsic)
                              @ 338   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   executed < MinInliningThreshold times
                              @ 347   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   executed < MinInliningThreshold times
                              @ 646   org.springframework.asm.ClassReader::readModuleAttributes (551 bytes)   callee is too large
                              @ 657   org.springframework.asm.ClassVisitor::visitNestHost (35 bytes)   no static binding
                              @ 670   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 680   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 704   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 730   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 742   org.springframework.asm.ClassVisitor::visitOuterClass (18 bytes)   no static binding
                              @ 753   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 777   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 790   org.springframework.asm.ClassVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 798   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 814   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 838   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 851   org.springframework.asm.ClassVisitor::visitAnnotation (19 bytes)   no static binding
                              @ 859   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 875   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 899   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 909   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 932   org.springframework.asm.ClassVisitor::visitTypeAnnotation (41 bytes)   no static binding
                              @ 940   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 956   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 980   org.springframework.asm.ClassReader::readTypeAnnotationTarget (591 bytes)   callee is too large
                              @ 990   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1013   org.springframework.asm.ClassVisitor::visitTypeAnnotation (41 bytes)   no static binding
                              @ 1021   org.springframework.asm.ClassReader::readElementValues (88 bytes)   callee is too large
                              @ 1050   org.springframework.asm.ClassVisitor::visitAttribute (16 bytes)   no static binding
                              @ 1068   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1093   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1096   org.springframework.asm.ClassVisitor::visitNestMember (35 bytes)   no static binding
                              @ 1113   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1138   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1148   org.springframework.asm.ClassReader::readClass (7 bytes)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                    @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   callee is too large
                                    @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1158   org.springframework.asm.ClassReader::readUTF8 (23 bytes)
                                @ 2   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                                @ 19   org.springframework.asm.ClassReader::readUtf (44 bytes)   callee is too large
                              @ 1167   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1170   org.springframework.asm.ClassVisitor::visitInnerClass (20 bytes)   no static binding
                              @ 1182   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1204   org.springframework.asm.ClassReader::readField (666 bytes)   callee is too large
                              @ 1215   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)
                              @ 1237   org.springframework.asm.ClassReader::readMethod (1041 bytes)   callee is too large
                              @ 1246   org.springframework.asm.ClassVisitor::visitEnd (15 bytes)   no static binding
                              @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                              @ 5   java.util.WeakHashMap::containsKey (14 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (11388/11391 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                  @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 7   org.springframework.asm.ClassReader::accept (1250 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.util.Set::add (0 bytes)   no static binding
                              @ 12   org.springframework.core.annotation.AnnotationUtils::getDeclaredAnnotations (39 bytes)   callee is too large
                              @ 15   java.util.Arrays::asList (9 bytes)
                                @ 5   java.util.Arrays$ArrayList::<init> (16 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 32   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemanticsInAnnotations (342 bytes)   callee is too large
                              @ 56   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 77   java.util.LinkedList::<init> (10 bytes)
                                @ 1   java.util.AbstractSequentialList::<init> (5 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 83   java.lang.reflect.AnnotatedElement::getAnnotations (0 bytes)   no static binding
                              @ 116   java.util.Arrays$ArrayList::contains (15 bytes)
                                @ 2   java.util.Arrays$ArrayList::indexOf (62 bytes)   callee is too large
                              @ 128   java.util.LinkedList::add (7 bytes)
                                  !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
             @ 2   java.util.LinkedList::linkLast (59 bytes)   callee is too large
                              @ 152   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemanticsInAnnotations (342 bytes)   callee is too large
                              @ 173   org.springframework.core.annotation.AnnotationUtils::handleIntrospectionFailure (131 bytes)   callee is too large
                              @ 14   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 9   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 21   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
               !m             @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   too big
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s               @ 7   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                              @ 11   java.util.Map::get (0 bytes)   no static binding
                              @ 16   java.lang.Class::cast (27 bytes)
                                @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                                @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                                @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Class::reflectionData (49 bytes)   callee is too large
                              @ 10   java.lang.Class::getInterfaces0 (0 bytes)   native method
                              @ 24   java.lang.Class::getInterfaces0 (0 bytes)   native method
                              @ 34   java.lang.Object::clone (0 bytes)   no static binding
                              @ 18   java.util.ArrayList::outOfBoundsMsg (32 bytes)
               !              @ 4   java.nio.ByteBuffer::wrap (20 bytes)   inline (hot)
                                @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)   inline (hot)
                                  @ 10   java.nio.ByteBuffer::<init> (45 bytes)   inline (hot)
                                    @ 6   java.nio.Buffer::<init> (121 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 55   java.nio.Buffer::limit (62 bytes)   inline (hot)
                                      @ 61   java.nio.Buffer::position (43 bytes)   inline (hot)
                                    @ 15   java.nio.Bits::byteOrder (20 bytes)   inline (hot)
                                @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 21   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
               !              @ 1   org.springframework.util.ReflectionUtils::getDeclaredMethods (186 bytes)   callee is too large
                              @ 30   org.springframework.util.ReflectionUtils$MethodCallback::doWith (0 bytes)   not inlineable
                              @ 48   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 53   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 58   java.lang.reflect.Method::getName (5 bytes)
                              @ 61   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 74   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 77   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 1   org.springframework.util.ReflectionUtils::getDeclaredFields (104 bytes)   callee is too large
                              @ 26   org.springframework.util.ReflectionUtils$FieldCallback::doWith (0 bytes)   not inlineable
                              @ 44   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 49   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 54   java.lang.reflect.Field::getName (5 bytes)
                              @ 57   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 62   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 67   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 70   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 73   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 14   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.util.ArrayList::rangeCheckForAdd (26 bytes)
                                @ 18   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 21   java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                              @ 6   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 24   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 55   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 67   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 65   java.lang.reflect.Member::getName (0 bytes)   not inlineable
                              @ 104   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 108   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 176   java.lang.reflect.Member::getName (0 bytes)   not inlineable
                              @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   inline (hot)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 9   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 21   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
               !m               @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   too big
                              @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)   inline (hot)
                                @ 7   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                 \-> TypeProfile (10305/10305 counts) = java/util/concurrent/ConcurrentHashMap
                                  @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 17   java.lang.reflect.Constructor::setConstructorAccessor (21 bytes)
                                @ 17   java.lang.reflect.Constructor::setConstructorAccessor (21 bytes)   recursive inlining too deep
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                              @ 25   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 17   org.springframework.core.MethodParameter::getMethod (22 bytes)
                              @ 26   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 43   java.lang.reflect.Executable::getParameterTypes (0 bytes)   no static binding
                              @ 3   java.util.concurrent.CopyOnWriteArrayList$COWIterator::<init> (15 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 4   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 28   java.lang.Integer::<init> (10 bytes)
                                @ 1   java.lang.Number::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   java.lang.invoke.MethodHandle::invokeBasic(LLL)L (0 bytes)   receiver not constant
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 13   sun.reflect.generics.parser.SignatureParser::make (8 bytes)
                                @ 4   sun.reflect.generics.parser.SignatureParser::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 19   sun.reflect.generics.parser.SignatureParser::parseTypeSig (13 bytes)
                                @ 2   java.lang.String::toCharArray (25 bytes)
                                  @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                                @ 9   sun.reflect.generics.parser.SignatureParser::parseTypeSignature (130 bytes)   callee is too large
                              @ 25   sun.reflect.generics.scope.ClassScope::make (9 bytes)
                                @ 5   sun.reflect.generics.scope.ClassScope::<init> (6 bytes)
                                  @ 2   sun.reflect.generics.scope.AbstractScope::<init> (10 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 28   sun.reflect.generics.factory.CoreReflectionFactory::make (10 bytes)
                                @ 6   sun.reflect.generics.factory.CoreReflectionFactory::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 35   sun.reflect.generics.visitor.Reifier::make (9 bytes)
                                @ 5   sun.reflect.generics.visitor.Reifier::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 43   sun.reflect.generics.tree.TypeTree::accept (0 bytes)   not inlineable
                              @ 50   sun.reflect.generics.visitor.Reifier::getResult (26 bytes)
                              @ 57   sun.reflect.annotation.AnnotationParser::toClass (32 bytes)
                                @ 11   java.lang.reflect.GenericArrayType::getGenericComponentType (0 bytes)   not inlineable
                                @ 16   sun.reflect.annotation.AnnotationParser::toClass (32 bytes)   callee is too large
                                @ 20   java.lang.reflect.Array::newInstance (6 bytes)
                                  @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                                @ 23   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   java.lang.Class::annotationData (44 bytes)   callee is too large
                              @ 13   java.util.Map::get (0 bytes)   no static binding
                              @ 1   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 4   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 1   java.lang.reflect.Executable::getDeclaredAnnotations (8 bytes)
              s                 @ 1   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                                @ 4   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                  @ 1   java.util.Map::values (0 bytes)   no static binding
                                  @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 4   sun.reflect.generics.parser.SignatureParser::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 0   java.lang.Class::checkInitted (19 bytes)
                                @ 11   java.lang.Class$3::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 4   java.lang.Class::reflectionData (49 bytes)   callee is too large
                              @ 35   java.lang.Class::isInterface (0 bytes)   native method
                              @ 58   java.lang.Class::getDeclaredConstructors0 (0 bytes)   native method
                              @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 4   java.lang.reflect.ReflectAccess::copyConstructor (5 bytes)
                                @ 1   java.lang.reflect.Constructor::copy (72 bytes)   callee is too large
                              @ 1   java.lang.reflect.Constructor::copy (72 bytes)   callee is too large
                              @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 53   java.lang.reflect.Constructor::<init> (50 bytes)   callee is too large
                              @ 1   java.lang.reflect.Executable::<init> (5 bytes)
                                @ 1   java.lang.reflect.AccessibleObject::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::buildLifecycleMetadata (103 bytes)   callee is too large
                              @ 18   java.util.Map::get (0 bytes)   no static binding
                              @ 43   java.util.Map::get (0 bytes)   no static binding
                              @ 58   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::buildLifecycleMetadata (103 bytes)   callee is too large
                              @ 68   java.util.Map::put (0 bytes)   no static binding
                              @ 0   java.util.Collections::emptySet (4 bytes)
                              @ 5   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                               \-> TypeProfile (10275/10275 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 17   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isSingletonCurrentlyInCreation (11 bytes)   inline (hot)
                                @ 5   java.util.Collections$SetFromMap::contains (11 bytes)   inline (hot)
                                 \-> TypeProfile (10170/10170 counts) = java/util/Collections$SetFromMap
                                  @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                                  @ 5   java.util.WeakHashMap::containsKey (14 bytes)   executed < MinInliningThreshold times
                                   \-> TypeProfile (11433/11436 counts) = java/util/concurrent/ConcurrentHashMap
                                    @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                      @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                      @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                        @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                      @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 36   java.util.HashMap::get (23 bytes)   already compiled into a medium method
                               \-> TypeProfile (85/85 counts) = java/util/HashMap
               !              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                              @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                              @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                 \-> TypeProfile (6436/6436 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                  @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                    @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                   \-> TypeProfile (741/760 counts) = java/lang/String
                                  @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                  @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                  @ 49   org.springframework.util.ObjectUtils::arrayEquals (290 bytes)   too big
                                @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 15   org.springframework.util.ClassUtils::isAssignable (81 bytes)   callee is too large
                              @ 22   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 10   org.springframework.asm.Label::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 26   org.springframework.asm.Label::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 19   java.lang.reflect.Field::getGenericType (20 bytes)
                                @ 1   java.lang.reflect.Field::getGenericSignature (5 bytes)
                                @ 8   java.lang.reflect.Field::getGenericInfo (27 bytes)
                                  @ 9   java.lang.reflect.Field::getGenericSignature (5 bytes)
                                  @ 13   java.lang.reflect.Field::getFactory (14 bytes)
                                    @ 1   java.lang.reflect.Field::getDeclaringClass (5 bytes)
                                    @ 7   sun.reflect.generics.scope.ClassScope::make (9 bytes)
                                      @ 5   sun.reflect.generics.scope.ClassScope::<init> (6 bytes)
                                        @ 2   sun.reflect.generics.scope.AbstractScope::<init> (10 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 10   sun.reflect.generics.factory.CoreReflectionFactory::make (10 bytes)
                                      @ 6   sun.reflect.generics.factory.CoreReflectionFactory::<init> (15 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 16  sun/reflect/generics/repository/FieldRepository::make (not loaded)   not inlineable
                                @ 11  sun/reflect/generics/repository/FieldRepository::getGenericType (not loaded)   not inlineable
                                @ 16   java.lang.reflect.Field::getType (5 bytes)
                              @ 44  java/lang/reflect/ParameterizedType::getActualTypeArguments (not loaded)   not inlineable
                              @ 86  java/lang/reflect/ParameterizedType::getRawType (not loaded)   not inlineable
                              @ 111   java.lang.reflect.Field::getType (5 bytes)
                              @ 116   org.springframework.beans.factory.InjectionPoint::obtainMethodParameter (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 119   org.springframework.core.MethodParameter::getNestedParameterType (122 bytes)   callee is too large
                              @ 9   org.springframework.core.MethodParameter::getGenericParameterType (124 bytes)   callee is too large
                              @ 34   java.lang.reflect.ParameterizedType::getActualTypeArguments (0 bytes)   not inlineable
                              @ 42   org.springframework.core.MethodParameter::getTypeIndexForLevel (17 bytes)
                                @ 1   org.springframework.core.MethodParameter::getTypeIndexesPerLevel (24 bytes)
                                  @ 13   java.util.HashMap::<init> (8 bytes)
                                    @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                                @ 5   java.lang.Integer::valueOf (32 bytes)   callee is too large
                                @ 8   java.util.Map::get (0 bytes)   no static binding
                              @ 55   java.lang.Integer::intValue (5 bytes)
                              @ 96   java.lang.reflect.ParameterizedType::getRawType (0 bytes)   not inlineable
                              @ 118   org.springframework.core.MethodParameter::getParameterType (59 bytes)   callee is too large
                              @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                              @ 1   java.util.Collections$EmptyMap::values (4 bytes)   inline (hot)
                               \-> TypeProfile (316/13354 counts) = java/util/Collections$EmptyMap
                               \-> TypeProfile (13038/13354 counts) = java/util/LinkedHashMap
                                @ 0   java.util.Collections::emptySet (4 bytes)   inline (hot)
                                @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 9   java.util.AbstractCollection::toArray (147 bytes)   inline (hot)
                              @ 9   java.util.Collections$EmptySet::toArray (11 bytes)   inline (hot)
                               \-> TypeProfile (316/13354 counts) = java/util/Collections$EmptySet
                               \-> TypeProfile (13038/13354 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                                @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                                @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                  @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                                @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                                  @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                    @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                 \-> TypeProfile (34491/35715 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                 \-> TypeProfile (34491/35715 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                  @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                              @ 16   java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (0 bytes)   MemberName not constant
                              @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 9   java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (0 bytes)   receiver not constant
                              @ 4   java.lang.ref.SoftReference::<init> (14 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 7   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 21   java.lang.IllegalMonitorStateException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 24   java.lang.Class::getDeclaredFields (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredFields (67 bytes)   callee is too large
                                @ 14   java.lang.Class::copyFields (36 bytes)   callee is too large
                              @ 44   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 62   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 67   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 71   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 74   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 79   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 83   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                              @ 5   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                  @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                    @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 86   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 91   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 94   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 98   java.lang.IllegalStateException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 9   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 14   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                              @ 23   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                              @ 56   java.util.IdentityHashMap::get (60 bytes)   inline (hot)
                                @ 1   java.util.IdentityHashMap::maskNull (12 bytes)   inline (hot)
                                @ 17   java.util.IdentityHashMap::hash (18 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 52   java.util.IdentityHashMap::nextKeyIndex (15 bytes)   inline (hot)
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)
                              @ 24  org/springframework/util/ConcurrentReferenceHashMap$WeakEntryReference::<init> (not loaded)   not inlineable
                              @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)
                                @ 4   java.lang.ref.SoftReference::<init> (14 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                @ 2   java.lang.Class::getAnnotation (22 bytes)
                                  @ 1   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                  @ 6   java.lang.Class::annotationData (44 bytes)   callee is too large
                                  @ 13   java.util.Map::get (0 bytes)   no static binding
                              @ 1   java.util.concurrent.ConcurrentHashMap$EntryIterator::next (51 bytes)   callee is too large
                              @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                              @ 14   java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (0 bytes)   MemberName not constant
                              @ 13  java/util/NoSuchElementException::<init> (not loaded)   not inlineable
                              @ 33   java.util.concurrent.ConcurrentHashMap$Traverser::advance (188 bytes)   callee is too large
                              @ 47   java.util.concurrent.ConcurrentHashMap$MapEntry::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   java.io.UnixFileSystem::getBooleanAttributes0 (0 bytes)   native method
                              @ 7   java.io.File::getName (42 bytes)   inline (hot)
                                @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                  @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                    @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                  @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 12   java.lang.String::length (6 bytes)   inline (hot)
                              @ 20   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   callee is too large
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 7   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (8 bytes)
                                @ 4   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (41 bytes)   callee is too large
                              @ 10   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (22 bytes)
                                @ 6   java.util.Collections::singleton (9 bytes)
                                  @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.util.Collections::emptySet (4 bytes)
               !                @ 18   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (54 bytes)   callee is too large
                              @ 21   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 2   java.lang.CharSequence::toString (0 bytes)   no static binding
                              @ 7   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 15   java.lang.Boolean::booleanValue (5 bytes)
                              @ 13   java.lang.Class$ReflectionData::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 24   java.lang.ref.SoftReference::<init> (13 bytes)
                                @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 27   java.lang.Class$Atomic::casReflectionData (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 50   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 172   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 296   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 311   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 346   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 488   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 508   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 528   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 538   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 546   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 259   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 270   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                               \-> TypeProfile (8196/8196 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                              @ 15   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 34  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 39  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 43  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 48  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 51  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 54   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)
                                @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   callee is too large
                              @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
               !                @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   callee is too large
                              @ 6   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 35   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 47   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 71   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 84   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 103   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::<init> (not loaded)   not inlineable
                              @ 115   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 131   org.springframework.asm.Type::getTypeInternal (199 bytes)   callee is too large
                              @ 7   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                               \-> TypeProfile (10387/10387 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                              @ 10   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 33   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 64   java.lang.ThreadLocal$ThreadLocalMap::replaceStaleEntry (205 bytes)   callee is too large
                              @ 73   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 94   java.lang.ThreadLocal$ThreadLocalMap$Entry::<init> (11 bytes)
                                @ 2   java.lang.ref.WeakReference::<init> (6 bytes)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                              @ 116   java.lang.ThreadLocal$ThreadLocalMap::cleanSomeSlots (60 bytes)   callee is too large
                              @ 132   java.lang.ThreadLocal$ThreadLocalMap::rehash (27 bytes)
                                @ 1   java.lang.ThreadLocal$ThreadLocalMap::expungeStaleEntries (46 bytes)   callee is too large
                                @ 23   java.lang.ThreadLocal$ThreadLocalMap::resize (129 bytes)   callee is too large
                              @ 4   java.util.HashMap::isEmpty (13 bytes)   inline (hot)
                              @ 9   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   callee is too large
                              @ 12   java.lang.Class::getConstructors (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                                @ 14   java.lang.Class::copyConstructors (38 bytes)   callee is too large
                              @ 38   java.lang.reflect.Constructor::getParameterCount (6 bytes)
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                               \-> TypeProfile (8213/8213 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                               \-> TypeProfile (8217/8217 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                              @ 8   java.util.Map::put (0 bytes)   no static binding
               !m             @ 3   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 4   java.lang.ThreadLocal::get (38 bytes)   callee is too large
               !m             @ 21   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::registerDependentBean (115 bytes)   callee is too large
                              @ 30   org.springframework.beans.factory.support.AbstractBeanFactory::getObjectForBeanInstance (144 bytes)   callee is too large
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 3   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 13   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 54   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 83   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                              @ 70   java.util.concurrent.ConcurrentHashMap::tabAt                              @ 87   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 92   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 96   java.lang.StringBuilder::append (8 bytes)   inline (hot)
 (21 bytes)
                              @ 99   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 83   java.util.concurrent.ConcurrentHashMap$ReservationNode::<init> (10 bytes)
                                @ 6   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 101   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 115   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 135   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 160   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 146   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
                              @ 208   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 229   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 278   java.lang.Object::equals (11 bytes)   no static binding
                              @ 311   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 336   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 388  java/util/concurrent/ConcurrentHashMap$TreeNode::findTreeNode (not loaded)   not inlineable
                              @ 409   java.util.function.Function::apply (0 bytes)   no static binding
                              @ 429  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 464   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 487   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 51   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 33   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 36   org.springframework.beans.factory.BeanIsNotAFactoryException::<init> (9 bytes)   not inlineable
                              @ 48   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 66   org.springframework.beans.factory.support.FactoryBeanRegistrySupport::getCachedObjectForFactoryBean (11 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                              @ 89   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 97   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 109   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
               !m             @ 136   org.springframework.beans.factory.support.FactoryBeanRegistrySupport::getObjectFromFactoryBean (216 bytes)   callee is too large
                              @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 12   java.util.Collections$UnmodifiableRandomAccessList::<init> (6 bytes)
                                @ 2   java.util.Collections$UnmodifiableList::<init> (11 bytes)
                                  @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 23   java.util.Collections$UnmodifiableList::<init> (11 bytes)
                                @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 9   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
 java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 20   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 73   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 4   java.util.Set::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 31   java.lang.Object::equals (11 bytes)
                              @ 39   java.lang.Class::isAnnotationPresent (6 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                  @ 2   java.lang.Class::getAnnotation (22 bytes)
                                    @ 1   java.util.Objects::requireNonNull (14 bytes)
                                      @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                    @ 6   java.lang.Class::annotationData (44 bytes)   callee is too large
                                    @ 13   java.util.Map::get (0 bytes)   no static binding
                              @ 1   java.lang.reflect.AccessibleObject::getAnnotations (5 bytes)
                                @ 1   java.lang.reflect.AccessibleObject::getDeclaredAnnotations (10 bytes)   no static binding
                              @ 12   java.util.Set::iterator (0 bytes)   no static binding
                              @ 19   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 28   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.springframework.core.annotation.AnnotatedElementUtils::getMergedAnnotationAttributes (26 bytes)
                                @ 7   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (8 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (41 bytes)   callee is too large
                                @ 10   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (22 bytes)
                                  @ 6   java.util.Collections::singleton (9 bytes)
                                    @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                      @ 1   java.util.AbstractSet::<init> (5 bytes)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.util.Collections::emptySet (4 bytes)
               !                  @ 18   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (54 bytes)   callee is too large
                                @ 21   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 2   org.springframework.asm.MethodVisitor::visitLabel (16 bytes)   no static binding
                              @ 25   org.springframework.asm.MethodVisitor::visitLineNumber (17 bytes)   no static binding
                              @ 55   org.springframework.asm.MethodVisitor::visitLineNumber (17 bytes)   no static binding
                              @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.Class::isEnum (27 bytes)
                                @ 1   java.lang.Class::getModifiers (0 bytes)   native method
                                @ 12   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 24   java.lang.Class::getMethod (64 bytes)   callee is too large
                              @ 34   java.lang.Class$4::<init> (15 bytes)
                                @ 11   java.lang.Object::<init> (1 bytes)
                              @ 37   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 47   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 1   java.lang.Enum::getDeclaringClass (22 bytes)
                                @ 1   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 4   java.util.EnumSet::noneOf (63 bytes)   callee is too large
                              @ 10   java.util.AbstractCollection::add (8 bytes)   no static binding
                              @ 39   java.util.AbstractCollection::add (8 bytes)   no static binding
                              @ 1   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 1   java.util.EnumSet::getUniverse (10 bytes)
                                @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                                @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)
               !                  @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   callee is too large
                              @ 17   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Class::toString (47 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 26   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 32   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 49   java.util.RegularEnumSet::<init> (12 bytes)
                                @ 3   java.util.EnumSet::<init> (15 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 59  java/util/JumboEnumSet::<init> (not loaded)   not inlineable
                              @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)
                              @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)
               !                @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   callee is too large
               !              @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   callee is too large
                              @ 3   java.util.EnumSet::<init> (15 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.AbstractSet::<init> (5 bytes)
                                @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 6   java.lang.Object::<init> (1 bytes)
                              @ 17   java.util.EnumSet::noneOf (63 bytes)   callee is too large
                              @ 27   java.util.EnumSet::of (51 bytes)   callee is too large
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)
                                @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
                              @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)
                                @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
               !              @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)
                                @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
                              @ 46   org.springframework.util.ConcurrentReferenceHashMap$Task::execute (7 bytes)   no static binding
                              @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)
                              @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   callee is too large
                              @ 91   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                @ 1   java.lang.ref.SoftReference::get (29 bytes)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   callee is too large
                              @ 125   org.springframework.util.ConcurrentReferenceHashMap$Task::execute (7 bytes)   no static binding
                              @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)
                                @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
               !              @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)
                                @ 5   java.util.AbstractCollection::contains (55 bytes)   no static binding
               !              @ 147   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 11   sun.reflect.ReflectionFactory$1::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
               !              @ 1   org.springframework.util.ReflectionUtils::getDeclaredMethods (186 bytes)   callee is too large
                              @ 37   org.springframework.util.ReflectionUtils$MethodFilter::matches (0 bytes)   not inlineable
                              @ 51   org.springframework.util.ReflectionUtils$MethodCallback::doWith (0 bytes)   not inlineable
                              @ 69   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 74   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 79   java.lang.reflect.Method::getName (5 bytes)
                              @ 82   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 92   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 95   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 98   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 109   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 116   java.lang.Class::getSuperclass (0 bytes)   native method
               !              @ 121   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   callee is too large
                              @ 128   java.lang.Class::isInterface (0 bytes)   native method
                              @ 135   java.lang.Class::getInterfaces (41 bytes)   callee is too large
               !              @ 166   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   callee is too large
                              @ 5   java.util.Collections::eq (22 bytes)
                                @ 18   java.lang.Object::equals (11 bytes)   no static binding
                              @ 18   java.lang.Object::equals (11 bytes)   no static binding
                              @ 6   sun.reflect.annotation.AnnotationParser$1::<init> (15 bytes)
                                @ 11   java.lang.Object::<init> (1 bytes)
                              @ 9   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 28   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 34   java.util.Collections::emptyList (4 bytes)
                              @ 10   java.util.HashSet::<init> (16 bytes)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 14   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (178 bytes)   callee is too large
                              @ 22   org.springframework.core.annotation.AnnotationUtils::rethrowAnnotationConfigurationException (13 bytes)
                              @ 33   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 42   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 50   java.lang.IllegalStateException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 4   java.lang.Integer::hashCode (2 bytes)
                              @ 20   java.lang.reflect.AccessibleObject::getAnnotations (5 bytes)
                                @ 1   java.lang.reflect.Field::getDeclaredAnnotations (8 bytes)
              s                   @ 1   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                                  @ 4   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                    @ 1   java.util.Map::values (0 bytes)   no static binding
                                    @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 32   org.springframework.beans.factory.InjectionPoint::obtainMethodParameter (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 35   org.springframework.core.MethodParameter::getParameterAnnotations (97 bytes)   callee is too large
                              @ 13   java.lang.reflect.Executable::getParameterAnnotations (0 bytes)   no static binding
                              @ 36   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 39   org.springframework.util.ClassUtils::isInnerClass (23 bytes)
                                @ 1   java.lang.Class::isMemberClass (20 bytes)
               !                  @ 1   java.lang.Class::getSimpleBinaryName (38 bytes)   callee is too large
                                  @ 8   java.lang.Class::isLocalOrAnonymousClass (13 bytes)
                                    @ 1   java.lang.Class::getEnclosingMethodInfo (21 bytes)
                                      @ 1   java.lang.Class::getEnclosingMethod0 (0 bytes)   native method
                                      @ 17  java/lang/Class$EnclosingMethodInfo::<init> (not loaded)   not inlineable
                                @ 8   java.lang.Class::getModifiers (0 bytes)   native method
                                @ 11   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 51   java.lang.reflect.Executable::getParameterCount (8 bytes)   no static binding
                              @ 80   org.springframework.core.MethodParameter::adaptAnnotationArray (2 bytes)
                              @ 10   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 19   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 35   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 5   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 22   org.springframework.util.ConcurrentReferenceHashMap$Entry::setValue (12 bytes)
                              @ 40   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 48   org.springframework.util.ConcurrentReferenceHashMap$Entries::add (0 bytes)   no static binding
                              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)
                              @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   callee is too large
                              @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)
                              @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 10   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (7 bytes)
               !m               @ 3   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 28   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 39   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isSingletonCurrentlyInCreation (11 bytes)
                                @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 53  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 58  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 63  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 68  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 71  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 74   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 90  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 95  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 100  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 105  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 108  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 111   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 123   org.springframework.beans.factory.support.AbstractBeanFactory::getObjectForBeanInstance (144 bytes)   no static binding
                              @ 134   org.springframework.beans.factory.support.AbstractBeanFactory::isPrototypeCurrentlyInCreation (46 bytes)   callee is too large
                              @ 146   org.springframework.beans.factory.BeanCurrentlyInCreationException::<init> (8 bytes)   not inlineable
                              @ 151   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 164   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 172   org.springframework.beans.factory.support.AbstractBeanFactory::originalBeanName (37 bytes)   callee is too large
               !              @ 196   org.springframework.beans.factory.support.AbstractBeanFactory::doGetBean (833 bytes)   callee is too large
                              @ 209   org.springframework.beans.factory.BeanFactory::getBean (0 bytes)   not inlineable
                              @ 224   org.springframework.beans.factory.BeanFactory::getBean (0 bytes)   not inlineable
                              @ 234   org.springframework.beans.factory.BeanFactory::getBean (0 bytes)   not inlineable
               !m             @ 248   org.springframework.beans.factory.support.AbstractBeanFactory::markBeanAsCreated (60 bytes)   callee is too large
                              @ 254   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 265   org.springframework.beans.factory.support.AbstractBeanFactory::checkMergedBeanDefinition (17 bytes)
                                @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::isAbstract (5 bytes)
                                @ 12   org.springframework.beans.factory.BeanIsAbstractException::<init> (8 bytes)   not inlineable
                              @ 270   org.springframework.beans.factory.support.AbstractBeanDefinition::getDependsOn (5 bytes)
               !m             @ 311   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isDependent (24 bytes)
                                @ 11   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isDependent (128 bytes)   callee is too large
                              @ 323   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 332  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 337  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 342  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 347  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 352  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 357  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 360  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 363   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
               !m             @ 372   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::registerDependentBean (115 bytes)   callee is too large
                              @ 378   org.springframework.beans.factory.support.AbstractBeanFactory::getBean (9 bytes)
               !                @ 5   org.springframework.beans.factory.support.AbstractBeanFactory::doGetBean (833 bytes)   callee is too large
                              @ 393   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 402  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 407  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 412  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 417  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 422  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 427  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 430  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 435   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 447   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 462   java.lang.invoke.LambdaForm$MH/1635546341::linkToTargetMethod (13 bytes)   force inline by annotation
                                @ 9   java.lang.invoke.LambdaForm$DMH/105704967::invokeStatic_L4_L (20 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 16   org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$8/759156157::get$Lambda (12 bytes)
                                    @ 8   org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$8/759156157::<init> (26 bytes)   callee is too large
               !m             @ 467   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (297 bytes)   callee is too large
                              @ 480   org.springframework.beans.factory.support.AbstractBeanFactory::getObjectForBeanInstance (144 bytes)   no static binding
                              @ 490   org.springframework.beans.factory.support.AbstractBeanDefinition::isPrototype (10 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                              @ 502   org.springframework.beans.factory.support.AbstractBeanFactory::beforePrototypeCreation (83 bytes)   callee is too large
                              @ 511   org.springframework.beans.factory.support.AbstractBeanFactory::createBean (0 bytes)   no static binding
                              @ 530   org.springframework.beans.factory.support.AbstractBeanFactory::afterPrototypeCreation (62 bytes)   callee is too large
                              @ 519   org.springframework.beans.factory.support.AbstractBeanFactory::afterPrototypeCreation (62 bytes)   callee is too large
                              @ 544   org.springframework.beans.factory.support.AbstractBeanFactory::getObjectForBeanInstance (144 bytes)   no static binding
                              @ 554   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)
                              @ 565   java.util.Map::get (0 bytes)   no static binding
                              @ 588  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 593  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 598  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 603  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 606  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 609   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 623  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 628  org/springframework/beans/factory/config/Scope::get (not loaded)   not inlineable
                              @ 643   org.springframework.beans.factory.support.AbstractBeanFactory::getObjectForBeanInstance (144 bytes)   no static binding
                              @ 663  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 668  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 673  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 678  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 681  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 686   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
               !m                                           @ 8   java.util.Arrays$ArrayList::size (6 bytes)   inline (hot)
                               \-> TypeProfile (5123/5123 counts) = java/util/Arrays$ArrayList
@ 698   org.springframework.beans.factory.support.AbstractBeanFactory::cleanupAfterBeanCreationFailure (29 bytes)
                                @ 12   java.util.Set::remove (0 bytes)   no static binding
                              @ 711   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 718   org.springframework.beans.factory.support.AbstractBeanFactory::getTypeConverter (34 bytes)
                                @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getCustomTypeConverter (5 bytes)
                                @ 15   org.springframework.beans.SimpleTypeConverter::<init> (21 bytes)
                                  @ 1   org.springframework.beans.TypeConverterSupport::<init> (5 bytes)
                                    @ 1   org.springframework.beans.PropertyEditorRegistrySupport::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 10   org.springframework.beans.TypeConverterDelegate::<init> (7 bytes)
                                    @ 3   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 17   org.springframework.beans.PropertyEditorRegistrySupport::registerDefaultEditors (6 bytes)
                                @ 21   org.springframework.beans.factory.support.AbstractBeanFactory::getConversionService (5 bytes)
                                @ 24   org.springframework.beans.PropertyEditorRegistrySupport::setConversionService (6 bytes)
               !                @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::registerCustomEditors (240 bytes)   callee is too large
                              @ 724   org.springframework.beans.TypeConverterSupport::convertIfNecessary (9 bytes)
               !                @ 5   org.springframework.beans.TypeConverterSupport::doConvert (73 bytes)   callee is too large
                              @ 744   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 747   org.springframework.beans.factory.BeanNotOfRequiredTypeException::<init> (68 bytes)   not inlineable
                              @ 760   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 776  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 781  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 785  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 790  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 794   org.springframework.util.ClassUtils::getQualifiedName (11 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !                @ 7   java.lang.Class::getTypeName (79 bytes)   callee is too large
                              @ 797  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 802  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 805  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 810   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 823   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 826   org.springframework.beans.factory.BeanNotOfRequiredTypeException::<init> (68 bytes)   not inlineable
                              @ 18   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 34   org.springframework.context.support.GenericApplicationContext::getClassLoader (29 bytes)   inline (hot)
                               \-> TypeProfile (8647/8647 counts) = org/springframework/context/annotation/AnnotationConfigApplicationContext
                                @ 25   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   inline (hot)
               !              @ 39   org.springframework.util.ClassUtils::forName (247 bytes)   inline (hot)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 7   org.springframework.util.ClassUtils::resolvePrimitiveClassName (30 bytes)   inline (hot)
                                  @ 7   java.lang.String::length (6 bytes)   inline (hot)
                                @ 19   java.util.HashMap::get (23 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 37   java.lang.String::endsWith (17 bytes)   inline (hot)
                                  @ 13   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 79   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 130   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 176   java.lang.Class::forName (53 bytes)   inline (hot)
                                  @ 2   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                  @ 49   java.lang.Class::forName0 (0 bytes)   native method
                                @ 185   java.lang.String::lastIndexOf (13 bytes)   call site not reached
                                @ 200   java.lang.StringBuilder::<init> (7 bytes)   call site not reached
                                @ 207   java.lang.String::substring (79 bytes)   already compiled into a medium method
                                @ 210   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 215   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 223   java.lang.String::substring (56 bytes)   already compiled into a medium method
                                @ 226   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 229   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                                @ 238   java.lang.Class::forName (53 bytes)   too big
                              @ 42   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   inline (hot)
                                @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 31   org.springframework.core.type.StandardAnnotationMetadata::<init> (19 bytes)   inline (hot)
                                  @ 2   org.springframework.core.type.StandardClassMetadata::<init> (16 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 7   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 7   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                    @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                      @ 26   java.lang.Class::createAnnotationData (192 bytes)   too big
                                      @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)   executed < MinInliningThreshold times
                                    @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                      @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                       \-> TypeProfile (12473/12473 counts) = java/util/LinkedHashMap
                                        @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 9   java.util.AbstractCollection::toArray (147 bytes)   already compiled into a big method
                                       \-> TypeProfile (12473/12473 counts) = java/util/LinkedHashMap$LinkedValues
               !              @ 90   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (156 bytes)   inline (hot)
                               \-> TypeProfile (3842/3842 counts) = org/springframework/core/type/classreading/CachingMetadataReaderFactory
                                @ 4   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                  @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 9   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 13   org.springframework.util.ClassUtils::convertClassNameToResourcePath (15 bytes)   inline (hot)
                                  @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 11   java.lang.String::replace (127 bytes)   inline (hot)
                                    @ 121   java.lang.String::<init> (10 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 16   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 21   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                    @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                      @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                      @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                        @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                        @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 24   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                  @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                      @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 33   org.springframework.context.support.GenericApplicationContext::getResource (24 bytes)   inline (hot)
                                 \-> TypeProfile (5001/5001 counts) = org/springframework/context/annotation/AnnotationConfigApplicationContext
               !                  @ 20   org.springframework.core.io.DefaultResourceLoader::getResource (144 bytes)   inline (hot)
                                    @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                    @ 10   java.util.HashSet::iterator (13 bytes)   inline (hot)
                                     \-> TypeProfile (4539/4539 counts) = java/util/LinkedHashSet
                                      @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                      @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                                       \-> TypeProfile (2739/16775 counts) = java/util/HashMap
                                       \-> TypeProfile (14036/16775 counts) = java/util/LinkedHashMap
                                        @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                            @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                            @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                      @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                                       \-> TypeProfile (2739/16775 counts) = java/util/HashMap$KeySet
                                       \-> TypeProfile (14036/16775 counts) = java/util/LinkedHashMap$LinkedKeySet
                                        @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                          @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                          @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 17   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                     \-> TypeProfile (4539/4539 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                    @ 59   java.lang.String::startsWith (7 bytes)   inline (hot)
                                      @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                    @ 74   java.lang.String::startsWith (7 bytes)   inline (hot)
                                      @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                    @ 87   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 90   java.lang.String::substring (56 bytes)   inline (hot)
                                      @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                          @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                          @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 94   org.springframework.context.support.GenericApplicationContext::getClassLoader (29 bytes)   inline (hot)
                                      @ 25   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   inline (hot)
                                    @ 97   org.springframework.core.io.ClassPathResource::<init> (51 bytes)   inline (hot)
                                      @ 1   org.springframework.core.io.AbstractFileResolvingResource::<init> (5 bytes)   inline (hot)
                                        @ 1   org.springframework.core.io.AbstractResource::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 7   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                      @ 11   org.springframework.util.StringUtils::cleanPath (281 bytes)   already compiled into a big method
                                      @ 18   java.lang.String::startsWith (7 bytes)   inline (hot)
                                        @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !m               @ 41   org.springframework.core.type.classreading.CachingMetadataReaderFactory::getMetadataReader (115 bytes)   inline (hot)
                                  @ 15   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                   \-> TypeProfile (5490/5490 counts) = java/util/concurrent/ConcurrentHashMap
                                    @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                                    @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                    @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                      @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 30   org.springframework.core.type.classreading.SimpleMetadataReaderFactory::getMetadataReader (18 bytes)   inline (hot)
                                    @ 9   org.springframework.context.support.GenericApplicationContext::getClassLoader (29 bytes)   inline (hot)
                                     \-> TypeProfile (1493/1493 counts) = org/springframework/context/annotation/AnnotationConfigApplicationContext
                                      @ 25   org.springframework.core.io.DefaultResourceLoader::getClassLoader (18 bytes)   inline (hot)
               !                    @ 14   org.springframework.core.type.classreading.SimpleMetadataReader::<init> (111 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 9   org.springframework.core.io.ClassPathResource::getInputStream (88 bytes)   inline (hot)
               !                      @ 9   org.springframework.core.io.FileSystemResource::getInputStream (25 bytes)   inline (hot)
                                       \-> TypeProfile (489/1493 counts) = org/springframework/core/io/FileSystemResource
                                       \-> TypeProfile (1004/1493 counts) = org/springframework/core/io/ClassPathResource
                                        @ 8   java.nio.file.Files::newInputStream (10 bytes)   inline (hot)
                                          @ 1   java.nio.file.Files::provider (10 bytes)   inline (hot)
                                            @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)   inline (hot)
                                             \-> TypeProfile (1488/1488 counts) = sun/nio/fs/UnixPath
                                              @ 1   sun.nio.fs.UnixPath::getFileSystem (5 bytes)   accessor
                                            @ 6   sun.nio.fs.UnixFileSystem::provider (5 bytes)   accessor
                                          @ 6   java.nio.file.spi.FileSystemProvider::newInputStream (91 bytes)   too big
                                        @ 15   java.lang.Class::getResourceAsStream (26 bytes)   never executed
               !                        @ 48   java.lang.ClassLoader::getSystemResourceAsStream (21 bytes)   never executed
                                      @ 14   java.io.BufferedInputStream::<init> (9 bytes)   inline (hot)
                                        @ 5   java.io.BufferedInputStream::<init> (32 bytes)   inline (hot)
                                          @ 2   java.io.FilterInputStream::<init> (10 bytes)   inline (hot)
                                            @ 1   java.io.InputStream::<init> (5 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 23   org.springframework.asm.ClassReader::<init> (10 bytes)   inline (hot)
               !                        @ 3   org.springframework.asm.ClassReader::readStream (88 bytes)   inline (hot)
                                          @ 18   java.io.ByteArrayOutputStream::<init> (7 bytes)   inline (hot)
                                            @ 3   java.io.ByteArrayOutputStream::<init> (43 bytes)   inline (hot)
                                              @ 1   java.io.OutputStream::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
              s                           @ 33   java.io.BufferedInputStream::read (113 bytes)   inline (hot)
                                            @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                            @ 49   java.io.BufferedInputStream::read1 (108 bytes)   inline (hot)
                                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                              @ 39   java.io.FileInputStream::read (8 bytes)   inline (hot)
                                               \-> TypeProfile (2002/2002 counts) = java/io/FileInputStream
                                                @ 4   java.io.FileInputStream::readBytes (0 bytes)   native method
                                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   inline (hot)
                                                @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                                @ 199   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                              @ 91   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                           @ 48   java.io.ByteArrayOutputStream::write (66 bytes)   inline (hot)
                                            @ 38   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)   inline (hot)
                                              @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   inline (hot)
                                                @ 36   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                                  @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                                  @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 52   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                           @ 33   java.io.BufferedInputStream::read (113 bytes)   inline (hot)
                                            @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                            @ 49   java.io.BufferedInputStream::read1 (108 bytes)   inline (hot)
                                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                              @ 39   java.io.FileInputStream::read (8 bytes)   inline (hot)
                                               \-> TypeProfile (2002/2002 counts) = java/io/FileInputStream
                                                @ 4   java.io.FileInputStream::readBytes (0 bytes)   native method
                                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   inline (hot)
                                                @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                                @ 199   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                              @ 91   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                          @ 55   java.io.OutputStream::flush (1 bytes)   inline (hot)
              s                           @ 59   java.io.ByteArrayOutputStream::toByteArray (12 bytes)   inline (hot)
                                            @ 8   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                              @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                              @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                        @ 6   org.springframework.asm.ClassReader::<init> (9 bytes)   inline (hot)
                                          @ 5   org.springframework.asm.ClassReader::<init> (8 bytes)   inline (hot)
                                            @ 4   org.springframework.asm.ClassReader::<init> (367 bytes)   hot method too big
                                      @ 29   java.io.BufferedInputStream::close (41 bytes)   inline (hot)
                                        @ 15   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::compareAndSet (24 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::accessCheck (17 bytes)   inline (hot)
                                            @ 5   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                                          @ 7   java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::valueCheck (19 bytes)   inline (hot)
                                          @ 20   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                      @ 80   org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor::<init> (58 bytes)   inline (hot)
                                        @ 1   org.springframework.core.type.classreading.ClassMetadataReadingVisitor::<init> (33 bytes)   inline (hot)
                                          @ 3   org.springframework.asm.ClassVisitor::<init> (7 bytes)   inline (hot)
                                            @ 3   org.springframework.asm.ClassVisitor::<init> (47 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 26   java.util.LinkedHashSet::<init> (9 bytes)   inline (hot)
                                            @ 5   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                              @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                              @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                                @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inlining too deep
                                                  @ 51   java.lang.Float::isNaN (12 bytes)   inlining too deep
                                                  @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inlining too deep
                                        @ 10   java.util.LinkedHashSet::<init> (9 bytes)   inline (hot)
                                          @ 5   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                            @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                              @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                                @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                                @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                        @ 22   java.util.LinkedHashMap::<init> (11 bytes)   inline (hot)
                                          @ 2   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                            @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                              @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                              @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                              @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                        @ 34   org.springframework.util.LinkedMultiValueMap::<init> (17 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 10   java.util.LinkedHashMap::<init> (11 bytes)   inline (hot)
                                            @ 2   java.util.HashMap::<init> (8 bytes)   inline (hot)
                                              @ 4   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                                @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                                @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                        @ 46   java.util.LinkedHashSet::<init> (9 bytes)   inline (hot)
                                          @ 5   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                            @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                              @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                                @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                                @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                                @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                      @ 90   org.springframework.asm.ClassReader::accept (11 bytes)   inline (hot)
                                        @ 7   org.springframework.asm.ClassReader::accept (1250 bytes)   hot method too big
                                      @ 69   java.io.BufferedInputStream::close (41 bytes)   too big
                                  @ 40   java.util.concurrent.ConcurrentHashMap::put (8 bytes)   inline (hot)
                                   \-> TypeProfile (1493/1493 counts) = java/util/concurrent/ConcurrentHashMap
               !m                   @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
                                @ 49   java.lang.String::lastIndexOf (13 bytes)   call site not reached
                                @ 62   java.lang.StringBuilder::<init> (7 bytes)   call site not reached
                                @ 68   java.lang.String::substring (79 bytes)   already compiled into a medium method
                                @ 71   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 76   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 83   java.lang.String::substring (56 bytes)   already compiled into a medium method
                                @ 86   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 89   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                                @ 98   java.lang.StringBuilder::<init> (7 bytes)   call site not reached
                                @ 103   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 108   org.springframework.util.ClassUtils::convertClassNameToResourcePath (15 bytes)   call site not reached
                                @ 111   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 116   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                                @ 119   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                              @ 95   org.springframework.context.annotation.ConfigurationClassParser$SourceClass::<init> (54 bytes)   inline (hot)
                                @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 31   org.springframework.core.type.StandardAnnotationMetadata::<init> (19 bytes)   inline (hot)
                                  @ 2   org.springframework.core.type.StandardClassMetadata::<init> (16 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 7   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 7   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                    @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                      @ 26   java.lang.Class::createAnnotationData (192 bytes)   too big
                                      @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)   executed < MinInliningThreshold times
                                    @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                      @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                       \-> TypeProfile (12473/12473 counts) = java/util/LinkedHashMap
                                        @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                          @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 9   java.util.AbstractCollection::toArray (147 bytes)   already compiled into a big method
                                       \-> TypeProfile (12473/12473 counts) = java/util/LinkedHashMap$LinkedValues
                                @ 45   org.springframework.core.type.classreading.SimpleMetadataReader::getAnnotationMetadata (5 bytes)   accessor
                              @ 10   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                              @ 42   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 45   java.lang.Class::arrayContentsEq (70 bytes)   callee is too large
                              @ 51   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 56   sun.reflect.ReflectionFactory::copyConstructor (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyConstructor (5 bytes)
                                  @ 1   java.lang.reflect.Constructor::copy (72 bytes)   callee is too large
                              @ 74   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 78   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 82   java.util.concurrent.ConcurrentHashMap$ForwardingNode::<init> (14 bytes)   inline (hot)
                                @ 5   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 172   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 296   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 311   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 346   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 488   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 508   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 528   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 538   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 546   java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   inline (hot)
                                @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
                              @ 259   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 270   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                              @ 81   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 86   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 90   java.lang.Class::argumentTypesToString (79 bytes)   callee is too large
                              @ 93   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 96   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 99   java.lang.NoSuchMethodException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                                @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                                @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 21   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 36   java.lang.reflect.AccessibleObject::checkAccess (96 bytes)   callee is too large
                              @ 43   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 59   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 73   java.lang.reflect.Constructor::acquireConstructorAccessor (44 bytes)   callee is too large
                              @ 79   sun.reflect.ConstructorAccessor::newInstance (0 bytes)   not inlineable
                              @ 41   org.springframework.core.ResolvableType::getComponentType (91 bytes)   callee is too large
                              @ 44   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 54   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 57   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 66   org.springframework.core.ResolvableType::resolveType (151 bytes)   callee is too large
                              @ 69   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 9   org.springframework.core.SerializableTypeWrapper::forTypeProvider (191 bytes)   callee is too large
                              @ 39   org.springframework.core.ResolvableType::<init> (39 bytes)   callee is too large
                              @ 46   org.springframework.util.ConcurrentReferenceHashMap::purgeUnreferencedEntries (33 bytes)
               !                @ 23   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   callee is too large
                              @ 56   org.springframework.core.ResolvableType::<init> (41 bytes)   callee is too large
                              @ 64   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                              @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                              @ 10   java.net.URL::<init> (8 bytes)   inline (hot)
               !                @ 4   java.net.URL::<init> (543 bytes)   hot method too big
                              @ 20   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)   accessor
                              @ 25   sun.net.www.ParseUtil::encodePath (336 bytes)   hot method too big
                              @ 28   java.net.URL::<init> (8 bytes)   inline (hot)
               !                @ 4   java.net.URL::<init> (543 bytes)   hot method too big
                              @ 33   java.net.URL::getFile (5 bytes)   accessor
                              @ 38   java.net.URL::getFile (5 bytes)   accessor
                              @ 41   java.lang.String::startsWith (7 bytes)   inline (hot)
                                @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
               !              @ 54   sun.misc.URLClassPath::check (123 bytes)   inline (hot)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 60   java.lang.String::indexOf (7 bytes)   (intrinsic)
                              @ 126   java.lang.String::replace (127 bytes)   inline (hot)
                              @ 129   java.io.File::<init> (113 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 31   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 75   java.io.UnixFileSystem::normalize (75 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 19   java.lang.String::charAt (29 bytes)   inline (hot)
                                  @ 69   java.io.UnixFileSystem::normalize (132 bytes)   too big
                                @ 78   java.io.UnixFileSystem::resolve (103 bytes)   inline (hot)
                                  @ 3   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 13   java.lang.String::charAt (29 bytes)   inline (hot)
                                  @ 54   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 83   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                  @ 87   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 92   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 96   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                  @ 99   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 106   java.io.UnixFileSystem::prefixLength (25 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 11   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 136   java.io.File::exists (43 bytes)   inline (hot)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 17   java.io.File::isInvalid (47 bytes)   inline (hot)
                                  @ 13   java.lang.String::indexOf (7 bytes)   inline (hot)
                                    @ 3   java.lang.String::indexOf (70 bytes)   inline (hot)
                                @ 29   java.io.UnixFileSystem::getBooleanAttributes (49 bytes)   inline (hot)
                                  @ 2   java.io.UnixFileSystem::getBooleanAttributes0 (0 bytes)   native method
                                  @ 7   java.io.File::getName (42 bytes)   inline (hot)
                                    @ 7   java.lang.String::lastIndexOf (13 bytes)   inline (hot)
                                      @ 9   java.lang.String::lastIndexOf (52 bytes)   inline (hot)
                                        @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 38   java.lang.String::substring (56 bytes)   inline (hot)
                                      @ 52   java.lang.String::<init> (82 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                          @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                          @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 12   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 20   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 151   sun.misc.URLClassPath$FileLoader$1::<init> (26 bytes)   inline (hot)
                                @ 22   sun.misc.Resource::<init> (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 88   org.springframework.core.ResolvableType::<init> (39 bytes)   callee is too large
                              @ 100   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 5   sun.reflect.ConstructorAccessorImpl::newInstance (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   org.springframework.core.ResolvableType::resolveClass (73 bytes)   callee is too large
               !              @ 1   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 121   sun.reflect.generics.parser.SignatureParser::parseBaseType (205 bytes)   callee is too large
                              @ 126   sun.reflect.generics.parser.SignatureParser::parseFieldTypeSignature (6 bytes)
                                @ 2   sun.reflect.generics.parser.SignatureParser::parseFieldTypeSignature (73 bytes)   callee is too large
                              @ 4   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 23   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 32   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 45   java.lang.invoke.LambdaForm$MH/1635546341::linkToTargetMethod (13 bytes)   force inline by annotation
                                @ 9   java.lang.invoke.LambdaForm$DMH/105704967::invokeStatic_L4_L (20 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 16   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$$Lambda$26/251520863::get$Lambda (12 bytes)
                                    @ 8   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$$Lambda$26/251520863::<init> (26 bytes)   callee is too large
               !              @ 50   org.springframework.util.ReflectionUtils::doWithLocalMethods (88 bytes)   callee is too large
                              @ 57   java.util.ArrayList::addAll (92 bytes)   callee is too large
                              @ 66   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 74   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 99   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata::<init> (26 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 6   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 24   sun.reflect.ReflectionFactory::copyMethod (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyMethod (5 bytes)
                                  @ 1   java.lang.reflect.Method::copy (84 bytes)   callee is too large
                              @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 3   java.lang.ref.WeakReference::<init> (7 bytes)
                                @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 17   org.springframework.core.MethodParameter::getMethod (22 bytes)
                              @ 26   java.lang.reflect.Method::getGenericReturnType (20 bytes)
                                @ 1   java.lang.reflect.Method::getGenericSignature (5 bytes)
                                @ 8   java.lang.reflect.Method::getGenericInfo (27 bytes)
                                  @ 9   java.lang.reflect.Method::getGenericSignature (5 bytes)
                                  @ 13   java.lang.reflect.Method::getFactory (9 bytes)
                                    @ 2  sun/reflect/generics/scope/MethodScope::make (not loaded)   not inlineable
                                    @ 5   sun.reflect.generics.factory.CoreReflectionFactory::make (10 bytes)
                                      @ 6   sun.reflect.generics.factory.CoreReflectionFactory::<init> (15 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 16  sun/reflect/generics/repository/MethodRepository::make (not loaded)   not inlineable
                                @ 11  sun/reflect/generics/repository/MethodRepository::getReturnType (not loaded)   not inlineable
                                @ 16   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 43   java.lang.reflect.Executable::getGenericParameterTypes (20 bytes)   no static binding
                              @ 66   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 69   org.springframework.util.ClassUtils::isInnerClass (23 bytes)
                                @ 1   java.lang.Class::isMemberClass (20 bytes)
               !                  @ 1   java.lang.Class::getSimpleBinaryName (38 bytes)   callee is too large
                                  @ 8   java.lang.Class::isLocalOrAnonymousClass (13 bytes)
                                    @ 1   java.lang.Class::getEnclosingMethodInfo (21 bytes)
                                      @ 1   java.lang.Class::getEnclosingMethod0 (0 bytes)   native method
                                      @ 17  java/lang/Class$EnclosingMethodInfo::<init> (not loaded)   not inlineable
                                @ 8   java.lang.Class::getModifiers (0 bytes)   native method
                                @ 11   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 81   java.lang.reflect.Executable::getParameterCount (8 bytes)   no static binding
                              @ 113   org.springframework.core.MethodParameter::getParameterType (59 bytes)   callee is too large
                              @ 10   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 14   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 21   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 34   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 1   java.nio.ByteBuffer::getShort (0 bytes)   no static binding
                              @ 19   sun.reflect.ConstantPool::getUTF8At (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                              @ 27   sun.reflect.annotation.AnnotationParser::parseSig (61 bytes)   callee is too large
                              @ 40   sun.reflect.ConstantPool::getClassAt (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getClassAt0 (0 bytes)   native method
                              @ 62   java.lang.TypeNotPresentException::<init> (35 bytes)   don't inline Throwable constructors
                              @ 5   java.util.Collections$SetFromMap::contains (11 bytes)   inline (hot)
                               \-> TypeProfile (10371/10371 counts) = java/util/Collections$SetFromMap
                                @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                                @ 5   java.util.WeakHashMap::containsKey (14 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (11433/11436 counts) = java/util/concurrent/ConcurrentHashMap
                                  @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                    @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                    @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                      @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                    @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 68   sun.reflect.annotation.AnnotationParser::skipAnnotation (40 bytes)   callee is too large
                              @ 84   sun.reflect.annotation.AnnotationParser::skipAnnotation (40 bytes)   callee is too large
                              @ 98   sun.reflect.annotation.AnnotationParser::contains (36 bytes)   callee is too large
                              @ 106   sun.reflect.annotation.AnnotationParser::skipAnnotation (40 bytes)   callee is too large
                              @ 116   sun.reflect.annotation.AnnotationType::getInstance (65 bytes)   callee is too large
                              @ 128   sun.reflect.annotation.AnnotationParser::skipAnnotation (40 bytes)   callee is too large
                              @ 135   sun.reflect.annotation.AnnotationType::memberTypes (5 bytes)
                              @ 146   sun.reflect.annotation.AnnotationType::memberDefaults (5 bytes)
                              @ 149   java.util.LinkedHashMap::<init> (16 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.util.HashMap::putMapEntries (154 bytes)   callee is too large
                              @ 155   java.nio.ByteBuffer::getShort (0 bytes)   no static binding
                              @ 174   java.nio.ByteBuffer::getShort (0 bytes)   no static binding
                              @ 185   sun.reflect.ConstantPool::getUTF8At (10 bytes)
                                @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                              @ 194   java.util.Map::get (0 bytes)   no static binding
                              @ 210   sun.reflect.annotation.AnnotationParser::skipMemberValue (11 bytes)
                                @ 1   java.nio.ByteBuffer::get (0 bytes)   no static binding
                                @ 7   sun.reflect.annotation.AnnotationParser::skipMemberValue (65 bytes)   callee is too large
                              @ 221   sun.reflect.annotation.AnnotationParser::parseMemberValue (162 bytes)   callee is too large
                              @ 241   sun.reflect.annotation.AnnotationType::members (5 bytes)
                              @ 246   java.util.Map::get (0 bytes)   no static binding
                              @ 254   sun.reflect.annotation.AnnotationTypeMismatchExceptionProxy::setMember (7 bytes)   not inlineable
                              @ 264   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 280   sun.reflect.annotation.AnnotationParser::annotationForMap (16 bytes)
                                @ 6   sun.reflect.annotation.AnnotationParser$1::<init> (15 bytes)
                                  @ 11   java.lang.Object::<init> (1 bytes)
                                @ 9   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 23   java.lang.Thread::yield (0 bytes)   native method
                              @ 38   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 1   java.util.AbstractMap::<init> (5 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 34   java.util.concurrent.ConcurrentHashMap::tableSizeFor (59 bytes)   callee is too large
                              @ 0   java.lang.Class::checkInitted (19 bytes)
                                @ 11   java.lang.Class$3::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 4   java.lang.Class::reflectionData (49 bytes)   callee is too large
                              @ 37   java.lang.Class::getDeclaredFields0 (0 bytes)   native method
                              @ 40   sun.reflect.Reflection::filterFields (31 bytes)
                                @ 13   java.util.Map::get (0 bytes)   no static binding
                                @ 21   sun.reflect.Reflection::filter (220 bytes)   callee is too large
                              @ 1   java.lang.reflect.Executable::getModifiers (0 bytes)   no static binding
                              @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)
                              @ 3   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 11   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::get$Lambda (10 bytes)
                                    @ 6   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   org.springframework.util.Assert::notNull (17 bytes)
                                @ 9   org.springframework.util.Assert::nullSafeGet (18 bytes)
                                  @ 5   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::get (12 bytes)
                                    @ 8   org.springframework.core.annotation.AnnotationAttributes::lambda$assertAttributePresence$0 (21 bytes)
                                      @ 17   java.lang.String::format (16 bytes)
                                        @ 4  java/util/Formatter::<init> (not loaded)   not inlineable
                                        @ 9  java/util/Formatter::format (not loaded)   not inlineable
                                        @ 12  java/util/Formatter::toString (not loaded)   not inlineable
                                @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 6   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 11   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                              @ 14   java.lang.Class::copyConstructors (38 bytes)   callee is too large
                              @ 4   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.nio.ByteBuffer::wrap (8 bytes)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   callee is too large
                                  @ 16   java.lang.IndexOutOfBoundsException::<init> (5 bytes)   not inlineable
                              @ 17   java.nio.HeapByteBuffer::getShort (18 bytes)
                                @ 4   java.nio.Buffer::nextGetIndex (38 bytes)   callee is too large
                                @ 7   java.nio.HeapByteBuffer::ix (7 bytes)
                                @ 14   java.nio.Bits::getShort (18 bytes)
                                  @ 6   java.nio.Bits::getShortB (16 bytes)
                                    @ 2   java.nio.HeapByteBuffer::_get (7 bytes)
                                    @ 9   java.nio.HeapByteBuffer::_get (7 bytes)
                                    @ 12   java.nio.Bits::makeShort (12 bytes)
                                  @ 14   java.nio.Bits::getShortL (16 bytes)
                                    @ 4   java.nio.HeapByteBuffer::_get (7 bytes)
                                    @ 9   java.nio.HeapByteBuffer::_get (7 bytes)
                                    @ 12   java.nio.Bits::makeShort (12 bytes)
               !              @ 41   sun.reflect.annotation.AnnotationParser::parseAnnotation2 (284 bytes)   callee is too large
                              @ 53   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 62   sun.reflect.annotation.AnnotationType::getInstance (65 bytes)   callee is too large
                              @ 65   sun.reflect.annotation.AnnotationType::retention (5 bytes)
                              @ 80   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.Object::hashCode (0 bytes)   native method
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 96   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 101   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 106   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Class::toString (47 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 111   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 116   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 119   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 122  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 15   java.util.HashMap$EntrySet::<init> (10 bytes)
                                @ 6   java.util.AbstractSet::<init> (5 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.HashMap$EntryIterator::<init> (11 bytes)
                                @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   callee is too large
                              @ 13   java.util.Map::put (0 bytes)   no static binding
                              @ 24   java.util.Map::remove (0 bytes)   no static binding
                              @ 35   java.util.Map::remove (0 bytes)   no static binding
                              @ 46   java.util.Set::add (0 bytes)   no static binding
                              @ 1   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   java.lang.String::contains (20 bytes)
                                @ 2   java.lang.String::toString (2 bytes)
                                @ 7   java.lang.String::indexOf (7 bytes)
                                  @ 3   java.lang.String::indexOf (25 bytes)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 3   org.springframework.util.Assert::hasText (17 bytes)
                                @ 1   org.springframework.util.StringUtils::hasText (24 bytes)
                                  @ 5   java.lang.String::isEmpty (14 bytes)
                                  @ 12   org.springframework.util.StringUtils::containsText (37 bytes)   callee is too large
                                @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 8   java.util.LinkedHashMap::get (33 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                                @ 25   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   callee is too large
                              @ 15   org.springframework.core.annotation.AnnotationAttributes::assertAttributePresence (12 bytes)
                                @ 3   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                  @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                    @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                    @ 11   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::get$Lambda (10 bytes)
                                      @ 6   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::<init> (15 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                @ 8   org.springframework.util.Assert::notNull (17 bytes)
                                  @ 9   org.springframework.util.Assert::nullSafeGet (18 bytes)
                                    @ 5   org.springframework.core.annotation.AnnotationAttributes$$Lambda$13/828441346::get (12 bytes)
                                      @ 8   org.springframework.core.annotation.AnnotationAttributes::lambda$assertAttributePresence$0 (21 bytes)
                                        @ 17   java.lang.String::format (16 bytes)
                                          @ 4  java/util/Formatter::<init> (not loaded)   not inlineable
                                          @ 9  java/util/Formatter::format (not loaded)   not inlineable
                                          @ 12  java/util/Formatter::toString (not loaded)   not inlineable
                                  @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 21   org.springframework.core.annotation.AnnotationAttributes::assertNotException (44 bytes)   callee is too large
                              @ 26   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 33   java.lang.Class::isArray (0 bytes)   native method
                              @ 40   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 44   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 51   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 55   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 64   java.lang.reflect.Array::set (0 bytes)   native method
                              @ 74   org.springframework.core.annotation.AnnotationAttributes::assertAttributeType (54 bytes)   callee is too large
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 33   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 46   java.lang.ThreadLocal$ThreadLocalMap::expungeStaleEntry (146 bytes)   callee is too large
                              @ 5   org.springframework.beans.factory.support.AbstractBeanDefinition::hasPropertyValues (23 bytes)
                                @ 11   org.springframework.beans.MutablePropertyValues::isEmpty (10 bytes)
                                  @ 4   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 16   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 23   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
                              @ 32   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 39   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)
                              @ 46   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 49   java.util.List::iterator (0 bytes)   no static binding
                              @ 58   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 68   java.util.Iterator::next (0 bytes)   no static binding
                              @ 96   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 102   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor::postProcessAfterInstantiation (2 bytes)   no static binding
                              @ 126   org.springframework.beans.factory.support.AbstractBeanDefinition::hasPropertyValues (23 bytes)
                                @ 11   org.springframework.beans.MutablePropertyValues::isEmpty (10 bytes)
                                  @ 4   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 133   org.springframework.beans.factory.support.AbstractBeanDefinition::getPropertyValues (23 bytes)
                                @ 12   org.springframework.beans.MutablePropertyValues::<init> (22 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 15   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 143   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
                              @ 151   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
                              @ 164   org.springframework.beans.MutablePropertyValues::<init> (96 bytes)   callee is too large
                              @ 170   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
                              @ 183   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::autowireByName (204 bytes)   callee is too large
                              @ 187   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
               !              @ 200   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::autowireByType (293 bytes)   callee is too large
                              @ 208   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)
                              @ 214   org.springframework.beans.factory.support.AbstractBeanDefinition::getDependencyCheck (5 bytes)
                              @ 241   org.springframework.beans.factory.support.AbstractBeanDefinition::getPropertyValues (23 bytes)
                                @ 12   org.springframework.beans.MutablePropertyValues::<init> (22 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 15   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 247   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 250   java.util.List::iterator (0 bytes)   no static binding
                              @ 259   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 269   java.util.Iterator::next (0 bytes)   no static binding
                              @ 299   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 305   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor::postProcessProperties (2 bytes)   no static binding
                              @ 328   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::filterPropertyDescriptorsForDependencyCheck (64 bytes)   callee is too large
                              @ 340   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 346   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor::postProcessPropertyValues (2 bytes)   no static binding
                              @ 382   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::filterPropertyDescriptorsForDependencyCheck (64 bytes)   callee is too large
                              @ 394   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::checkDependencies (137 bytes)   callee is too large
               !              @ 408   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyPropertyValues (459 bytes)   callee is too large
                              @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   too big
                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 6   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$27/1100109058::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$28/333693383::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 5   org.springframework.beans.factory.support.AbstractBeanFactory::doGetBean (833 bytes)   callee is too large
                              @ 1   org.springframework.beans.PropertyEditorRegistrySupport::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.lang.reflect.Constructor::getRoot (5 bytes)   accessor
                              @ 8   java.lang.reflect.Method::getRoot (5 bytes)   accessor
                               \-> TypeProfile (336/848 counts) = java/lang/reflect/Method
                               \-> TypeProfile (512/848 counts) = java/lang/reflect/Constructor
              s               @ 18   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   inline (hot)
                                @ 8   java.lang.reflect.Constructor::getRoot (5 bytes)   accessor
                                @ 8   java.lang.reflect.Method::getRoot (5 bytes)   accessor
                                 \-> TypeProfile (336/848 counts) = java/lang/reflect/Method
                                 \-> TypeProfile (512/848 counts) = java/lang/reflect/Constructor
              s                 @ 18   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   recursive inlining is too deep
                                @ 29   java.lang.reflect.Constructor::getAnnotationBytes (5 bytes)   accessor
                                @ 29   java.lang.reflect.Method::getAnnotationBytes (5 bytes)   accessor
                                 \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                                 \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
                                @ 32   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                @ 36   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)   accessor
                                @ 36   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                 \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                                 \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
                                @ 39   java.lang.System$2::getConstantPool (5 bytes)   inline (hot)
                                 \-> TypeProfile (424/424 counts) = java/lang/System$2
                                  @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                                @ 45   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)   accessor
                                @ 45   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                 \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                                 \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
               !                @ 48   sun.reflect.annotation.AnnotationParser::parseAnnotations (37 bytes)   inline (hot)
                                  @ 4   java.util.Collections::emptyMap (4 bytes)   inline (hot)
                                  @ 12   sun.reflect.annotation.AnnotationParser::parseAnnotations2 (135 bytes)   too big
                              @ 29   java.lang.reflect.Constructor::getAnnotationBytes (5 bytes)   accessor
                              @ 29   java.lang.reflect.Method::getAnnotationBytes (5 bytes)   accessor
                               \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                               \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
                              @ 32   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                              @ 36   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)   accessor
                              @ 36   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                               \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                               \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
                              @ 39   java.lang.System$2::getConstantPool (5 bytes)   inline (hot)
                               \-> TypeProfile (424/424 counts) = java/lang/System$2
                                @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 45   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)   accessor
                              @ 45   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                               \-> TypeProfile (168/424 counts) = java/lang/reflect/Method
                               \-> TypeProfile (256/424 counts) = java/lang/reflect/Constructor
               !              @ 48   sun.reflect.annotation.AnnotationParser::parseAnnotations (37 bytes)   inline (hot)
                                @ 4   java.util.Collections::emptyMap (4 bytes)   inline (hot)
                                @ 12   sun.reflect.annotation.AnnotationParser::parseAnnotations2 (135 bytes)   too big
                              @ 11   sun.reflect.ReflectionFactory::inflationThreshold (4 bytes)
                              @ 21   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 24   sun.reflect.misc.ReflectUtil::isVMAnonymousClass (19 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::indexOf (7 bytes)
                                  @ 3   java.lang.String::indexOf (25 bytes)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 34   sun.reflect.MethodAccessorGenerator::<init> (5 bytes)
                                @ 1   sun.reflect.AccessorGenerator::<init> (17 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 48   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 55   java.lang.reflect.Constructor::getExceptionTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 62   java.lang.reflect.Constructor::getModifiers (5 bytes)
                              @ 65   sun.reflect.MethodAccessorGenerator::generateConstructor (21 bytes)
                                @ 14   sun.reflect.MethodAccessorGenerator::generate (762 bytes)   callee is too large
                              @ 77   sun.reflect.DelegatingConstructorAccessorImpl::setDelegate (6 bytes)
                              @ 85   sun.reflect.NativeConstructorAccessorImpl::newInstance0 (0 bytes)   native method
                              @ 4   java.util.Map::size (0 bytes)   no static binding
                              @ 13   java.util.List::size (0 bytes)   no static binding
                              @ 13   org.springframework.asm.MethodVisitor::visitLineNumber (17 bytes)   no static binding
                              @ 6   org.springframework.core.annotation.AnnotatedElementUtils::forAnnotations (9 bytes)
                                @ 5   org.springframework.core.annotation.AnnotatedElementUtils$1::<init> (10 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 13   org.springframework.core.annotation.AnnotatedElementUtils::getMergedAnnotationAttributes (26 bytes)
                                @ 7   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (8 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::<init> (41 bytes)   callee is too large
                                @ 10   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (22 bytes)
                                  @ 6   java.util.Collections::singleton (9 bytes)
                                    @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                      @ 1   java.util.AbstractSet::<init> (5 bytes)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.util.Collections::emptySet (4 bytes)
               !                  @ 18   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (54 bytes)   callee is too large
                                @ 21   org.springframework.core.annotation.AnnotationUtils::postProcessAnnotationAttributes (163 bytes)   callee is too large
                              @ 23   org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver::extractValue (23 bytes)
                                @ 3   java.util.LinkedHashMap::get (33 bytes)   callee is too large
                                @ 17   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s                 @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   callee is too large
                                @ 11   java.util.Map::get (0 bytes)   no static binding
                                @ 16   java.lang.Class::cast (27 bytes)
                                  @ 6   java.lang.Class::isInstance (0 bytes)   intrinsic
                                  @ 18   java.lang.Class::cannotCastMsg (40 bytes)   callee is too large
                                  @ 21   java.lang.ClassCastException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 2   org.springframework.core.MethodParameter::getAnnotatedElement (5 bytes)
                              @ 5   java.lang.reflect.AccessibleObject::getAnnotations (5 bytes)
                                @ 1   java.lang.reflect.AccessibleObject::getDeclaredAnnotations (10 bytes)   no static binding
                              @ 10   org.springframework.core.MethodParameter::adaptAnnotationArray (2 bytes)
                              @ 11  org/springframework/beans/CachedIntrospectionResults::getBeanClass (not loaded)   not inlineable
                              @ 4   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                               \-> TypeProfile (9216/9216 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                  @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 16   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 32   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 40   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 28   com.sun.proxy.$Proxy12::<init> (6 bytes)
                                @ 2   java.lang.reflect.Proxy::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 5   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 49   java.lang.reflect.InvocationTargetException::<init> (14 bytes)   not inlineable
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   inline (hot)
                                @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                @ 39   java.io.FileInputStream::read (8 bytes)   inline (hot)
                                 \-> TypeProfile (2002/2002 counts) = java/io/FileInputStream
                                  @ 4   java.io.FileInputStream::readBytes (0 bytes)   native method
                                @ 44   java.io.BufferedInputStream::fill (233 bytes)   inline (hot)
                                  @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                  @ 199   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                                @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                @ 91   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 36   java.lang.IllegalArgumentException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 49   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 57   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 40   com.sun.proxy.$Proxy12::required (32 bytes)
                                @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   callee is too large
                                @ 17   java.lang.Boolean::booleanValue (5 bytes)
                                @ 28   java.lang.reflect.UndeclaredThrowableException::<init> (14 bytes)   not inlineable
                              @ 66   java.lang.reflect.InvocationTargetException::<init> (14 bytes)   not inlineable
                              @ 45   java.lang.Boolean::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                              @ 39   java.io.FileInputStream::read (8 bytes)   inline (hot)
                               \-> TypeProfile (2002/2002 counts) = java/io/FileInputStream
                                @ 4   java.io.FileInputStream::readBytes (0 bytes)   native method
                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   inline (hot)
                                @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                                @ 199   java.io.BufferedInputStream::getInIfOpen (21 bytes)   inline (hot)
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)   inline (hot)
                              @ 91   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 3   java.lang.Class::getInterfaces (41 bytes)   callee is too large
                              @ 27   java.lang.Class::getMethods (17 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 10   java.lang.Class::privateGetPublicMethods (267 bytes)   callee is too large
                                @ 13   java.lang.Class::copyMethods (36 bytes)   callee is too large
                              @ 56   java.lang.reflect.Method::getModifiers (5 bytes)
                              @ 59   java.lang.reflect.Modifier::isAbstract (14 bytes)
                              @ 73   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 80   java.util.List::add (0 bytes)   no static binding
                              @ 4   java.lang.StringBuilder::<init> (7 bytes)   inline (hot)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
               !              @ 9   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   inline (hot)
                              @ 12   java.lang.Character::isWhitespace (5 bytes)   inline (hot)
                                @ 1   java.lang.Character::isWhitespace (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::isWhitespace (23 bytes)   inline (hot)
                                    @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
               !              @ 19   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   inline (hot)
                              @ 99   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)   inline (hot)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                    @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                      @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 104   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   inline (hot)
               !              @ 9   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   inline (hot)
                              @ 12   java.lang.Character::isWhitespace (5 bytes)   inline (hot)
                                @ 1   java.lang.Character::isWhitespace (9 bytes)   inline (hot)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   inline (hot)
                                  @ 5   java.lang.CharacterDataLatin1::isWhitespace (23 bytes)   inline (hot)
                                    @ 2   java.lang.CharacterDataLatin1::getProperties (11 bytes)   inline (hot)
                              @ 93   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                @ 13   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1   sun.reflect.annotation.AnnotationParser$1::run (40 bytes)   callee is too large
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   java.lang.reflect.WeakCache::expungeStaleEntries (31 bytes)
               !m               @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 24   java.lang.reflect.WeakCache$CacheKey::expungeFrom (60 bytes)   callee is too large
                              @ 14   java.lang.reflect.WeakCache$CacheKey::valueOf (20 bytes)
                                @ 16   java.lang.reflect.WeakCache$CacheKey::<init> (15 bytes)
                                  @ 3   java.lang.ref.WeakReference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                                  @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 23   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 47   java.util.concurrent.ConcurrentHashMap::<init> (5 bytes)
                                @ 1   java.util.AbstractMap::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 53   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 78   java.util.function.BiFunction::apply (0 bytes)   no static binding
                              @ 83   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 92   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 112   java.util.function.Supplier::get (0 bytes)   not inlineable
                              @ 143   java.lang.reflect.WeakCache$Factory::<init> (32 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 159   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 189   java.util.concurrent.ConcurrentMap::replace (0 bytes)   no static binding
                              @ 208   java.util.concurrent.ConcurrentMap::get (10 bytes)   no static binding
                              @ 17   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                               \-> TypeProfile (5327/5327 counts) = java/lang/String
                              @ 192   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   inline (hot)
                                @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                                @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed < MinInliningThreshold times
                                @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   already compiled into a medium method
                                @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   already compiled into a medium method
                                @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   inline (hot)
                                @ 23   java.lang.Thread::yield (0 bytes)   native method
                                @ 38   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 1   sun.reflect.generics.parser.SignatureParser::parseIdentifier (115 bytes)   callee is too large
               !              @ 6   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 19   java.lang.StringBuilder::<init> (18 bytes)
                                @ 2   java.lang.String::length (6 bytes)
                                @ 8   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
               !              @ 24   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 33   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                              @ 39   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   sun.reflect.generics.parser.SignatureParser::parseIdentifier (115 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 56   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
               !              @ 61   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 98   sun.reflect.generics.tree.SimpleClassTypeSignature::make (11 bytes)
                                @ 7   sun.reflect.generics.tree.SimpleClassTypeSignature::<init> (20 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 105   sun.reflect.generics.parser.SignatureParser::parseTypeArguments (109 bytes)   callee is too large
                              @ 108   sun.reflect.generics.tree.SimpleClassTypeSignature::make (11 bytes)
                                @ 7   sun.reflect.generics.tree.SimpleClassTypeSignature::<init> (20 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 117   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 122   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
               !              @ 126   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 129   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 132   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 135   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
                              @ 4   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 30   sun.reflect.annotation.AnnotationInvocationHandler::<init> (56 bytes)   callee is too large
               !              @ 33   java.lang.reflect.Proxy::newProxyInstance (174 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 10   java.lang.Class::getInterfaces (41 bytes)   callee is too large
                              @ 15   java.lang.Class::isAnnotation (17 bytes)
                                @ 1   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 41  java/lang/annotation/AnnotationFormatError::<init> (not loaded)   not inlineable
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   java.lang.Object::clone (0 bytes)   no static binding
                              @ 13   java.lang.System::getSecurityManager (4 bytes)
                              @ 23   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 28   java.lang.reflect.Proxy::checkProxyAccess (43 bytes)   callee is too large
                              @ 33   java.lang.reflect.Proxy::getProxyClass0 (29 bytes)
                                @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 22   java.lang.reflect.WeakCache::get (221 bytes)   callee is too large
                              @ 43   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 48   java.lang.reflect.Proxy::checkNewProxyPermission (142 bytes)   callee is too large
                              @ 56   java.lang.Class::getConstructor (16 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 12   java.lang.Class::getConstructor0 (103 bytes)   callee is too large
                              @ 66   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 69   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 81  java/lang/reflect/Proxy$1::<init> (not loaded)   not inlineable
                              @ 84   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 98   java.lang.reflect.Constructor::newInstance (87 bytes)   callee is too large
                              @ 110   java.lang.Throwable::toString (45 bytes)   callee is too large
                              @ 115  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 123   java.lang.reflect.InvocationTargetException::getCause (5 bytes)   not inlineable
                              @ 148   java.lang.Throwable::toString (45 bytes)   no static binding
                              @ 153  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 165   java.lang.Throwable::toString (45 bytes)   callee is too large
                              @ 170  java/lang/InternalError::<init> (not loaded)   not inlineable
                              @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 22   java.lang.reflect.WeakCache::get (221 bytes)   callee is too large
              s               @ 1   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                              @ 4   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                @ 1   java.util.Map::values (0 bytes)   no static binding
                                @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 9   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor::lambda$buildResourceMetadata$0 (181 bytes)   callee is too large
                              @ 10   java.lang.reflect.AccessibleObject::isAnnotationPresent (6 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                  @ 2   java.lang.reflect.Field::getAnnotation (23 bytes)
                                    @ 1   java.util.Objects::requireNonNull (14 bytes)
                                      @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s                     @ 7   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                                    @ 11   java.util.Map::get (0 bytes)   no static binding
                                    @ 16   java.lang.Class::cast (27 bytes)   callee is too large
                              @ 17   java.lang.reflect.Field::getModifiers (5 bytes)
                              @ 20  java/lang/reflect/Modifier::isStatic (not loaded)   not inlineable
                              @ 32   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 45  org/springframework/context/annotation/CommonAnnotationBeanPostProcessor$WebServiceRefElement::<init> (not loaded)   not inlineable
                              @ 48   java.util.List::add (0 bytes)   no static binding
                              @ 67   java.lang.reflect.AccessibleObject::isAnnotationPresent (6 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                  @ 2   java.lang.reflect.Field::getAnnotation (23 bytes)
                                    @ 1   java.util.Objects::requireNonNull (14 bytes)
                                      @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
              s                     @ 7   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                                    @ 11   java.util.Map::get (0 bytes)   no static binding
                                    @ 16   java.lang.Class::cast (27 bytes)   callee is too large
                              @ 74   java.lang.reflect.Field::getModifiers (5 bytes)
                              @ 77  java/lang/reflect/Modifier::isStatic (not loaded)   not inlineable
                              @ 89   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 102  org/springframework/context/annotation/CommonAnnotationBeanPostProcessor$EjbRefElement::<init> (not loaded)   not inlineable
                              @ 105   java.util.List::add (0 bytes)   no static binding
                              @ 117   java.lang.reflect.AccessibleObject::isAnnotationPresent (6 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)
                                  @ 2   java.lang.reflect.Field::getAnnotation (23 bytes)
                                    @ 1   java.util.Objects::requireNonNull (14 bytes)
              s                     @ 7   java.lang.reflect.Field::declaredAnnotations (59 bytes)   callee is too large
                                    @ 11   java.util.Map::get (0 bytes)   no static binding
                                    @ 16   java.lang.Class::cast (27 bytes)   callee is too large
                              @ 124   java.lang.reflect.Field::getModifiers (5 bytes)
                              @ 127  java/lang/reflect/Modifier::isStatic (not loaded)   not inlineable
                              @ 139   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 148   java.lang.reflect.Field::getType (5 bytes)
                              @ 151   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 154   java.util.Set::contains (0 bytes)   no static binding
                              @ 171  org/springframework/context/annotation/CommonAnnotationBeanPostProcessor$ResourceElement::<init> (not loaded)   not inlineable
                              @ 174   java.util.List::add (0 bytes)   no static binding
                              @ 6   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$29/1636588948::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$30/95685867::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 8   java.util.Collection::size (0 bytes)   no static binding
                              @ 13   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 21   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 28   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 37   java.util.Iterator::next (0 bytes)   no static binding
                              @ 49   org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement::getMember (5 bytes)   not inlineable
               !m             @ 57   org.springframework.beans.factory.support.RootBeanDefinition::isExternallyManagedConfigMember (40 bytes)   callee is too large
               !m             @ 66   org.springframework.beans.factory.support.RootBeanDefinition::registerExternallyManagedConfigMember (48 bytes)   callee is too large
                              @ 72   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 81   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 96  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 101  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 108   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 111  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 116  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 121  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 124  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 127   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 1   org.springframework.util.ObjectUtils::isEmpty (15 bytes)
                              @ 13   org.springframework.beans.SimpleTypeConverter::<init> (21 bytes)
                                @ 1   org.springframework.beans.TypeConverterSupport::<init> (5 bytes)
                                  @ 1   org.springframework.beans.PropertyEditorRegistrySupport::<init> (15 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 10   org.springframework.beans.TypeConverterDelegate::<init> (7 bytes)
                                  @ 3   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 17   org.springframework.beans.PropertyEditorRegistrySupport::registerDefaultEditors (6 bytes)
                              @ 44   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 60   org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver::isQualifier (52 bytes)   callee is too large
               !              @ 71   org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver::checkQualifier (403 bytes)   callee is too large
                              @ 96   java.lang.Class::getAnnotations (11 bytes)
                                @ 1   java.lang.Class::annotationData (44 bytes)   callee is too large
                                @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)
                                  @ 1   java.util.Map::values (0 bytes)   no static binding
                                  @ 9   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 125   java.lang.annotation.Annotation::annotationType (0 bytes)   not inlineable
                              @ 135   org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver::isQualifier (52 bytes)   callee is too large
                              @ 151   org.springframework.core.annotation.AnnotationUtils::getValue (7 bytes)
               !                @ 3   org.springframework.core.annotation.AnnotationUtils::getValue (101 bytes)   callee is too large
                              @ 154   org.springframework.util.StringUtils::isEmpty (19 bytes)
                                @ 7   java.lang.String::equals (81 bytes)   callee is too large
               !              @ 165   org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver::checkQualifier (403 bytes)   callee is too large
                              @ 16   org.springframework.util.ClassUtils::isAssignableValue (34 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 12   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 15   org.springframework.util.ClassUtils::isAssignable (81 bytes)   callee is too large
                                @ 22   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 39   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 42   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 56   java.lang.Object::equals (11 bytes)   no static binding
                              @ 76   org.springframework.util.ClassUtils::isAssignable (81 bytes)   callee is too large
                              @ 88   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 104   java.lang.Class::isInterface (0 bytes)   native method
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 12   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 23   java.util.Map::get (0 bytes)   no static binding
                              @ 36   org.springframework.beans.factory.annotation.InjectionMetadata::needsRefresh (18 bytes)
                              @ 56   java.util.Map::get (0 bytes)   no static binding
                              @ 69   org.springframework.beans.factory.annotation.InjectionMetadata::needsRefresh (18 bytes)
                              @ 83   org.springframework.beans.factory.annotation.InjectionMetadata::clear (67 bytes)   callee is too large
                              @ 88   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor::buildResourceMetadata (79 bytes)   callee is too large
                              @ 101   java.util.Map::put (0 bytes)   no static binding
                              @ 3   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 18   java.lang.ThreadLocal::set (30 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                                @ 17   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                  @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                                @ 26   java.lang.ThreadLocal::createMap (14 bytes)
                                  @ 7   java.lang.ThreadLocal$ThreadLocalMap::<init> (53 bytes)   callee is too large
                              @ 27   java.lang.ThreadLocal::remove (18 bytes)
                                @ 1   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.ThreadLocal::getMap (5 bytes)
                                @ 14   java.lang.ThreadLocal$ThreadLocalMap::access$200 (6 bytes)
                                  @ 2   java.lang.ThreadLocal$ThreadLocalMap::remove (68 bytes)   callee is too large
                              @ 1   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 12   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 23   java.util.Map::get (0 bytes)   no static binding
                              @ 36   org.springframework.beans.factory.annotation.InjectionMetadata::needsRefresh (18 bytes)
                              @ 56   java.util.Map::get (0 bytes)   no static binding
                              @ 69   org.springframework.beans.factory.annotation.InjectionMetadata::needsRefresh (18 bytes)
                              @ 83   org.springframework.beans.factory.annotation.InjectionMetadata::clear (67 bytes)   callee is too large
                              @ 88   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::buildAutowiringMetadata (79 bytes)   callee is too large
                              @ 101   java.util.Map::put (0 bytes)   no static binding
               !              @ 24   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 6   java.nio.Buffer::nextGetIndex (31 bytes)   inline (hot)
                              @ 9   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                              @ 35   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
                              @ 40   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                              @ 48   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 54   sun.reflect.generics.parser.SignatureParser::parsePackageNameAndSimpleClassTypeSignature (139 bytes)   callee is too large
                              @ 57   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 65   sun.reflect.generics.parser.SignatureParser::parseClassTypeSignatureSuffix (29 bytes)
               !                @ 1   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                                @ 10   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                                @ 16   sun.reflect.generics.parser.SignatureParser::parseSimpleClassTypeSignature (93 bytes)   callee is too large
                                @ 19   java.util.ArrayList::add (29 bytes)
                                  @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                    @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                      @ 10   java.lang.Math::max (11 bytes)
                                    @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   callee is too large
               !              @ 69   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 82   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 87   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
               !              @ 91   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 94   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 99   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 102   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 105   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
                              @ 110   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                              @ 114   sun.reflect.generics.tree.ClassTypeSignature::make (9 bytes)
                                @ 5   sun.reflect.generics.tree.ClassTypeSignature::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 1   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 41   sun.reflect.generics.parser.SignatureParser::parseClassTypeSignature (118 bytes)   callee is too large
                              @ 46   sun.reflect.generics.parser.SignatureParser::parseTypeVariableSignature (93 bytes)   callee is too large
                              @ 55   sun.reflect.generics.parser.SignatureParser::parseArrayTypeSignature (28 bytes)
               !                @ 1   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                                @ 12   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
                                @ 17   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                                @ 21   sun.reflect.generics.parser.SignatureParser::parseTypeSignature (130 bytes)   callee is too large
                                @ 24  sun/reflect/generics/tree/ArrayTypeSignature::make (not loaded)   not inlineable
                              @ 62   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
                              @ 69   sun.reflect.generics.parser.SignatureParser::error (39 bytes)   callee is too large
               !              @ 1   sun.reflect.generics.parser.SignatureParser::current (40 bytes)   callee is too large
                              @ 10   sun.reflect.generics.parser.SignatureParser::advance (37 bytes)   callee is too large
                              @ 16   sun.reflect.generics.parser.SignatureParser::parseSimpleClassTypeSignature (93 bytes)   callee is too large
                              @ 19   java.util.List::add (0 bytes)   no static binding
                              @ 5   sun.reflect.generics.tree.ClassTypeSignature::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::lambda$buildAutowiringMetadata$1 (87 bytes)   callee is too large
                              @ 2   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::findAutowiredAnnotation (57 bytes)   callee is too large
                              @ 11   java.lang.reflect.Field::getModifiers (5 bytes)
                              @ 14   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 24   org.apache.commons.logging.LogAdapter$JavaUtilLog::isInfoEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 40  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 45  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 49  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 52  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 55   org.apache.commons.logging.LogAdapter$JavaUtilLog::info (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 63   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::determineRequiredStatus (32 bytes)
                                @ 5   java.util.HashMap::containsKey (18 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                                @ 20   org.springframework.core.annotation.AnnotationAttributes::getBoolean (14 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                                  @ 10   java.lang.Boolean::booleanValue (5 bytes)
                              @ 77  org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement::<init> (not loaded)   not inlineable
                              @ 80   java.util.List::add (0 bytes)   no static binding
                              @ 13   java.lang.reflect.Constructor::getConstructorAccessor (5 bytes)
                              @ 33   sun.reflect.ReflectionFactory::newConstructorAccessor (132 bytes)   callee is too large
                              @ 39   java.lang.reflect.Constructor::setConstructorAccessor (21 bytes)
                                @ 17   java.lang.reflect.Constructor::setConstructorAccessor (21 bytes)
                                  @ 17   java.lang.reflect.Constructor::setConstructorAccessor (21 bytes)   recursive inlining too deep
                              @ 4   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 14   java.lang.Object::equals (11 bytes)   no static binding
                              @ 32   java.util.Set::contains (0 bytes)   no static binding
                              @ 4   java.lang.reflect.AnnotatedElement::getDeclaredAnnotations (0 bytes)   no static binding
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)
                                @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)
                                  @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   callee is too large
                                @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)
                                  @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                  @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
               !                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   callee is too large
                              @ 6   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 24   sun.reflect.ReflectionFactory::copyField (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyField (5 bytes)
                                  @ 1   java.lang.reflect.Field::copy (76 bytes)   callee is too large
                              @ 1   java.util.AbstractList$Itr::checkForComodification (23 bytes)   inline (hot)
                              @ 14   java.util.Arrays$ArrayList::get (7 bytes)   inline (hot)
                               \-> TypeProfile (5122/5122 counts) = java/util/Arrays$ArrayList
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 12   java.lang.Class::getConstructor0 (103 bytes)   callee is too large
                              @ 1   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 32   java.lang.String::format (16 bytes)
                                @ 4  java/util/Formatter::<init> (not loaded)   not inlineable
                                @ 9  java/util/Formatter::format (not loaded)   not inlineable
                                @ 12  java/util/Formatter::toString (not loaded)   not inlineable
                              @ 39   java.lang.IllegalArgumentException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::clone (0 bytes)   no static binding
                              @ 8   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 26   sun.reflect.ReflectionFactory::copyConstructor (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyConstructor (5 bytes)
                                  @ 1   java.lang.reflect.Constructor::copy (72 bytes)   callee is too large
                              @ 60   java.util.TimSort::countRunAndMakeAscending (128 bytes)   callee is too large
                              @ 73   java.util.TimSort::binarySort (223 bytes)   callee is too large
                              @ 89   java.util.TimSort::<init> (184 bytes)   callee is too large
                              @ 96   java.util.TimSort::minRunLength (43 bytes)   callee is too large
                              @ 105   java.util.TimSort::countRunAndMakeAscending (128 bytes)   callee is too large
                              @ 144   java.util.TimSort::binarySort (223 bytes)   callee is too large
                              @ 156   java.util.TimSort::pushRun (31 bytes)
                              @ 161   java.util.TimSort::mergeCollapse (101 bytes)   callee is too large
                              @ 202   java.util.TimSort::mergeForceCollapse (50 bytes)   callee is too large
                              @ 16   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 39   java.lang.ThreadLocal$ThreadLocalMap::expungeStaleEntry (146 bytes)   callee is too large
                              @ 49   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 13   org.springframework.asm.ClassVisitor::visitSource (17 bytes)   no static binding
                              @ 2   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 25   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 28   java.lang.Class::getSimpleName (120 bytes)   callee is too large
                              @ 35   java.lang.Class::getSimpleName (120 bytes)   callee is too large
                              @ 46   java.lang.String::format (16 bytes)
                                @ 4  java/util/Formatter::<init> (not loaded)   not inlineable
                                @ 9  java/util/Formatter::format (not loaded)   not inlineable
                                @ 12  java/util/Formatter::toString (not loaded)   not inlineable
                              @ 49   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.util.concurrent.CopyOnWriteArrayList::size (6 bytes)
                                @ 1   java.util.concurrent.CopyOnWriteArrayList::getArray (5 bytes)
                              @ 5   java.util.Map::remove (0 bytes)   no static binding
                              @ 2   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 19   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                              @ 24   java.util.Map::computeIfAbsent (45 bytes)   no static binding
                              @ 37   java.util.Set::add (0 bytes)   no static binding
                              @ 76   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                              @ 81   java.util.Map::computeIfAbsent (45 bytes)   no static binding
                              @ 94   java.util.Set::add (0 bytes)   no static binding
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 7   org.springframework.util.ReflectionUtils::makeAccessible (36 bytes)   callee is too large
                              @ 10   org.springframework.core.KotlinDetector::isKotlinReflectPresent (4 bytes)
                              @ 36   java.lang.reflect.Constructor::newInstance (87 bytes)   callee is too large
                              @ 49   org.springframework.beans.BeanInstantiationException::<init> (58 bytes)   not inlineable
                              @ 62   org.springframework.beans.BeanInstantiationException::<init> (58 bytes)   not inlineable
                              @ 75   org.springframework.beans.BeanInstantiationException::<init> (58 bytes)   not inlineable
                              @ 88   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
                              @ 91   org.springframework.beans.BeanInstantiationException::<init> (58 bytes)   not inlineable
                              @ 24   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 34   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 43   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 53   java.util.Iterator::next (0 bytes)   no static binding
                              @ 66   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 81  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 86  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 90  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 95  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 100  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 103  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 106   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
               !              @ 116   org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement::inject (91 bytes)   not inlineable
                              @ 14   org.springframework.core.MethodParameter::getDeclaringClass (8 bytes)
                                @ 4   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 2   org.springframework.beans.PropertyValues::isEmpty (0 bytes)   no static binding
                              @ 11   java.lang.System::getSecurityManager (4 bytes)
                              @ 29   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 32   org.springframework.beans.BeanWrapperImpl::setSecurityContext (6 bytes)
                              @ 55   org.springframework.beans.MutablePropertyValues::isConverted (5 bytes)
                              @ 64   org.springframework.beans.AbstractPropertyAccessor::setPropertyValues (8 bytes)
               !                @ 4   org.springframework.beans.AbstractPropertyAccessor::setPropertyValues (156 bytes)   callee is too large
                              @ 77   org.springframework.beans.factory.config.BeanDefinition::getResourceDescription (0 bytes)   no static binding
                              @ 88   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 94   org.springframework.beans.MutablePropertyValues::getPropertyValueList (5 bytes)
                              @ 104   org.springframework.beans.PropertyValues::getPropertyValues (0 bytes)   no static binding
                              @ 109   java.util.Arrays::asList (9 bytes)
                                @ 5   java.util.Arrays$ArrayList::<init> (16 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 115   org.springframework.beans.factory.support.AbstractBeanFactory::getCustomTypeConverter (5 bytes)
                              @ 137   org.springframework.beans.factory.support.BeanDefinitionValueResolver::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 148   java.util.List::size (0 bytes)   no static binding
                              @ 153   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 163   java.util.List::iterator (0 bytes)   no static binding
                              @ 172   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 182   java.util.Iterator::next (0 bytes)   no static binding
                              @ 194  org/springframework/beans/PropertyValue::isConverted (not loaded)   not inlineable
                              @ 204   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                              @ 58   sun.misc.VM::addFinalRefCount (24 bytes)   inline (hot)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 215  org/springframework/beans/PropertyValue::getName (not loaded)   not inlineable
                              @ 222  org/springframework/beans/PropertyValue::getValue (not loaded)   not inlineable
               !              @ 233   org.springframework.beans.factory.support.BeanDefinitionValueResolver::resolveValueIfNecessary (478 bytes)   callee is too large
                              @ 245   org.springframework.beans.PropertyAccessor::isWritableProperty (0 bytes)   not inlineable
                              @ 255  org/springframework/beans/PropertyAccessorUtils::isNestedOrIndexedProperty (not loaded)   not inlineable
                              @ 281   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::convertForProperty (51 bytes)   callee is too large
                              @ 302  org/springframework/beans/PropertyValue::setConvertedValue (not loaded)   not inlineable
                              @ 309   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 336  org/springframework/beans/factory/config/TypedStringValue::isDynamic (not loaded)   not inlineable
                              @ 352   org.springframework.util.ObjectUtils::isArray (20 bytes)
                                @ 5   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 8   java.lang.Class::isArray (0 bytes)   native method
                              @ 362  org/springframework/beans/PropertyValue::setConvertedValue (not loaded)   not inlineable
                              @ 369   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 391  org/springframework/beans/PropertyValue::<init> (not loaded)   not inlineable
                              @ 394   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 415   org.springframework.beans.MutablePropertyValues::setConverted (6 bytes)
                              @ 425   org.springframework.beans.MutablePropertyValues::<init> (29 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 428   org.springframework.beans.AbstractPropertyAccessor::setPropertyValues (8 bytes)
               !                @ 4   org.springframework.beans.AbstractPropertyAccessor::setPropertyValues (156 bytes)   callee is too large
                              @ 443   org.springframework.beans.factory.config.BeanDefinition::getResourceDescription (0 bytes)   no static binding
                              @ 454   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 20   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 28   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 31   org.springframework.beans.BeanWrapperImpl::setIntrospectionClass (24 bytes)
                                @ 11  org/springframework/beans/CachedIntrospectionResults::getBeanClass (not loaded)   not inlineable
                              @ 20   org.springframework.asm.ClassVisitor::visit (24 bytes)   no static binding
                              @ 5   org.springframework.core.MethodParameter$$Lambda$22/1214133948::<init> (10 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 3   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   callee is too large
                              @ 4   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::postProcessMergedBeanDefinition (14 bytes)
               !m               @ 2   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::findLifecycleMetadata (87 bytes)   callee is too large
                                @ 10   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata::checkConfigMembers (300 bytes)   callee is too large
               !m             @ 11   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor::findResourceMetadata (124 bytes)   callee is too large
                              @ 19   org.springframework.beans.factory.annotation.InjectionMetadata::checkConfigMembers (141 bytes)   callee is too large
                              @ 4   java.nio.HeapByteBuffer::get (14 bytes)   inline (hot)
                               \-> TypeProfile (6144/6144 counts) = java/nio/HeapByteBuffer
                                @ 6   java.nio.Buffer::nextGetIndex (31 bytes)   inline (hot)
                                @ 9   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                              @ 95   sun.reflect.annotation.AnnotationParser::parseConst (208 bytes)   inline (hot)
                                @ 1   java.nio.HeapByteBuffer::getShort (18 bytes)   inline (hot)
                                  @ 4   java.nio.Buffer::nextGetIndex (38 bytes)   inline (hot)
                                  @ 7   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                                  @ 14   java.nio.Bits::getShort (18 bytes)   inline (hot)
                                    @ 6   java.nio.Bits::getShortB (16 bytes)   inline (hot)
                                      @ 2   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                      @ 9   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                      @ 12   java.nio.Bits::makeShort (12 bytes)   inline (hot)
                                @ 177   sun.reflect.ConstantPool::getUTF8At (10 bytes)   inline (hot)
                                  @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                                @ 160   sun.reflect.ConstantPool::getIntAt (10 bytes)   inline (hot)
                                  @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                                @ 171   java.lang.Boolean::valueOf (14 bytes)   inline (hot)
                                @ 150   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                @ 154   java.lang.Short::valueOf (33 bytes)   call site not reached
                                @ 141   sun.reflect.ConstantPool::getLongAt (10 bytes)   never executed
                                @ 144   java.lang.Long::valueOf (36 bytes)   call site not reached
                                @ 132   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                @ 135   java.lang.Integer::valueOf (32 bytes)   call site not reached
                                @ 123   sun.reflect.ConstantPool::getFloatAt (10 bytes)   never executed
                                @ 126   java.lang.Float::valueOf (9 bytes)   call site not reached
                                @ 114   sun.reflect.ConstantPool::getDoubleAt (10 bytes)   never executed
                                @ 117   java.lang.Double::valueOf (9 bytes)   call site not reached
                                @ 104   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                @ 108   java.lang.Character::valueOf (21 bytes)   call site not reached
                                @ 94   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                @ 98   java.lang.Byte::valueOf (10 bytes)   call site not reached
               !              @ 56   sun.reflect.annotation.AnnotationParser::parseEnumValue (152 bytes)   too big
               !              @ 63   sun.reflect.annotation.AnnotationParser::parseClassValue (64 bytes)   too big
                              @ 87   sun.reflect.annotation.AnnotationParser::parseArray (226 bytes)   too big
                              @ 75   sun.reflect.annotation.AnnotationParser::parseAnnotation (9 bytes)   never executed
                              @ 111   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 4   org.springframework.beans.factory.config.DependencyDescriptor::isEager (5 bytes)
                              @ 7   org.springframework.beans.factory.BeanFactoryUtils::beanNamesForTypeIncludingAncestors (75 bytes)   callee is too large
                              @ 19   java.util.LinkedHashMap::<init> (11 bytes)
                                @ 2   java.util.HashMap::<init> (8 bytes)
                                  @ 4   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 28   java.util.Map::entrySet (0 bytes)   no static binding
                              @ 33   java.util.Set::iterator (0 bytes)   no static binding
                              @ 42   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 52   java.util.Iterator::next (0 bytes)   no static binding
                              @ 64   java.util.Map$Entry::getKey (0 bytes)   not inlineable
                              @ 77   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 85   java.util.Map$Entry::getValue (0 bytes)   not inlineable
                              @ 95   org.springframework.beans.factory.support.AutowireUtils::resolveAutowiringValue (70 bytes)   callee is too large
                              @ 103   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 113   org.springframework.util.ObjectUtils::identityToString (40 bytes)   callee is too large
                              @ 118   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 160   org.springframework.beans.factory.support.DefaultListableBeanFactory::isSelfReference (45 bytes)   callee is too large
                              @ 170   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (11 bytes)
                                @ 4   org.springframework.beans.factory.support.DefaultListableBeanFactory::getAutowireCandidateResolver (5 bytes)
                                @ 7   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (106 bytes)   callee is too large
                              @ 183   org.springframework.beans.factory.support.DefaultListableBeanFactory::addCandidateEntry (112 bytes)   callee is too large
                              @ 194   java.util.HashMap::isEmpty (13 bytes)
                              @ 204   org.springframework.beans.factory.support.DefaultListableBeanFactory::indicatesMultipleBeans (40 bytes)   callee is too large
                              @ 210   org.springframework.beans.factory.config.DependencyDescriptor::forFallbackMatch (10 bytes)
                                @ 6   org.springframework.beans.factory.config.DependencyDescriptor$1::<init> (11 bytes)   not inlineable
                              @ 245   org.springframework.beans.factory.support.DefaultListableBeanFactory::isSelfReference (45 bytes)   callee is too large
                              @ 256   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (11 bytes)
                                @ 4   org.springframework.beans.factory.support.DefaultListableBeanFactory::getAutowireCandidateResolver (5 bytes)
                                @ 7   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (106 bytes)   callee is too large
                              @ 268   org.springframework.beans.factory.support.DefaultListableBeanFactory::getAutowireCandidateResolver (5 bytes)
                              @ 272   org.springframework.beans.factory.support.AutowireCandidateResolver::hasQualifier (2 bytes)   no static binding
                              @ 287   org.springframework.beans.factory.support.DefaultListableBeanFactory::addCandidateEntry (112 bytes)   callee is too large
                              @ 298   java.util.HashMap::isEmpty (13 bytes)
                              @ 341   org.springframework.beans.factory.support.DefaultListableBeanFactory::isSelfReference (45 bytes)   callee is too large
                              @ 357   java.lang.String::equals (81 bytes)   callee is too large
                              @ 368   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (11 bytes)
                                @ 4   org.springframework.beans.factory.support.DefaultListableBeanFactory::getAutowireCandidateResolver (5 bytes)
                                @ 7   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (106 bytes)   callee is too large
                              @ 381   org.springframework.beans.factory.support.DefaultListableBeanFactory::addCandidateEntry (112 bytes)   callee is too large
                              @ 9   java.lang.reflect.Proxy$KeyFactory::apply (66 bytes)   callee is too large
                              @ 53   java.lang.reflect.Proxy::access$200 (4 bytes)
                              @ 35   java.lang.reflect.Proxy$Key1::<init> (14 bytes)
                                @ 2   java.lang.ref.WeakReference::<init> (6 bytes)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   callee is too large
                                @ 7   java.lang.Object::hashCode (0 bytes)   native method
                              @ 49  java/lang/reflect/Proxy$Key2::<init> (not loaded)   not inlineable
                              @ 62  java/lang/reflect/Proxy$KeyX::<init> (not loaded)   not inlineable
                              @ 2   java.lang.ref.WeakReference::<init> (6 bytes)
                                @ 2   java.lang.ref.Reference::<init> (7 bytes)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 7   java.lang.Object::hashCode (0 bytes)   native method
                              @ 18   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 28   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 38   org.springframework.asm.ClassReader::readInt (52 bytes)   inline (hot)
                              @ 1058   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1064   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1034   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 1040   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1010   org.springframework.asm.ClassReader::readShort (27 bytes)   call site not reached
                              @ 1016   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1311   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1317   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1326   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1350   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1356   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1229   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1235   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1245   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1253   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1278   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 1284   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 1404   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1533   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1554   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 1564   org.springframework.asm.ClassReader::readInt (52 bytes)   inline (hot)
                              @ 1576   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 1602   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1621   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1631   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)   inline (hot)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   inline (hot)
                                  @ 26   org.springframework.asm.Label::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1639   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1652   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)   inline (hot)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   inline (hot)
                                  @ 26   org.springframework.asm.Label::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1668   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 1685   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 1707   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1726   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1736   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 1749   org.springframework.asm.ClassReader::createDebugLabel (23 bytes)   inline (hot)
                                @ 9   org.springframework.asm.ClassReader::readLabel (34 bytes)   inline (hot)
                                  @ 26   org.springframework.asm.Label::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1759   org.springframework.asm.Label::addLineNumber (89 bytes)   inline (hot)
                                @ 73   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 2117   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)   inline (hot)
                              @ 2129   org.springframework.asm.ClassReader::getTypeAnnotationBytecodeOffset (34 bytes)   inline (hot)
                              @ 2203   org.springframework.asm.Label::accept (65 bytes)   inline (hot)
                              @ 3528   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3415   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 3484   org.springframework.asm.ClassReader::createLabel (21 bytes)   never executed
                              @ 3369   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3340   org.springframework.asm.ClassReader::readShort (27 bytes)   call site not reached
                              @ 4300   org.springframework.asm.ClassReader::readClass (7 bytes)   call site not reached
                              @ 3572   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 3580   org.springframework.asm.ClassReader::readShort (27 bytes)   call site not reached
                              @ 3600   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 3271   org.springframework.asm.MethodVisitor::visitInsn (16 bytes)   inline (hot)
                              @ 3271   org.springframework.asm.MethodVisitor::visitInsn (16 bytes)   inline (hot)
                               \-> TypeProfile (353/2048 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                               \-> TypeProfile (1695/2048 counts) = org/springframework/core/type/classreading/MethodMetadataReadingVisitor
                                @ 12   org.springframework.asm.MethodWriter::visitInsn (115 bytes)   inline (hot)
                                @ 12   org.springframework.cglib.core.ClassEmitter$2::visitInsn (13 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (385/387 counts) = org/springframework/asm/MethodWriter
                                  @ 16   org.springframework.asm.ByteVector::putByte (39 bytes)   too big
                                  @ 111   org.springframework.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor (94 bytes)   too big
                                @ 12   org.springframework.asm.MethodWriter::visitInsn (115 bytes)   inline (hot)
                                @ 12   org.springframework.cglib.core.ClassEmitter$2::visitInsn (13 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (385/387 counts) = org/springframework/asm/MethodWriter
                                  @ 16   org.springframework.asm.ByteVector::putByte (39 bytes)   too big
                                  @ 111   org.springframework.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor (94 bytes)   too big
                              @ 4252   org.springframework.asm.ClassReader::readClass (7 bytes)   call site not reached
                              @ 4098   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4113   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4124   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a medium method
                              @ 4136   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a medium method
                              @ 4148   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4158   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4163   org.springframework.asm.ClassReader::readConst (276 bytes)   too big
                              @ 4176   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4206   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 4211   org.springframework.asm.ClassReader::readConst (276 bytes)   too big
                              @ 3960   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 3975   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 3986   org.springframework.asm.ClassReader::readClass (7 bytes)   inline (hot)
                                @ 3   org.springframework.asm.ClassReader::readStringish (16 bytes)   inline (hot)
                                  @ 7   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                                  @ 12   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 3996   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 4008   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 4030   org.springframework.asm.MethodVisitor::visitFieldInsn (20 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (1/1 counts) = org/springframework/core/type/classreading/MethodMetadataReadingVisitor
                              @ 4066   org.springframework.asm.MethodVisitor::visitMethodInsn (68 bytes)   inline (hot)
                              @ 4066   org.springframework.asm.MethodVisitor::visitMethodInsn (68 bytes)   inline (hot)
                               \-> TypeProfile (353/2048 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                               \-> TypeProfile (1695/2048 counts) = org/springframework/core/type/classreading/MethodMetadataReadingVisitor
                                @ 64   org.springframework.asm.MethodWriter::visitMethodInsn (191 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (146/150 counts) = org/springframework/asm/MethodWriter
                                @ 64   org.springframework.asm.MethodWriter::visitMethodInsn (191 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (146/150 counts) = org/springframework/asm/MethodWriter
                              @ 3743   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3755   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3793   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3810   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3630   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3642   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3653   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3695   org.springframework.asm.ClassReader::readInt (52 bytes)   too big
                              @ 3295   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   inline (hot)
                              @ 3295   org.springframework.asm.MethodVisitor::visitVarInsn (17 bytes)   inline (hot)
                               \-> TypeProfile (706/4097 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                               \-> TypeProfile (3391/4097 counts) = org/springframework/core/type/classreading/MethodMetadataReadingVisitor
                              @ 3934   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   call site not reached
                              @ 3939   org.springframework.asm.ClassReader::readConst (276 bytes)   too big
                              @ 3915   org.springframework.asm.ClassReader::readConst (276 bytes)   too big
                              @ 3888   org.springframework.asm.ClassReader::readShort (27 bytes)   call site not reached
                              @ 4534   org.springframework.asm.MethodVisitor::visitLabel (16 bytes)   inline (hot)
                               \-> TypeProfile (353/353 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                              @ 4640   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 4662   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 4672   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 4684   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 4697   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a big method
                              @ 4708   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 4803   org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor::visitLocalVariable (45 bytes)   inline (hot)
                               \-> TypeProfile (706/706 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                              @ 5081   org.springframework.asm.MethodVisitor::visitMaxs (17 bytes)   inline (hot)
                              @ 5081   org.springframework.asm.MethodVisitor::visitMaxs (17 bytes)   inline (hot)
                               \-> TypeProfile (353/2048 counts) = org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor
                               \-> TypeProfile (1695/2048 counts) = org/springframework/core/type/classreading/MethodMetadataReadingVisitor
                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 25   java.util.Set::contains (0 bytes)   no static binding
                              @ 35   org.springframework.beans.factory.support.AbstractBeanFactory::clearMergedBeanDefinition (12 bytes)
                                @ 5   java.util.Map::remove (0 bytes)   no static binding
                              @ 43   java.util.Set::add (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   java.lang.String::equals (81 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 18   java.util.Map::get (0 bytes)   no static binding
                              @ 44   org.springframework.beans.factory.BeanCreationNotAllowedException::<init> (7 bytes)   not inlineable
                              @ 52   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 68  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 73  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 77  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 82  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 85  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 88   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 95   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::beforeSingletonCreation (36 bytes)   callee is too large
                              @ 125   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 132   org.springframework.beans.factory.ObjectFactory::getObject (0 bytes)   not inlineable
                              @ 167   java.util.Map::get (0 bytes)   no static binding
                              @ 194   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::afterSingletonCreation (59 bytes)   callee is too large
                              @ 211   java.util.Set::iterator (0 bytes)   no static binding
                              @ 220   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 230   java.util.Iterator::next (0 bytes)   no static binding
                              @ 244   org.springframework.beans.factory.BeanCreationException::addRelatedCause (30 bytes)   not inlineable
                              @ 267   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::afterSingletonCreation (59 bytes)   callee is too large
                              @ 154   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::afterSingletonCreation (59 bytes)   callee is too large
               !m             @ 282   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::addSingleton (65 bytes)   callee is too large
                              @ 10   java.lang.reflect.Method::getReturnType (5 bytes)   accessor
                              @ 13   sun.reflect.annotation.AnnotationType::invocationHandlerReturnType (82 bytes)   inline (hot)
                              @ 22   java.nio.ByteBuffer::wrap (8 bytes)   inline (hot)
               !                @ 4   java.nio.ByteBuffer::wrap (20 bytes)   inline (hot)
                                  @ 7   java.nio.HeapByteBuffer::<init> (14 bytes)   inline (hot)
                                    @ 10   java.nio.ByteBuffer::<init> (45 bytes)   inline (hot)
                                      @ 6   java.nio.Buffer::<init> (121 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 55   java.nio.Buffer::limit (62 bytes)   inline (hot)
                                        @ 61   java.nio.Buffer::position (43 bytes)   inline (hot)
                                      @ 15   java.nio.Bits::byteOrder (20 bytes)   inline (hot)
                              @ 25   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                              @ 29   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                              @ 32   java.lang.System$2::getConstantPool (5 bytes)   inline (hot)
                               \-> TypeProfile (6138/6138 counts) = java/lang/System$2
                                @ 1   java.lang.Class::getConstantPool (0 bytes)   native method
                              @ 38   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                              @ 41   sun.reflect.annotation.AnnotationParser::parseMemberValue (162 bytes)   inline (hot)
                                @ 4   java.nio.HeapByteBuffer::get (14 bytes)   inline (hot)
                                  @ 6   java.nio.Buffer::nextGetIndex (31 bytes)   inline (hot)
                                  @ 9   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                                @ 95   sun.reflect.annotation.AnnotationParser::parseConst (208 bytes)   inline (hot)
                                  @ 1   java.nio.HeapByteBuffer::getShort (18 bytes)   inline (hot)
                                    @ 4   java.nio.Buffer::nextGetIndex (38 bytes)   inline (hot)
                                    @ 7   java.nio.HeapByteBuffer::ix (7 bytes)   inline (hot)
                                    @ 14   java.nio.Bits::getShort (18 bytes)   inline (hot)
                                      @ 6   java.nio.Bits::getShortB (16 bytes)   inline (hot)
                                        @ 2   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                        @ 9   java.nio.HeapByteBuffer::_get (7 bytes)   inline (hot)
                                        @ 12   java.nio.Bits::makeShort (12 bytes)   inline (hot)
                                  @ 177   sun.reflect.ConstantPool::getUTF8At (10 bytes)   inline (hot)
                                    @ 6   sun.reflect.ConstantPool::getUTF8At0 (0 bytes)   native method
                                  @ 160   sun.reflect.ConstantPool::getIntAt (10 bytes)   inline (hot)
                                    @ 6   sun.reflect.ConstantPool::getIntAt0 (0 bytes)   native method
                                  @ 171   java.lang.Boolean::valueOf (14 bytes)   inline (hot)
                                  @ 150   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                  @ 154   java.lang.Short::valueOf (33 bytes)   call site not reached
                                  @ 141   sun.reflect.ConstantPool::getLongAt (10 bytes)   never executed
                                  @ 144   java.lang.Long::valueOf (36 bytes)   call site not reached
                                  @ 132   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                  @ 135   java.lang.Integer::valueOf (32 bytes)   call site not reached
                                  @ 123   sun.reflect.ConstantPool::getFloatAt (10 bytes)   never executed
                                  @ 126   java.lang.Float::valueOf (9 bytes)   call site not reached
                                  @ 114   sun.reflect.ConstantPool::getDoubleAt (10 bytes)   never executed
                                  @ 117   java.lang.Double::valueOf (9 bytes)   call site not reached
                                  @ 104   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                  @ 108   java.lang.Character::valueOf (21 bytes)   call site not reached
                                  @ 94   sun.reflect.ConstantPool::getIntAt (10 bytes)   call site not reached
                                  @ 98   java.lang.Byte::valueOf (10 bytes)   call site not reached
               !                @ 56   sun.reflect.annotation.AnnotationParser::parseEnumValue (152 bytes)   too big
               !                @ 63   sun.reflect.annotation.AnnotationParser::parseClassValue (64 bytes)   too big
                                @ 87   sun.reflect.annotation.AnnotationParser::parseArray (226 bytes)   too big
                                @ 75   sun.reflect.annotation.AnnotationParser::parseAnnotation (9 bytes)   never executed
                                @ 111   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 21   org.springframework.beans.PropertyEditorRegistrySupport::useConfigValueEditors (6 bytes)
                              @ 28   java.util.Set::isEmpty (0 bytes)   no static binding
                              @ 40   java.util.Set::iterator (0 bytes)   no static binding
                              @ 47   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 56   java.util.Iterator::next (0 bytes)   no static binding
                              @ 69   org.springframework.beans.support.ResourceEditorRegistrar::registerCustomEditors (213 bytes)   callee is too large
                              @ 81   org.springframework.core.NestedRuntimeException::getMostSpecificCause (15 bytes)   not inlineable
                              @ 103   org.springframework.beans.factory.BeanCreationException::getBeanName (5 bytes)   not inlineable
                              @ 116   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isCurrentlyInCreation (33 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.Set::contains (0 bytes)   no static binding
                                @ 21   org.springframework.beans.factory.support.AbstractBeanFactory::isActuallyInCreation (22 bytes)
                                  @ 2   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isSingletonCurrentlyInCreation (11 bytes)
                                    @ 5   java.util.Set::contains (0 bytes)   no static binding
                                  @ 10   org.springframework.beans.factory.support.AbstractBeanFactory::isPrototypeCurrentlyInCreation (46 bytes)   callee is too large
                              @ 126   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 142  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 147  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 152   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 155   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 158  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 164  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 169   org.springframework.beans.factory.BeanCreationException::getBeanName (5 bytes)   not inlineable
                              @ 172  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 178  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 183   org.springframework.core.NestedRuntimeException::getMessage (12 bytes)   not inlineable
                              @ 186  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 189  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 192   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
               !m             @ 200   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::onSuppressedException (36 bytes)   callee is too large
                              @ 216   java.util.Map::isEmpty (0 bytes)   no static binding
                              @ 229  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
               !              @ 234   java.util.Map::forEach (81 bytes)   no static binding
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
               !m             @ 9   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 31   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 41   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 48   org.springframework.beans.factory.support.AbstractBeanFactory::isFactoryBean (65 bytes)   callee is too large
                              @ 58   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 61   org.springframework.beans.factory.support.AbstractBeanFactory::isFactoryBean (35 bytes)
                                @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                                @ 23   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 4   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 23   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 11   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$27/1100109058::get$Lambda (10 bytes)
                                    @ 6   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$27/1100109058::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 28   org.springframework.util.ReflectionUtils::doWithLocalFields (84 bytes)   callee is too large
                              @ 36   java.lang.invoke.LambdaForm$MH/1394010463::linkToTargetMethod (11 bytes)   force inline by annotation
                                @ 7   java.lang.invoke.LambdaForm$DMH/1476011703::invokeStatic_L3_L (18 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 14   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$28/333693383::get$Lambda (11 bytes)
                                    @ 7   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$$Lambda$28/333693383::<init> (20 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 41   org.springframework.util.ReflectionUtils::doWithLocalMethods (88 bytes)   callee is too large
                              @ 48   java.util.ArrayList::addAll (92 bytes)   callee is too large
                              @ 55   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 75   org.springframework.beans.factory.annotation.InjectionMetadata::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 31   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 40   java.lang.ref.Reference::clear (6 bytes)
                              @ 46   java.lang.ThreadLocal$ThreadLocalMap::expungeStaleEntry (146 bytes)   callee is too large
                              @ 55   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 12   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 4   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 14   java.util.ArrayList::<init> (12 bytes)
                                @ 1   java.util.AbstractList::<init> (10 bytes)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 23   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 11   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$29/1636588948::get$Lambda (10 bytes)
                                    @ 6   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$29/1636588948::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 28   org.springframework.util.ReflectionUtils::doWithLocalFields (84 bytes)   callee is too large
                              @ 36   java.lang.invoke.LambdaForm$MH/1394010463::linkToTargetMethod (11 bytes)   force inline by annotation
                                @ 7   java.lang.invoke.LambdaForm$DMH/1476011703::invokeStatic_L3_L (18 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 14   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$30/95685867::get$Lambda (11 bytes)
                                    @ 7   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$30/95685867::<init> (20 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 41   org.springframework.util.ReflectionUtils::doWithLocalMethods (88 bytes)   callee is too large
                              @ 48   java.util.ArrayList::addAll (92 bytes)   callee is too large
                              @ 55   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 75   org.springframework.beans.factory.annotation.InjectionMetadata::<init> (15 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 2   sun.reflect.generics.visitor.Reifier::visitClassTypeSignature (381 bytes)   callee is too large
                              @ 1   sun.reflect.generics.tree.ClassTypeSignature::getPath (5 bytes)
                              @ 29   java.util.List::iterator (0 bytes)   no static binding
                              @ 36   java.util.Iterator::next (0 bytes)   no static binding
                              @ 52   sun.reflect.generics.tree.SimpleClassTypeSignature::getName (5 bytes)
                              @ 55   java.lang.StringBuilder::<init> (18 bytes)
                                @ 2   java.lang.String::length (6 bytes)
                                @ 8   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 62   sun.reflect.generics.tree.SimpleClassTypeSignature::getDollar (5 bytes)
                              @ 68   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 78   sun.reflect.generics.tree.SimpleClassTypeSignature::getTypeArguments (5 bytes)
                              @ 86   java.util.Iterator::next (0 bytes)   no static binding
                              @ 98   sun.reflect.generics.tree.SimpleClassTypeSignature::getDollar (5 bytes)
                              @ 117   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 122   sun.reflect.generics.tree.SimpleClassTypeSignature::getName (5 bytes)
                              @ 125   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 165   sun.reflect.generics.visitor.Reifier::getFactory (5 bytes)
                              @ 170   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
               !              @ 173   sun.reflect.generics.factory.CoreReflectionFactory::makeNamedType (21 bytes)
                                @ 3   sun.reflect.generics.factory.CoreReflectionFactory::getDeclsLoader (85 bytes)   callee is too large
                                @ 6   java.lang.Class::forName (53 bytes)   callee is too large
                                @ 17   java.lang.TypeNotPresentException::<init> (35 bytes)   callee is too large
                              @ 182   sun.reflect.generics.tree.SimpleClassTypeSignature::getTypeArguments (5 bytes)
                              @ 247   sun.reflect.generics.tree.SimpleClassTypeSignature::getTypeArguments (5 bytes)
                              @ 250   sun.reflect.generics.visitor.Reifier::reifyTypeArguments (38 bytes)   callee is too large
                              @ 256   sun.reflect.generics.visitor.Reifier::getFactory (5 bytes)
                              @ 264   sun.reflect.generics.factory.CoreReflectionFactory::makeParameterizedType (10 bytes)
                                @ 6  sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl::make (not loaded)   not inlineable
                              @ 275   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 284   java.util.Iterator::next (0 bytes)   no static binding
                              @ 296   sun.reflect.generics.tree.SimpleClassTypeSignature::getDollar (5 bytes)
                              @ 315   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 320   sun.reflect.generics.tree.SimpleClassTypeSignature::getName (5 bytes)
                              @ 323   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 328   sun.reflect.generics.visitor.Reifier::getFactory (5 bytes)
                              @ 333   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
               !              @ 336   sun.reflect.generics.factory.CoreReflectionFactory::makeNamedType (21 bytes)
                                @ 3   sun.reflect.generics.factory.CoreReflectionFactory::getDeclsLoader (85 bytes)   callee is too large
                                @ 6   java.lang.Class::forName (53 bytes)   callee is too large
                                @ 17   java.lang.TypeNotPresentException::<init> (35 bytes)   callee is too large
                              @ 346   sun.reflect.generics.tree.SimpleClassTypeSignature::getTypeArguments (5 bytes)
                              @ 349   sun.reflect.generics.visitor.Reifier::reifyTypeArguments (38 bytes)   callee is too large
                              @ 355   sun.reflect.generics.visitor.Reifier::getFactory (5 bytes)
                              @ 364   sun.reflect.generics.factory.CoreReflectionFactory::makeParameterizedType (10 bytes)
                                @ 6  sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl::make (not loaded)   not inlineable
                              @ 3   sun.reflect.generics.factory.CoreReflectionFactory::getDeclsLoader (85 bytes)   callee is too large
                              @ 6   java.lang.Class::forName (53 bytes)   callee is too large
                              @ 17   java.lang.TypeNotPresentException::<init> (35 bytes)   don't inline Throwable constructors
                              @ 17   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 38   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 41   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 78   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 81   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 1   java.util.HashMap$EntryIterator::next (5 bytes)
                                @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   callee is too large
                              @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   callee is too large
                              @ 0   sun.reflect.ReflectionFactory::checkInitted (19 bytes)
                                @ 11   sun.reflect.ReflectionFactory$1::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 4   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 9   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 12   java.lang.reflect.Modifier::isAbstract (14 bytes)
                              @ 23  sun/reflect/InstantiationExceptionConstructorAccessorImpl::<init> (not loaded)   not inlineable
                              @ 39  sun/reflect/InstantiationExceptionConstructorAccessorImpl::<init> (not loaded)   not inlineable
                              @ 46   sun.reflect.Reflection::isSubclassOf (21 bytes)
                                @ 12   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 57   sun.reflect.BootstrapConstructorAccessorImpl::<init> (10 bytes)
                                @ 1   sun.reflect.ConstructorAccessorImpl::<init> (5 bytes)
                                  @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 68   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 71   sun.reflect.misc.ReflectUtil::isVMAnonymousClass (19 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::indexOf (7 bytes)
                                  @ 3   java.lang.String::indexOf (25 bytes)
                                    @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 81   sun.reflect.MethodAccessorGenerator::<init> (5 bytes)
                                @ 1   sun.reflect.AccessorGenerator::<init> (17 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 85   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 89   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 93   java.lang.reflect.Constructor::getExceptionTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 97   java.lang.reflect.Constructor::getModifiers (5 bytes)
                              @ 100   sun.reflect.MethodAccessorGenerator::generateConstructor (21 bytes)
                                @ 14   sun.reflect.MethodAccessorGenerator::generate (762 bytes)   callee is too large
                              @ 109   sun.reflect.NativeConstructorAccessorImpl::<init> (10 bytes)
                                @ 1   sun.reflect.ConstructorAccessorImpl::<init> (5 bytes)
                                  @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 118   sun.reflect.DelegatingConstructorAccessorImpl::<init> (10 bytes)
                                @ 1   sun.reflect.ConstructorAccessorImpl::<init> (5 bytes)
                                  @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                @ 6   sun.reflect.DelegatingConstructorAccessorImpl::setDelegate (6 bytes)
                              @ 126   sun.reflect.NativeConstructorAccessorImpl::setParent (6 bytes)
                              @ 1   sun.reflect.ConstructorAccessorImpl::<init> (5 bytes)
                                @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   sun.reflect.ConstructorAccessorImpl::<init> (5 bytes)
                                @ 1   sun.reflect.MagicAccessorImpl::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   sun.reflect.DelegatingConstructorAccessorImpl::setDelegate (6 bytes)
                              @ 5   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 20   org.springframework.core.annotation.AnnotationAttributes::getBoolean (14 bytes)
                                @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                                @ 10   java.lang.Boolean::booleanValue (5 bytes)
                              @ 1   org.springframework.core.SerializableTypeWrapper$TypeProvider::getType (0 bytes)   no static binding
                              @ 20   org.springframework.core.GraalDetector::inImageCode (4 bytes)
                              @ 30   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 42   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 82   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 89   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 92   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 123  org/springframework/core/SerializableTypeWrapper$TypeProxyInvocationHandler::<init> (not loaded)   not inlineable
                              @ 134  java/lang/reflect/Proxy::newProxyInstance (not loaded)   not inlineable
                              @ 146   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 166   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 171   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 175   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 178   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 181   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 184   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 187   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                      @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7093/7093 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                   \-> TypeProfile (18778/18778 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                      @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                              @ 23   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 28   java.lang.Class::getDeclaredMethods (18 bytes)   inline (hot)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   (intrinsic)
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   too big
                                @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   too big
                                @ 14   java.lang.Class::copyMethods (36 bytes)   too big
                              @ 52   org.springframework.core.annotation.AnnotationUtils::isAttributeMethod (27 bytes)   executed < MinInliningThreshold times
                              @ 60   org.springframework.util.ReflectionUtils::makeAccessible (36 bytes)   too big
                              @ 66   java.util.ArrayList::add (29 bytes)   already compiled into a medium method
                              @ 83   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                  @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                    @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                        @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                          @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                        @ 4   java.util.EnumSet::noneOf (63 bytes)   too big
                                        @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                  @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                      @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                      @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                          @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                      @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7093/7093 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                      @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                        @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                          @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                        @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                        @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   too big
                                      @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                            @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                            @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                      @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                      @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                      @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
                              @ 72   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
               !              @ 9   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::lambda$determineCandidateConstructors$0 (89 bytes)   inline (hot)
                                @ 3   java.lang.reflect.Method::getAnnotation (6 bytes)   inline (hot)
                                  @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)   inline (hot)
                                    @ 1   java.util.Objects::requireNonNull (14 bytes)   inline (hot)
              s                     @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   already compiled into a big method
                                    @ 11   java.util.Collections$EmptyMap::get (2 bytes)   inline (hot)
                                    @ 11   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                     \-> TypeProfile (1054/7320 counts) = java/util/LinkedHashMap
                                     \-> TypeProfile (6266/7320 counts) = java/util/Collections$EmptyMap
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.Object::hashCode (0 bytes)   native method
                                        @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.Object::equals (11 bytes)   inline (hot)
                                        @ 126   java.lang.Object::equals (11 bytes)   inline (hot)
                                    @ 16   java.lang.Class::cast (27 bytes)   inline (hot)
                                      @ 6   java.lang.Class::isInstance (0 bytes)   (intrinsic)
               !              @ 16   org.springframework.beans.factory.support.AbstractBeanFactory::lambda$doGetBean$0 (18 bytes)
                                @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::createBean (0 bytes)   no static binding
               !m               @ 12   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::destroySingleton (45 bytes)   no static binding
                              @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::createBean (0 bytes)   no static binding
               !m             @ 12   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::destroySingleton (45 bytes)   no static binding
                              @ 4   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 20  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 25  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 29  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 34  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 37  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 40   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
               !              @ 55   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   callee is too large
                              @ 66   org.springframework.beans.factory.support.AbstractBeanDefinition::hasBeanClass (8 bytes)
                              @ 73   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClassName (25 bytes)
                                @ 16   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 84   org.springframework.beans.factory.support.RootBeanDefinition::<init> (88 bytes)   callee is too large
                              @ 93   org.springframework.beans.factory.support.AbstractBeanDefinition::setBeanClass (6 bytes)
               !m             @ 98   org.springframework.beans.factory.support.AbstractBeanDefinition::prepareMethodOverrides (68 bytes)   callee is too large
                              @ 112   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 120   org.springframework.beans.factory.BeanDefinitionStoreException::<init> (54 bytes)   not inlineable
                              @ 128   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::resolveBeforeInstantiation (83 bytes)   callee is too large
                              @ 152   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 160   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
               !m             @ 169   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::doCreateBean (507 bytes)   callee is too large
                              @ 178   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 194  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 199  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 203  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 208  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 211  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 214   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 235   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 243   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 153   java.lang.String::substring (79 bytes)   inline (hot)
                                @ 75   java.lang.String::<init> (82 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                    @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 160   java.lang.String::replace (127 bytes)   inline (hot)
                                @ 121   java.lang.String::<init> (10 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 104   org.springframework.asm.Type::getElementType (23 bytes)   never executed
                              @ 107   org.springframework.asm.Type::getClassName (172 bytes)   too big
                              @ 110   java.lang.StringBuilder::<init> (18 bytes)   call site not reached
                              @ 115   org.springframework.asm.Type::getDimensions (28 bytes)   never executed
                              @ 126   java.lang.StringBuilder::append (8 bytes)   already compiled into a medium method
                              @ 137   java.lang.StringBuilder::toString (17 bytes)   already compiled into a medium method
                              @ 31   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 48   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 87   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 118   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 135   java.lang.ThreadLocal$ThreadLocalMap::nextIndex (15 bytes)
                              @ 1   java.lang.ThreadLocal::initialValue (2 bytes)   no static binding
                              @ 5   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   java.lang.ThreadLocal::getMap (5 bytes)
                              @ 22   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                              @ 31   java.lang.ThreadLocal::createMap (14 bytes)
                                @ 7   java.lang.ThreadLocal$ThreadLocalMap::<init> (53 bytes)   callee is too large
                              @ 9   java.lang.Boolean::equals (29 bytes)
                                @ 15   java.lang.Boolean::booleanValue (5 bytes)
                              @ 16   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 23   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)
                              @ 36   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::determineTargetType (60 bytes)   callee is too large
                              @ 50   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyBeanPostProcessorsBeforeInstantiation (69 bytes)   callee is too large
                              @ 61   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyBeanPostProcessorsAfterInitialization (61 bytes)   callee is too large
                              @ 75   java.lang.Boolean::valueOf (14 bytes)
                              @ 1   org.springframework.beans.TypeConverterSupport::<init> (5 bytes)
                                @ 1   org.springframework.beans.PropertyEditorRegistrySupport::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 16   java.lang.invoke.LambdaForm$MH/1899073220::linkToTargetMethod (10 bytes)   force inline by annotation
                                @ 6   java.lang.invoke.LambdaForm$DMH/370988149::invokeStatic_LL_L (15 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 11   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$25/1433208870::get$Lambda (10 bytes)
                                    @ 6   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$25/1433208870::<init> (15 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   org.springframework.util.ReflectionUtils::doWithMethods (7 bytes)
               !                @ 3   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   callee is too large
                              @ 36   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
                              @ 45   java.util.Set::add (0 bytes)   no static binding
                              @ 56   java.util.Map::get (0 bytes)   no static binding
                              @ 82   java.util.Map::get (0 bytes)   no static binding
                              @ 96   java.lang.Class::getDeclaredConstructors (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                                @ 14   java.lang.Class::copyConstructors (38 bytes)   callee is too large
                              @ 115  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 120  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 124   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 127  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 132  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 136   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 139  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 144  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 147  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 152   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
                              @ 163   java.util.ArrayList::<init> (61 bytes)   callee is too large
                              @ 175   org.springframework.beans.BeanUtils::findPrimaryConstructor (32 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 6   org.springframework.core.KotlinDetector::isKotlinReflectPresent (4 bytes)
                              @ 211   java.lang.reflect.Constructor::isSynthetic (5 bytes)
                                @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)
                                  @ 1   java.lang.reflect.Constructor::getModifiers (5 bytes)
                                  @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)
                              @ 234   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::findAutowiredAnnotation (57 bytes)   callee is too large
                              @ 245   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::contains (20 bytes)
                                  @ 2   java.lang.String::toString (2 bytes)
                                  @ 7   java.lang.String::indexOf (7 bytes)
                                    @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 260   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 263   java.lang.Class::getDeclaredConstructor (16 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 12   java.lang.Class::getConstructor0 (103 bytes)   callee is too large
                              @ 271   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::findAutowiredAnnotation (57 bytes)   callee is too large
                              @ 300  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 305  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 310  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 315  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 320  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 323  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 326   org.springframework.beans.factory.BeanCreationException::<init> (43 bytes)   not inlineable
                              @ 333   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::determineRequiredStatus (32 bytes)
                                @ 5   java.util.HashMap::containsKey (18 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                                @ 20   org.springframework.core.annotation.AnnotationAttributes::getBoolean (14 bytes)
                                  @ 4   org.springframework.core.annotation.AnnotationAttributes::getRequiredAttribute (79 bytes)   callee is too large
                                  @ 10   java.lang.Boolean::booleanValue (5 bytes)
                              @ 345   java.util.ArrayList::isEmpty (13 bytes)
                              @ 362  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 367  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 372  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 377  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 382  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 385  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 388   org.springframework.beans.factory.BeanCreationException::<init> (43 bytes)   not inlineable
                              @ 400   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 411   java.lang.reflect.Constructor::getParameterCount (6 bytes)
                              @ 429   java.util.ArrayList::isEmpty (13 bytes)
                              @ 451   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 462   java.util.ArrayList::size (5 bytes)
                              @ 475   org.apache.commons.logging.LogAdapter$JavaUtilLog::isInfoEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 491  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 496  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 500  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 505  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 511   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17                 !              @ 3   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   already compiled into a big method
                              @ 12   sun.misc.URLClassPath$JarLoader$2::getURL (5 bytes)   accessor
                               \-> TypeProfile (1/1 counts) = sun/misc/URLClassPath$JarLoader$2
 java.lang.IndexOutOfBoundsException::<init> (6 bytes)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
                              @ 516  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 519  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 522   org.apache.commons.logging.LogAdapter$JavaUtilLog::info (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 533   java.util.ArrayList::toArray (60 bytes)   callee is too large
                              @ 556   java.lang.reflect.Constructor::getParameterCount (6 bytes)
                              @ 656   java.util.Map::put (0 bytes)   no static binding
                              @ 4   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 15   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
               !m             @ 34   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::createBeanInstance (253 bytes)   callee is too large
                              @ 41   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                @ 14   org.springframework.util.Assert::state (14 bytes)
                                  @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 50   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedClass (8 bytes)
                                @ 1   org.springframework.beans.AbstractNestablePropertyAccessor::getWrappedInstance (22 bytes)
                                  @ 14   org.springframework.util.Assert::state (14 bytes)
                                    @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 4   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 90   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyMergedBeanDefinitionPostProcessors (62 bytes)   callee is too large
                              @ 103   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 111   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 135   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 150   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::isSingletonCurrentlyInCreation (11 bytes)
                                @ 5   java.util.Set::contains (0 bytes)              s               @ 2   sun.misc.URLClassPath::getLookupCache (98 bytes)   inline (hot)
              s               @ 15   sun.misc.URLClassPath::getNextLoader (88 bytes)   already compiled into a big method
                              @ 26   sun.misc.URLClassPath$JarLoader::findResource (18 bytes)   inline (hot)
                              @ 26   sun.misc.URLClassPath$FileLoader::findResource (18 bytes)   inline (hot)
                               \-> TypeProfile (2732/17758 counts) = sun/misc/URLClassPath$FileLoader
                               \-> TypeProfile (15026/17758 counts) = sun/misc/URLClassPath$JarLoader
               !                @ 3   sun.misc.URLClassPath$FileLoader::getResource (164 bytes)   already compiled into a big method
                                @ 12   sun.misc.URLClassPath$FileLoader$1::getURL (5 bytes)   accessor
                                 \-> TypeProfile (1411/1411 counts) = sun/misc/URLClassPath$FileLoader$1
               !                @ 3   sun.misc.URLClassPath$JarLoader::getResource (85 bytes)   already compiled into a big method
                                @ 12   sun.misc.URLClassPath$JarLoader$2::getURL (5 bytes)   accessor
                                 \-> TypeProfile (1/1 counts) = sun/misc/URLClassPath$JarLoader$2
              s               @ 15   sun.misc.URLClassPath::getNextLoader (88 bytes)   already compiled into a big method
   no static binding
                              @ 172   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 188  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 193  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 197  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 202  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 205  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 208   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 220   java.lang.invoke.LambdaForm$MH/1635546341::linkToTargetMethod (13 bytes)   force inline by annotation
                                @ 9   java.lang.invoke.LambdaForm$DMH/105704967::invokeStatic_L4_L (20 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 16   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$$Lambda$9/1345636186::get$Lambda (12 bytes)
                                    @ 8   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$$Lambda$9/1345636186::<init> (26 bytes)   callee is too large
               !m             @ 225   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::addSingletonFactory (73 bytes)   callee is too large
                              @ 237   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::populateBean (412 bytes)   callee is too large
               !              @ 245   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::initializeBean (116 bytes)   callee is too large
                              @ 269   org.springframework.beans.factory.BeanCreationException::getBeanName (5 bytes)   not inlineable
                              @ 272   java.lang.String::equals (81 bytes)   callee is too large
                              @ 289   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 297   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
               !m             @ 309   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 342   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::hasDependentBean (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
               !m             @ 350   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getDependentBeans (44 bytes)   callee is too large
                              @ 362   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 396   org.springframework.beans.factory.support.AbstractBeanFactory::removeSingletonIfCreatedForTypeCheckOnly (22 bytes)
                                @ 5   java.util.Set::contains (0 bytes)   no static binding
               !m               @ 15   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::removeSingleton (34 bytes)   callee is too large
                              @ 406   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 420   java.util.HashSet::isEmpty (8 bytes)
                                @ 4   java.util.HashMap::isEmpty (13 bytes)
                              @ 437  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 442  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 446  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 451  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 456   org.springframework.util.StringUtils::collectionToCommaDelimitedString (7 bytes)
                                @ 3   org.springframework.util.StringUtils::collectionToDelimitedString (10 bytes)
                                  @ 6   org.springframework.util.StringUtils::collectionToDelimitedString (84 bytes)   callee is too large
                              @ 459  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 464  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 467  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 470   org.springframework.beans.factory.BeanCurrentlyInCreationException::<init> (7 bytes)   not inlineable
                              @ 479   org.springframework.beans.factory.support.AbstractBeanFactory::registerDisposableBeanIfNecessary (146 bytes)   callee is too large
                              @ 492   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 500   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 10   org.springframework.beans.factory.ListableBeanFactory::getBeanNamesForType (0 bytes)   not inlineable
                              @ 32   org.springframework.beans.factory.HierarchicalBeanFactory::getParentBeanFactory (0 bytes)   not inlineable
                              @ 45   org.springframework.beans.factory.HierarchicalBeanFactory::getParentBeanFactory (0 bytes)   not inlineable
                              @ 56   org.springframework.beans.factory.BeanFactoryUtils::beanNamesForTypeIncludingAncestors (75 bytes)   callee is too large
                              @ 67   org.springframework.beans.factory.BeanFactoryUtils::mergeNamesWithParent (98 bytes)   callee is too large
                              @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)   inline (hot)
                                @ 12   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 24   java.util.HashMap::put (13 bytes)   inline (hot)
                                 \-> TypeProfile (6144/6144 counts) = java/util/HashMap
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   native method
                                    @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                  @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                    @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 56   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                      @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 91   java.lang.Object::equals (11 bytes)   inline (hot)
                                    @ 203   java.lang.Object::equals (11 bytes)   inline (hot)
                                    @ 152   java.util.HashMap::newNode (13 bytes)   inline (hot)
                                      @ 9   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                    @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                    @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   inline (hot)
               !m             @ 4   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::findAutowiringMetadata (124 bytes)   callee is too large
                              @ 12   org.springframework.beans.factory.annotation.InjectionMetadata::checkConfigMembers (141 bytes)   callee is too large
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
               !m             @ 7   org.springframework.context.annotation.CommonAnnotationBeanPostProcessor::findResourceMetadata (124 bytes)   callee is too large
                              @ 17   org.springframework.beans.factory.annotation.InjectionMetadata::inject (123 bytes)   callee is too large
                              @ 34   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
               !              @ 7   org.springframework.beans.factory.support.AbstractBeanFactory::resolveBeanClass (117 bytes)   callee is too large
                              @ 19   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 22   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 29   org.springframework.beans.factory.support.AbstractBeanDefinition::isNonPublicAccessAllowed (5 bytes)
                              @ 40   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 48  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 53  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 58   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 61  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 64  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 67   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
                              @ 72   org.springframework.beans.factory.support.AbstractBeanDefinition::getInstanceSupplier (5 bytes)
               !              @ 86   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::obtainFromSupplier (114 bytes)   callee is too large
                              @ 91   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryMethodName (5 bytes)
                              @ 101   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::instantiateUsingFactoryMethod (15 bytes)
                                @ 5   org.springframework.beans.factory.support.ConstructorResolver::<init> (18 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getLogger (5 bytes)
               !m               @ 11   org.springframework.beans.factory.support.ConstructorResolver::instantiateUsingFactoryMethod (1488 bytes)   callee is too large
                              @ 168   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::autowireConstructor (17 bytes)
                                @ 5   org.springframework.beans.factory.support.ConstructorResolver::<init> (18 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getLogger (5 bytes)
               !m               @ 13   org.springframework.beans.factory.support.ConstructorResolver::autowireConstructor (954 bytes)   callee is too large
               !              @ 175   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::instantiateBean (81 bytes)   callee is too large
                              @ 183   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::determineConstructorsFromBeanPostProcessors (80 bytes)   callee is too large
                              @ 194   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
                              @ 202   org.springframework.beans.factory.support.AbstractBeanDefinition::hasConstructorArgumentValues (23 bytes)
                                @ 11   org.springframework.beans.factory.config.ConstructorArgumentValues::isEmpty (30 bytes)
                                  @ 4   java.util.Map::isEmpty (0 bytes)   no static binding
                                  @ 16   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 209   org.springframework.util.ObjectUtils::isEmpty (15 bytes)
                              @ 226   org.springframework.beans.factory.support.RootBeanDefinition::getPreferredConstructors (2 bytes)
               !              @ 249   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::instantiateBean (81 bytes)   callee is too large
                              @ 221   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::autowireConstructor (17 bytes)
                                @ 5   org.springframework.beans.factory.support.ConstructorResolver::<init> (18 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getLogger (5 bytes)
               !m               @ 13   org.springframework.beans.factory.support.ConstructorResolver::autowireConstructor (954 bytes)   callee is too large
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::getConversionService (5 bytes)
                              @ 5   org.springframework.beans.PropertyEditorRegistrySupport::setConversionService (6 bytes)
               !              @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::registerCustomEditors (240 bytes)   callee is too large
                              @ 4   org.springframework.core.io.ResourceEditor::<init> (26 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.reflect.Constructor::getModifiers (5 bytes)
                              @ 4   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 11   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                              @ 14   java.lang.Class::getModifiers (0 bytes)   native method
                              @ 17   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 24   java.lang.reflect.AccessibleObject::isAccessible (5 bytes)
                              @ 32   java.lang.reflect.AccessibleObject::setAccessible (21 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 12   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                                @ 17   java.lang.reflect.AccessibleObject::setAccessible0 (42 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 11   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getLogger (5 bytes)
                              @ 8   java.util.Collection::size (0 bytes)   no static binding
                              @ 13   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 21   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 28   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 37   java.util.Iterator::next (0 bytes)   no static binding
                              @ 49  org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor$LifecycleElement::getIdentifier (not loaded)   not inlineable
               !m             @ 57   org.springframework.beans.factory.support.RootBeanDefinition::isExternallyManagedInitMethod (40 bytes)   callee is too large
               !m             @ 66   org.springframework.beans.factory.support.RootBeanDefinition::registerExternallyManagedInitMethod (48 bytes)   callee is too large
                              @ 72   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 85   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 104  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 109  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 116   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 119  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 124  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 129  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 132  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 135   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 151   java.util.Collection::size (0 bytes)   no static binding
                              @ 156   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 164   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 173   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 183   java.util.Iterator::next (0 bytes)   no static binding
                              @ 195  org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor$LifecycleElement::getIdentifier (not loaded)   not inlineable
               !m             @ 203   org.springframework.beans.factory.support.RootBeanDefinition::isExternallyManagedDestroyMethod (40 bytes)   callee is too large
               !m             @ 212   org.springframework.beans.factory.support.RootBeanDefinition::registerExternallyManagedDestroyMethod (48 bytes)   callee is too large
                              @ 218   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 231   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 250  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 255  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 262   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 265  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 270  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 275  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 278  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 281   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 18   java.util.Set::add (0 bytes)   no static binding
                              @ 31   org.springframework.beans.factory.BeanCurrentlyInCreationException::<init> (8 bytes)   not inlineable
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 18   java.util.Set::remove (0 bytes)   no static binding
                              @ 34  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 39  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 43  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 48  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 51  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 54   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 12   org.springframework.core.io.ResourceEditor::<init> (8 bytes)
                              @ 12   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                      @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7235/7235 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                   \-> TypeProfile (19798/19798 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                      @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                              @ 31   java.util.LinkedHashMap::<init> (10 bytes)   inline (hot)
                                @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 36   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   already compiled into a medium method
                              @ 39   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                               \-> TypeProfile (3/3 counts) = java/util/ArrayList
                                @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                  @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 46   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                               \-> TypeProfile (11/11 counts) = java/util/ArrayList$Itr
                                @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 55   java.util.ArrayList$Itr::next (66 bytes)   too big
                              @ 65   org.springframework.core.annotation.AnnotationUtils::getAttributeAliasNames (20 bytes)   executed < MinInliningThreshold times
                              @ 82   java.lang.reflect.Method::getName (5 bytes)   accessor
                              @ 87   java.util.HashMap::put (13 bytes)   already compiled into a medium method
                              @ 46   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                              @ 101   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                  @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                    @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                        @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                          @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                        @ 4   java.util.EnumSet::noneOf (63 bytes)   inline (hot)
                                          @ 1   java.util.EnumSet::getUniverse (10 bytes)   inline (hot)
                                            @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                            @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)   inline (hot)
                                             \-> TypeProfile (1221/1221 counts) = java/lang/System$2
               !                              @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   inline (hot)
                                          @ 49   java.util.RegularEnumSet::<init> (12 bytes)   inline (hot)
                                            @ 3   java.util.EnumSet::<init> (15 bytes)   inline (hot)
                                              @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                        @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                  @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                      @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                      @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                          @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                      @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7235/7235 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                      @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                        @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                          @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                        @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                        @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   inline (hot)
                                          @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)   accessor
                                          @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   inline (hot)
                                            @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                                            @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                              @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inline (hot)
                                                @ 3   java.lang.ref.Reference::<init> (25 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                          @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)   accessor
                                          @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)   inline (hot)
                                      @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                            @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                            @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                      @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                      @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                      @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
                                @ 4   org.springframework.core.io.ResourceEditor::<init> (26 bytes)
                                  @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                  @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 21   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 29   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 41   org.springframework.beans.propertyeditors.InputStreamEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 44   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 56   org.springframework.beans.propertyeditors.InputSourceEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 59   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 71   org.springframework.beans.propertyeditors.FileEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 74   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 86   org.springframework.beans.propertyeditors.PathEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 89   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 101   org.springframework.beans.propertyeditors.ReaderEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 104   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 116   org.springframework.beans.propertyeditors.URLEditor::<init> (16 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                @ 7   org.springframework.util.Assert::notNull (14 bytes)
                              @ 119   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 126   org.springframework.core.io.ResourceLoader::getClassLoader (0 bytes)   not inlineable
                              @ 141   org.springframework.beans.propertyeditors.URIEditor::<init> (7 bytes)
                                @ 3   org.springframework.beans.propertyeditors.URIEditor::<init> (25 bytes)
                                  @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
               !                  @ 13   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 144   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 156   org.springframework.beans.propertyeditors.ClassEditor::<init> (20 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
               !                @ 13   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 159   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 171   org.springframework.beans.propertyeditors.ClassArrayEditor::<init> (20 bytes)
                                @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
               !                @ 13   org.springframework.util.ClassUtils::getDefaultClassLoader (37 bytes)   callee is too large
                              @ 174   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                              @ 206   org.springframework.core.io.support.ResourceArrayPropertyEditor::<init> (8 bytes)
                                @ 4   org.springframework.core.io.support.ResourceArrayPropertyEditor::<init> (26 bytes)
                                  @ 1   java.beans.PropertyEditorSupport::<init> (10 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)
                                  @ 7   org.springframework.util.Assert::notNull (14 bytes)
                                    @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 209   org.springframework.beans.support.ResourceEditorRegistrar::doRegisterEditor (28 bytes)
                                @ 13   org.springframework.beans.PropertyEditorRegistrySupport::overrideDefaultEditor (31 bytes)
                                  @ 12   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 24   java.util.Map::put (0 bytes)   no static binding
                                @ 22   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (8 bytes)
                                  @ 4   org.springframework.beans.PropertyEditorRegistrySupport::registerCustomEditor (104 bytes)   callee is too large
                               \-> TypeProfile (741/760 counts) = java/lang/String
                              @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                              @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                              @ 49   org.springframework.util.ObjectUtils::arrayEquals (290 bytes)   too big
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 6   java.beans.PropertyEditorSupport::setSource (6 bytes)   inline (hot)
                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 13   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 23   java.util.Iterator::next (0 bytes)   no static binding
                              @ 53   org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor::postProcessMergedBeanDefinition (0 bytes)   no static binding
                              @ 3   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 6   java.util.List::iterator (0 bytes)   no static binding
                              @ 15   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 25   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.springframework.beans.factory.config.BeanPostProcessor::postProcessBeforeInitialization (2 bytes)   no static binding
                              @ 3   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 6   java.util.List::iterator (0 bytes)   no static binding
                              @ 15   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 25   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.springframework.beans.factory.config.BeanPostProcessor::postProcessAfterInitialization (2 bytes)   no static binding
                              @ 1   org.springframework.beans.factory.support.AbstractBeanDefinition::hasMethodOverrides (23 bytes)
                                @ 11  org/springframework/beans/factory/support/MethodOverrides::isEmpty (not loaded)   not inlineable
                              @ 8   org.springframework.beans.factory.support.AbstractBeanDefinition::getMethodOverrides (23 bytes)
                                @ 12  org/springframework/beans/factory/support/MethodOverrides::<init> (not loaded)   not inlineable
                              @ 11  org/springframework/beans/factory/support/MethodOverrides::getOverrides (not loaded)   not inlineable
                              @ 20   java.util.Set::iterator (0 bytes)   no static binding
                              @ 27   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 36   java.util.Iterator::next (0 bytes)   no static binding
                              @ 49   org.springframework.beans.factory.support.AbstractBeanDefinition::prepareMethodOverride (74 bytes)   callee is too large
                              @ 6   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 9   java.lang.Boolean::valueOf (14 bytes)
                              @ 12   java.util.Map::put (0 bytes)   no static binding
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 18   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 32   java.util.Map::put (0 bytes)   no static binding
                              @ 43   java.util.Map::remove (0 bytes)   no static binding
                              @ 54   java.util.Set::add (0 bytes)   no static binding
                              @ 11   org.springframework.asm.ClassVisitor::visitEnd (15 bytes)   no static binding
                              @ 1   java.lang.reflect.Executable::getParameterCount (8 bytes)   no static binding
                              @ 21   java.lang.invoke.LambdaForm$MH/712627377::linkToTargetMethod (9 bytes)   force inline by annotation
                                @ 5   java.lang.invoke.LambdaForm$DMH/1756207614::invokeStatic_I_L (14 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 10   org.springframework.core.MethodParameter$$Lambda$22/1214133948::get$Lambda (9 bytes)
                                    @ 5   org.springframework.core.MethodParameter$$Lambda$22/1214133948::<init> (10 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 26   org.springframework.util.Assert::isTrue (17 bytes)
                                @ 9   org.springframework.util.Assert::nullSafeGet (18 bytes)
                                  @ 5   org.springframework.core.MethodParameter$$Lambda$22/1214133948::get (8 bytes)
                                    @ 4   org.springframework.core.MethodParameter::lambda$validateIndex$0 (22 bytes)
                                      @ 4   java.lang.StringBuilder::<init> (7 bytes)
                                        @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 9   java.lang.StringBuilder::append (8 bytes)
                                        @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                      @ 15   java.lang.StringBuilder::append (8 bytes)
                                        @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                      @ 18   java.lang.StringBuilder::toString (17 bytes)
                                        @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                                @ 12   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 9  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 15   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 18  java/security/AccessController::doPrivileged (not loaded)   not inlineable
                              @ 28   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::invokeAwareMethods (68 bytes)   callee is too large
                              @ 39   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 49   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyBeanPostProcessorsBeforeInitialization (61 bytes)   callee is too large
               !              @ 59   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::invokeInitMethods (171 bytes)   callee is too large
                              @ 76   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 89   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 98   org.springframework.beans.factory.support.AbstractBeanDefinition::isSynthetic (5 bytes)
                              @ 108   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::applyBeanPostProcessorsAfterInitialization (61 bytes)   callee is too large
                              @ 19   org.springframework.beans.factory.BeanNameAware::setBeanName (0 bytes)   not inlineable
                              @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)
                              @ 45   org.springframework.beans.factory.BeanClassLoaderAware::setBeanClassLoader (0 bytes)   not inlineable
                              @ 62   org.springframework.beans.factory.BeanFactoryAware::setBeanFactory (0 bytes)   no static binding
                              @ 2   java.lang.System::getSecurityManager (4 bytes)
                              @ 54   org.springframework.context.ConfigurableApplicationContext::getBeanFactory (0 bytes)   no static binding
                              @ 59   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 71  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 77  java/security/AccessController::doPrivileged (not loaded)   not inlineable
                              @ 86   org.springframework.context.support.ApplicationContextAwareProcessor::invokeAwareInterfaces (133 bytes)   callee is too large
               !m             @ 19   org.springframework.beans.factory.support.RootBeanDefinition::isExternallyManagedInitMethod (40 bytes)   callee is too large
                              @ 29   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 45  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 51  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 55  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 60  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 63  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 66   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 71   java.lang.System::getSecurityManager (4 bytes)
                              @ 78  java/lang/invoke/MethodHandle::invokeBasic (not loaded)   not inlineable
                              @ 84   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 87  java/security/AccessController::doPrivileged (not loaded)   not inlineable
                              @ 98   java.security.PrivilegedActionException::getException (5 bytes)
                              @ 106   org.springframework.jdbc.support.JdbcAccessor::afterPropertiesSet (30 bytes)
                                @ 1   org.springframework.jdbc.support.JdbcAccessor::getDataSource (5 bytes)
                                @ 13   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 18   org.springframework.jdbc.support.JdbcAccessor::isLazyInit (5 bytes)
               !m               @ 25   org.springframework.jdbc.support.JdbcAccessor::getExceptionTranslator (69 bytes)   callee is too large
                              @ 116   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 125   org.springframework.beans.factory.support.AbstractBeanDefinition::getInitMethodName (5 bytes)
                              @ 132   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 148   java.lang.String::equals (81 bytes)   callee is too large
               !m             @ 157   org.springframework.beans.factory.support.RootBeanDefinition::isExternallyManagedInitMethod (40 bytes)   callee is too large
               !              @ 167   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::invokeCustomInitMethod (313 bytes)   callee is too large
                              @ 22   org.springframework.context.ConfigurableApplicationContext::getEnvironment (0 bytes)   no static binding
                              @ 27   org.springframework.context.annotation.ConfigurationClassPostProcessor::setEnvironment (12 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 47   org.springframework.context.EmbeddedValueResolverAware::setEmbeddedValueResolver (0 bytes)   not inlineable
                              @ 67   org.springframework.context.ResourceLoaderAware::setResourceLoader (0 bytes)   not inlineable
                              @ 87   org.springframework.context.ApplicationEventPublisherAware::setApplicationEventPublisher (0 bytes)   not inlineable
                              @ 107   org.springframework.context.MessageSourceAware::setMessageSource (0 bytes)   not inlineable
                              @ 127   org.springframework.context.event.EventListenerMethodProcessor::setApplicationContext (18 bytes)
                                @ 6   org.springframework.util.Assert::isTrue (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 4   java.util.List::size (0 bytes)   no static binding
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
               !m             @ 7   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::findAutowiringMetadata (124 bytes)   callee is too large
                              @ 17   org.springframework.beans.factory.annotation.InjectionMetadata::inject (123 bytes)   callee is too large
                              @ 39   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
                              @ 2   java.lang.Object::getClass (0 bytes)   intrinsic
               !m             @ 5   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::findLifecycleMetadata (87 bytes)   callee is too large
                              @ 12   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata::invokeInitMethods (129 bytes)   callee is too large
                              @ 29   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
                              @ 32   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
                              @ 47   org.springframework.beans.factory.BeanCreationException::<init> (13 bytes)   not inlineable
                              @ 2   org.springframework.beans.BeanWrapperImpl::<init> (6 bytes)
                                @ 2   org.springframework.beans.AbstractNestablePropertyAccessor::<init> (37 bytes)   callee is too large
                              @ 2   org.springframework.beans.AbstractNestablePropertyAccessor::<init> (37 bytes)   callee is too large
                              @ 1   java.lang.reflect.Executable::getGenericParameterTypes (20 bytes)
                                @ 1   java.lang.reflect.Constructor::hasGenericInformation (13 bytes)
                                  @ 1   java.lang.reflect.Constructor::getSignature (5 bytes)
                                @ 8   java.lang.reflect.Constructor::getGenericInfo (27 bytes)
                                  @ 9   java.lang.reflect.Constructor::getSignature (5 bytes)
                                  @ 13   java.lang.reflect.Constructor::getFactory (9 bytes)
                                    @ 2  sun/reflect/generics/scope/ConstructorScope::make (not loaded)   not inlineable
                                    @ 5   sun.reflect.generics.factory.CoreReflectionFactory::make (10 bytes)
                                      @ 6   sun.reflect.generics.factory.CoreReflectionFactory::<init> (15 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 16  sun/reflect/generics/repository/ConstructorRepository::make (not loaded)   not inlineable
                                @ 11  sun/reflect/generics/repository/ConstructorRepository::getParameterTypes (not loaded)   not inlineable
                                @ 16   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                  @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 59   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                              @ 82   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                              @ 82   java.util.HashMap::entrySet (27 bytes)   inline (hot)
                               \-> TypeProfile (644/2430 counts) = java/util/HashMap
                               \-> TypeProfile (1786/2430 counts) = org/springframework/core/annotation/AnnotationAttributes
                                @ 15   java.util.HashMap$EntrySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 87   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                              @ 87   java.util.HashMap$EntrySet::iterator (12 bytes)   inline (hot)
                               \-> TypeProfile (644/2430 counts) = java/util/HashMap$EntrySet
                               \-> TypeProfile (1786/2430 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                @ 8   java.util.HashMap$EntryIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 96   java.util.HashMap$HashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (1292/4864 counts) = java/util/HashMap$EntryIterator
                               \-> TypeProfile (3572/4864 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                              @ 106   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                              @ 106   java.util.HashMap$EntryIterator::next (5 bytes)   inline (hot)
                               \-> TypeProfile (648/2434 counts) = java/util/HashMap$EntryIterator
                               \-> TypeProfile (1786/2434 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                                @ 1   java.util.HashMap$EntryIterator::next (5 bytes)   inline (hot)
                                  @ 1   java.util.HashMap$HashIterator::nextNode (100 bytes)   too big
                                @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                  @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                              @ 118   java.util.HashMap$Node::getKey (5 bytes)   accessor
                               \-> TypeProfile (648/2434 counts) = java/util/HashMap$Node
                               \-> TypeProfile (1786/2434 counts) = java/util/LinkedHashMap$Entry
                              @ 127   java.util.HashMap$Node::getValue (5 bytes)   accessor
                              @ 137   java.util.HashMap::hash (20 bytes)   inline (hot)
                                @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 146   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                @ 203   sun.misc.ProxyGenerator$ConstantPool$IndirectEntry::equals (49 bytes)   too big
                                @ 203   org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a::equals (183 bytes)   too big
                                 \-> TypeProfile (1/2 counts) = org/springframework/cglib/core/MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a
                                 \-> TypeProfile (1/2 counts) = sun/misc/ProxyGenerator$ConstantPool$IndirectEntry
                                @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                 \-> TypeProfile (385/413 counts) = java/util/HashMap
                                @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                              @ 96   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 96   java.util.HashMap$HashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (1292/4864 counts) = java/util/HashMap$EntryIterator
                               \-> TypeProfile (3572/4864 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                              @ 10   java.lang.String::equals (81 bytes)   callee is too large
                              @ 18   org.springframework.beans.factory.support.DefaultListableBeanFactory::containsBeanDefinition (17 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.DefaultListableBeanFactory::getBeanDefinition (78 bytes)   callee is too large
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 30   org.springframework.beans.factory.support.AbstractBeanDefinition::getFactoryBeanName (5 bytes)
                              @ 33   java.lang.String::equals (81 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 9   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                                @ 21   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
               !m               @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   callee is too large
                              @ 9   org.springframework.beans.factory.support.DefaultListableBeanFactory::containsBeanDefinition (17 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 20   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.DefaultListableBeanFactory::getBeanDefinition (78 bytes)   callee is too large
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 25   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (68 bytes)   callee is too large
                              @ 31   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 45   org.springframework.beans.factory.support.AbstractBeanFactory::getType (225 bytes)   callee is too large
                              @ 48   org.springframework.beans.factory.support.RootBeanDefinition::<init> (52 bytes)   callee is too large
                              @ 53   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (68 bytes)   callee is too large
                              @ 58   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 79   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (106 bytes)   callee is too large
                              @ 98   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (11 bytes)
                                @ 4   org.springframework.beans.factory.support.DefaultListableBeanFactory::getAutowireCandidateResolver (5 bytes)
                                @ 7   org.springframework.beans.factory.support.DefaultListableBeanFactory::isAutowireCandidate (106 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 6   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)   accessor
                              @ 15   java.util.HashSet::<init> (16 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 9   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 29   org.springframework.core.annotation.AnnotationUtils::getAttributeAliasMap (109 bytes)   inline (hot)
                                @ 12   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                  @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                    @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                      @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                        @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                        @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                      @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                      @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                        @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                        @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                        @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                          @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                           \-> TypeProfile (7261/7261 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                          @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                            @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                          @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                          @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                             \-> TypeProfile (741/760 counts) = java/lang/String
                                            @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                            @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                     \-> TypeProfile (19999/19999 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                      @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                        @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                                @ 31   java.util.LinkedHashMap::<init> (10 bytes)   inline (hot)
                                  @ 1   java.util.HashMap::<init> (11 bytes)   inline (hot)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 36   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   already compiled into a medium method
                                @ 39   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                 \-> TypeProfile (3/3 counts) = java/util/ArrayList
                                  @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 46   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                 \-> TypeProfile (11/11 counts) = java/util/ArrayList$Itr
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 55   java.util.ArrayList$Itr::next (66 bytes)   too big
                                @ 65   org.springframework.core.annotation.AnnotationUtils::getAttributeAliasNames (20 bytes)   executed < MinInliningThreshold times
                                @ 82   java.lang.reflect.Method::getName (5 bytes)   accessor
                                @ 87   java.util.HashMap::put (13 bytes)   already compiled into a medium method
                                @ 46   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 101   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                  @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                    @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                      @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                          @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                            @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                          @ 4   java.util.EnumSet::noneOf (63 bytes)   inline (hot)
                                            @ 1   java.util.EnumSet::getUniverse (10 bytes)   inline (hot)
                                              @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                              @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)   inline (hot)
                                               \-> TypeProfile (1258/1258 counts) = java/lang/System$2
               !                                @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   inline (hot)
                                            @ 49   java.util.RegularEnumSet::<init> (12 bytes)   inline (hot)
                                              @ 3   java.util.EnumSet::<init> (15 bytes)   inline (hot)
                                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inlining too deep
                                          @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                          @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                    @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                      @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                        @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                        @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                      @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                      @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                        @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                        @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                        @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                        @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                        @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                          @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                           \-> TypeProfile (7261/7261 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                          @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                            @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                          @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                          @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                             \-> TypeProfile (741/760 counts) = java/lang/String
                                            @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                            @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                        @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                          @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                            @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                              @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                          @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                          @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   inline (hot)
                                            @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)   accessor
                                            @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   inline (hot)
                                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                                              @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                                @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inline (hot)
                                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)   inlining too deep
                                            @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)   accessor
                                            @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)   inline (hot)
                                        @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                        @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                        @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                        @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
                              @ 42   java.lang.invoke.LambdaForm$MH/1809787067::linkToTargetMethod (15 bytes)   force inline by annotation
                                @ 11   java.lang.invoke.LambdaForm$DMH/796684896::invokeStatic_L3II_L (22 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 18   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::get$Lambda (14 bytes)   inline (hot)
                                    @ 10   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::<init> (32 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 47   java.util.LinkedHashMap::forEach (65 bytes)   inline (hot)
                               \-> TypeProfile (5521/5521 counts) = java/util/LinkedHashMap
                                @ 35   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::accept (32 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (8/8 counts) = org/springframework/core/annotation/AnnotationUtils$$Lambda$7
                              @ 58   java.util.LinkedHashMap::entrySet (27 bytes)   inline (hot)
                                @ 15   java.util.LinkedHashMap$LinkedEntrySet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 61   java.util.LinkedHashMap$LinkedEntrySet::iterator (12 bytes)   inline (hot)
                               \-> TypeProfile (5521/5521 counts) = java/util/LinkedHashMap$LinkedEntrySet
                                @ 8   java.util.LinkedHashMap$LinkedEntryIterator::<init> (11 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                    @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 70   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                               \-> TypeProfile (9080/9080 counts) = java/util/LinkedHashMap$LinkedEntryIterator
                              @ 80   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                @ 1   java.util.LinkedHashMap$LinkedEntryIterator::next (5 bytes)   inline (hot)
                                  @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                              @ 92   java.util.HashMap$Node::getKey (5 bytes)   accessor
                              @ 106   java.util.HashSet::contains (9 bytes)   inline (hot)
                                @ 5   java.util.HashMap::containsKey (18 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 119   java.util.HashMap$Node::getValue (5 bytes)   accessor
                              @ 152   org.springframework.core.annotation.AnnotationUtils::adaptValue (182 bytes)   inline (hot)
                              @ 155   java.util.HashMap::put (13 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                  @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                  @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                    @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                  @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 203   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                    @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                  @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                  @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                  @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                    @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                              @ 70   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                              @ 49   org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor::postProcessBeforeInstantiation (2 bytes)   no static binding
                              @ 1   org.springframework.util.CollectionUtils::isEmpty (19 bytes)
                                @ 5   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 8   java.util.List::iterator (0 bytes)   no static binding
                              @ 15   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 24   java.util.Iterator::next (0 bytes)   no static binding
                              @ 49   org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor::requiresDestruction (2 bytes)   no static binding
                              @ 12   org.springframework.beans.factory.config.DependencyDescriptor::resolveCandidate (8 bytes)   no static binding
                              @ 29   java.util.Map::put (0 bytes)   no static binding
                              @ 40   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)
                                @ 5   java.util.Map::containsKey (0 bytes)   no static binding
                              @ 57   org.springframework.beans.factory.support.DefaultListableBeanFactory$StreamDependencyDescriptor::isOrdered (5 bytes)   not inlineable
                              @ 102   org.springframework.beans.factory.support.AbstractBeanFactory::getType (225 bytes)   callee is too large
                              @ 105   java.util.Map::put (0 bytes)   no static binding
                              @ 68   org.springframework.beans.factory.config.DependencyDescriptor::resolveCandidate (8 bytes)   no static binding
                              @ 89   java.util.Map::put (0 bytes)   no static binding
                              @ 35   org.springframework.core.annotation.AnnotationUtils$$Lambda$7/453211571::accept (32 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (8/8 counts) = org/springframework/core/annotation/AnnotationUtils$$Lambda$7
                              @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 8   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                                                            @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                      @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7535/7535 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                   \-> TypeProfile (21709/21709 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                      @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                              @ 24   java.lang.Class::getDeclaredMethods (18 bytes)   inline (hot)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   (intrinsic)
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   too big
                                @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   too big
                                @ 14   java.lang.Class::copyMethods (36 bytes)   too big
                              @ 29   org.springframework.util.ReflectionUtils::findConcreteMethodsOnInterfaces (100 bytes)   inline (hot)
                                @ 3   java.lang.Class::getInterfaces (41 bytes)   too big
                                @ 27   java.lang.Class::getMethods (17 bytes)   executed < MinInliningThreshold times
                                @ 56   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                @ 59   java.lang.reflect.Modifier::isAbstract (14 bytes)   inline (hot)
                                @ 73   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 80   java.util.ArrayList::add (29 bytes)   already compiled into a medium method
                              @ 126   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                  @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                    @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                      @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                        @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                          @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                        @ 4   java.util.EnumSet::noneOf (63 bytes)   inline (hot)
                                          @ 1   java.util.EnumSet::getUniverse (10 bytes)   inline (hot)
                                            @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                            @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)   inline (hot)
                                             \-> TypeProfile (1710/1710 counts) = java/lang/System$2
               !                              @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   inline (hot)
                                          @ 49   java.util.RegularEnumSet::<init> (12 bytes)   inline (hot)
                                            @ 3   java.util.EnumSet::<init> (15 bytes)   inline (hot)
                                              @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                        @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                            @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                  @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                      @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                      @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                      @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                      @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                      @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                          @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                      @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                      @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                        @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                         \-> TypeProfile (7535/7535 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                          @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                            @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                        @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                           \-> TypeProfile (741/760 counts) = java/lang/String
                                          @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                          @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                        @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                      @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                        @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                          @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                        @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                        @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   inline (hot)
                                          @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)   inline (hot)
                                            @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)   accessor
                                          @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   inline (hot)
                                            @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                                            @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                              @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inline (hot)
                                                @ 3   java.lang.ref.Reference::<init> (25 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::<init> (1 bytes)   inlining too deep
                                          @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)   accessor
                                          @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)   inline (hot)
                                      @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                            @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                            @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                      @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                        @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                          @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                          @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                      @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                      @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
@ 5   org.springframework.beans.factory.support.AbstractBeanFactory::hasInstantiationAwareBeanPostProcessors (5 bytes)
                              @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 15   java.util.List::iterator (0 bytes)   no static binding
                              @ 22   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 31   java.util.Iterator::next (0 bytes)   no static binding
                              @ 60   org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor::determineCandidateConstructors (2 bytes)   no static binding
                              @ 4   org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor::process (14 bytes)
               !                @ 10   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
               !              @ 10   org.springframework.core.annotation.AnnotationUtils::retrieveAnnotationAttributes (181 bytes)   callee is too large
                              @ 1   org.springframework.beans.factory.support.DefaultListableBeanFactory::isConfigurationFrozen (5 bytes)
                              @ 46   java.util.Map::get (0 bytes)   no static binding
                              @ 66   org.springframework.core.ResolvableType::forRawClass (10 bytes)
                                @ 6   org.springframework.core.ResolvableType$1::<init> (12 bytes)
                                  @ 8   org.springframework.core.ResolvableType::<init> (6 bytes)
                                    @ 2   org.springframework.core.ResolvableType::<init> (47 bytes)   callee is too large
               !              @ 71   org.springframework.beans.factory.support.DefaultListableBeanFactory::doGetBeanNamesForType (593 bytes)   callee is too large
                              @ 78   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanClassLoader (5 bytes)
               !              @ 81   org.springframework.util.ClassUtils::isCacheSafe (84 bytes)   callee is too large
                              @ 92   java.util.Map::put (0 bytes)   no static binding
                              @ 17   org.springframework.core.ResolvableType::forRawClass (10 bytes)
                                @ 6   org.springframework.core.ResolvableType$1::<init> (12 bytes)
                                  @ 8   org.springframework.core.ResolvableType::<init> (6 bytes)
                                    @ 2   org.springframework.core.ResolvableType::<init> (47 bytes)   callee is too large
               !              @ 22   org.springframework.beans.factory.support.DefaultListableBeanFactory::doGetBeanNamesForType (593 bytes)   callee is too large
                              @ 12   java.util.Map::get (0 bytes)   no static binding
                              @ 25   java.lang.Boolean::equals (29 bytes)
                                @ 15   java.lang.Boolean::booleanValue (5 bytes)
                              @ 39   org.springframework.context.support.AbstractApplicationContext::addApplicationListener (35 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
               !m               @ 18   org.springframework.context.event.AbstractApplicationEventMulticaster::addApplicationListener (69 bytes)   callee is too large
                                @ 28   java.util.Set::add (0 bytes)   no static binding
                              @ 49   java.lang.Boolean::equals (29 bytes)
                                @ 15   java.lang.Boolean::booleanValue (5 bytes)
                              @ 58   org.apache.commons.logging.LogAdapter$JavaUtilLog::isWarnEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 71   org.springframework.context.support.AbstractApplicationContext::containsBean (11 bytes)
                                @ 1   org.springframework.context.support.AbstractApplicationContext::getBeanFactory (0 bytes)   no static binding
                                @ 5   org.springframework.beans.factory.BeanFactory::containsBean (0 bytes)   not inlineable
                              @ 84   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 89   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 93   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 98   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 101   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 104   org.apache.commons.logging.LogAdapter$JavaUtilLog::warn (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 114   java.util.Map::remove (0 bytes)   no static binding
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 7   org.springframework.beans.factory.support.AbstractBeanFactory::getAccessControlContext (23 bytes)
                                @ 11  org/springframework/beans/factory/support/SecurityContextProvider::getAccessControlContext (not loaded)   not inlineable
                                @ 19  java/security/AccessController::getContext (not loaded)   not inlineable
                              @ 17   org.springframework.beans.factory.support.AbstractBeanDefinition::isPrototype (10 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                              @ 26   org.springframework.beans.factory.support.AbstractBeanFactory::requiresDestruction (41 bytes)   callee is too large
                              @ 33   org.springframework.beans.factory.support.AbstractBeanDefinition::isSingleton (30 bytes)
                                @ 6   java.lang.String::equals (81 bytes)   callee is too large
                                @ 18   java.lang.String::equals (81 bytes)   callee is too large
                              @ 49   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 54   org.springframework.beans.factory.support.DisposableBeanAdapter::<init> (302 bytes)   callee is too large
               !m             @ 57   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::registerDisposableBean (32 bytes)
                                @ 13   java.util.Map::put (0 bytes)   no static binding
                              @ 68   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)
                              @ 71   java.util.Map::get (0 bytes)   no static binding
                              @ 94  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 99  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 103   org.springframework.beans.factory.support.AbstractBeanDefinition::getScope (5 bytes)
                              @ 106  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 111  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 114  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 117   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 132   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 137   org.springframework.beans.factory.support.DisposableBeanAdapter::<init> (302 bytes)   callee is too large
                              @ 140  org/springframework/beans/factory/config/Scope::registerDestructionCallback (not loaded)   not inlineable
                              @ 1   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 11   org.springframework.beans.factory.support.DisposableBeanAdapter::hasDestroyMethod (73 bytes)   callee is too large
                              @ 18   org.springframework.beans.factory.support.AbstractBeanFactory::hasDestructionAwareBeanPostProcessors (5 bytes)
                              @ 26   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessors (5 bytes)
                              @ 29   org.springframework.beans.factory.support.DisposableBeanAdapter::hasApplicableProcessors (64 bytes)   callee is too large
                              @ 17   org.springframework.beans.factory.support.AbstractBeanDefinition::getDestroyMethodName (5 bytes)
                              @ 24   java.lang.String::equals (81 bytes)   callee is too large
                              @ 31   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 40   org.springframework.util.ClassUtils::hasMethod (15 bytes)
               !                @ 3   org.springframework.util.ClassUtils::getMethodIfAvailable (121 bytes)   callee is too large
                              @ 47   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 56   org.springframework.util.ClassUtils::hasMethod (15 bytes)
               !                @ 3   org.springframework.util.ClassUtils::getMethodIfAvailable (121 bytes)   callee is too large
                              @ 69   org.springframework.util.StringUtils::hasLength (17 bytes)
                                @ 5   java.lang.String::isEmpty (14 bytes)
                              @ 5   java.util.Map::remove (0 bytes)   no static binding
                              @ 15   org.springframework.beans.factory.BeanFactoryAware::setBeanFactory (0 bytes)   no static binding
                              @ 11   org.springframework.context.annotation.ConfigurationClassPostProcessor::access$000 (4 bytes)
                              @ 16   org.springframework.beans.factory.BeanFactory::getBean (0 bytes)   not inlineable
                              @ 27   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 30   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 33   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 36   org.springframework.context.annotation.ConfigurationClassParser$ImportStack::getImportingClassFor (20 bytes)
                                @ 5   org.springframework.util.MultiValueMap::get (10 bytes)   not inlineable
                                @ 13   org.springframework.util.CollectionUtils::lastElement (24 bytes)
                                  @ 1   org.springframework.util.CollectionUtils::isEmpty (19 bytes)
                                    @ 5   java.util.Collection::isEmpty (0 bytes)   no static binding
                                  @ 11   java.util.List::size (0 bytes)   no static binding
                                  @ 18   java.util.List::get (0 bytes)   no static binding
                              @ 54   org.springframework.context.annotation.ImportAware::setImportMetadata (0 bytes)   not inlineable
                              @ 5   org.springframework.core.ResolvableType::forMethodParameter (49 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 7   org.springframework.core.MethodParameter::getContainingClass (18 bytes)
                                @ 14   org.springframework.core.MethodParameter::getDeclaringClass (8 bytes)
                                  @ 4   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 10   org.springframework.core.ResolvableType::forType (7 bytes)
                                @ 3   org.springframework.core.ResolvableType::forType (115 bytes)   callee is too large
                              @ 14   org.springframework.core.MethodParameter::getDeclaringClass (8 bytes)
                                @ 4   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 17   org.springframework.core.ResolvableType::as (86 bytes)   callee is too large
                              @ 27   org.springframework.core.SerializableTypeWrapper$MethodParameterTypeProvider::<init> (59 bytes)   callee is too large
                              @ 31   org.springframework.core.ResolvableType::asVariableResolver (19 bytes)
                                @ 15   org.springframework.core.ResolvableType$DefaultVariableResolver::<init> (6 bytes)
                                  @ 2   org.springframework.core.ResolvableType$DefaultVariableResolver::<init> (10 bytes)
                                    @ 6   java.lang.Object::<init> (1 bytes)
                              @ 34   org.springframework.core.ResolvableType::forType (115 bytes)   callee is too large
                              @ 38   org.springframework.core.MethodParameter::getNestingLevel (5 bytes)
                              @ 45   org.springframework.core.ResolvableType::getNested (121 bytes)   callee is too large
                              @ 3   org.springframework.core.ResolvableType::forType (115 bytes)   callee is too large
                              @ 12   org.springframework.core.ResolvableType::resolve (5 bytes)
                              @ 28   org.springframework.core.ResolvableType::getInterfaces (68 bytes)   callee is too large
                              @ 55   org.springframework.core.ResolvableType::as (86 bytes)   callee is too large
                              @ 78   org.springframework.core.ResolvableType::getSuperType (45 bytes)   callee is too large
                              @ 82   org.springframework.core.ResolvableType::as (86 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 6   org.springframework.core.MethodParameter::getMethod (22 bytes)
                              @ 13   org.springframework.core.MethodParameter::getMethod (22 bytes)
                              @ 16   java.lang.reflect.Method::getName (5 bytes)
                              @ 28   org.springframework.core.MethodParameter::getExecutable (5 bytes)
                              @ 31   java.lang.reflect.Executable::getParameterTypes (0 bytes)   no static binding
                              @ 39   org.springframework.core.MethodParameter::getDeclaringClass (8 bytes)
                                @ 4   java.lang.reflect.Executable::getDeclaringClass (0 bytes)   no static binding
                              @ 47   org.springframework.core.MethodParameter::getParameterIndex (5 bytes)
                              @ 15   org.springframework.core.ResolvableType$DefaultVariableResolver::<init> (6 bytes)
                                @ 2   org.springframework.core.ResolvableType$DefaultVariableResolver::<init> (10 bytes)
                                  @ 6   java.lang.Object::<init> (1 bytes)
                              @ 2   org.springframework.core.ResolvableType$DefaultVariableResolver::<init> (10 bytes)
                                @ 6   java.lang.Object::<init> (1 bytes)
                              @ 21   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 31   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 40   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 50   java.util.Iterator::next (0 bytes)   no static binding
                              @ 67   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 86  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 91  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 95  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 100  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 105  org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor$LifecycleElement::getMethod (not loaded)   not inlineable
                              @ 108  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 111  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 114   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 122  org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor$LifecycleElement::invoke (not loaded)   not inlineable
                              @ 6   java.util.concurrent.ConcurrentHashMap$Traverser::<init> (36 bytes)   callee is too large
                              @ 16   java.util.concurrent.ConcurrentHashMap$Traverser::advance (188 bytes)   callee is too large
                              @ 2   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 49   java.lang.Class::forName0 (0 bytes)   native method
                              @ 43   java.lang.reflect.Constructor::getParameterTypes (11 bytes)   inline (hot)
                               \-> TypeProfile (731/731 counts) = java/lang/reflect/Constructor
                                @ 4   java.lang.Object::clone (0 bytes)   native method
                                @ 4   java.lang.Object::clone (0 bytes)   (intrinsic)
                              @ 98   sun.misc.VM::addFinalRefCount (24 bytes)   inline (hot)
                              @ 105   java.lang.Object::notifyAll (0 bytes)   native method
               !m             @ 109   java.lang.ref.ReferenceQueue::enqueue (119 bytes)   inline (hot)
                               \-> TypeProfile (5696/5696 counts) = java/lang/ref/ReferenceQueue
                                @ 98   sun.misc.VM::addFinalRefCount (24 bytes)   inline (hot)
                                @ 105   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 54   java.lang.Object::wait (6 bytes)   inline (hot)
                                @ 2   java.lang.Object::wait (0 bytes)   native method
                              @ 77   java.lang.Thread::yield (0 bytes)   native method
                              @ 21   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 45   java.lang.Class::newReflectionData (74 bytes)   inline (hot)
                                @ 13   java.lang.Class$ReflectionData::<init> (10 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 24   java.lang.ref.SoftReference::<init> (13 bytes)   inline (hot)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)   inline (hot)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 27   java.lang.Class$Atomic::casReflectionData (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                @ 50   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 13   java.lang.Class$ReflectionData::<init> (10 bytes)   inline (hot)
                                  @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 24   java.lang.ref.SoftReference::<init> (13 bytes)   inline (hot)
                                  @ 2   java.lang.ref.Reference::<init> (7 bytes)   inline (hot)
                                    @ 3   java.lang.ref.Reference::<init> (25 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 27   java.lang.Class$Atomic::casReflectionData (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                              @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inline (hot)
                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 4   org.springframework.core.MethodParameter::getGenericParameterType (124 bytes)   callee is too large
                              @ 12   org.springframework.core.ResolvableType::isArray (58 bytes)   callee is too large
                              @ 19   org.springframework.core.ResolvableType::getComponentType (91 bytes)   callee is too large
                              @ 34   org.springframework.core.ResolvableType::hasGenerics (14 bytes)
                                @ 1   org.springframework.core.ResolvableType::getGenerics (148 bytes)   no static binding
                              @ 41   org.springframework.core.ResolvableType::getSuperType (45 bytes)   callee is too large
                              @ 55   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 58   java.util.Map::get (0 bytes)   no static binding
                              @ 78   org.springframework.core.ResolvableType::getGenerics (148 bytes)   no static binding
                              @ 89   java.lang.Integer::intValue (5 bytes)
                              @ 92   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::<init> (10 bytes)
                                  @ 1   java.lang.Number::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 105   java.lang.Integer::intValue (5 bytes)
                              @ 109   org.springframework.core.ResolvableType::getGeneric (90 bytes)   callee is too large
                              @ 9   org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker::isInfrastructureBean (46 bytes)   callee is too large
                              @ 19   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanPostProcessorCount (10 bytes)
                                @ 4   java.util.List::size (0 bytes)   no static binding
                              @ 34   org.apache.commons.logging.LogAdapter$JavaUtilLog::isInfoEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 49   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 54   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 58   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 63   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 67   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 70   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 73   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 78   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 81   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 84   org.apache.commons.logging.LogAdapter$JavaUtilLog::info (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 4   org.springframework.beans.BeanWrapperImpl::<init> (6 bytes)
                                @ 2   org.springframework.beans.BeanWrapperImpl::<init> (6 bytes)
                                  @ 2   org.springframework.beans.AbstractNestablePropertyAccessor::<init> (37 bytes)   callee is too large
                              @ 15   org.springframework.beans.factory.support.AbstractBeanFactory::initBeanWrapper (16 bytes)
                                @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::getConversionService (5 bytes)
                                @ 5   org.springframework.beans.PropertyEditorRegistrySupport::setConversionService (6 bytes)
               !                @ 12   org.springframework.beans.factory.support.AbstractBeanFactory::registerCustomEditors (240 bytes)   callee is too large
               !              @ 117   org.springframework.beans.factory.support.ConstructorResolver::resolvePreparedArguments (272 bytes)   callee is too large
                              @ 141   org.springframework.beans.factory.support.AbstractBeanDefinition::getBeanClass (63 bytes)   callee is too large
                              @ 147   org.springframework.beans.factory.support.AbstractBeanDefinition::isNonPublicAccessAllowed (5 bytes)
                              @ 155   java.lang.Class::getDeclaredConstructors (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 5   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                               \-> TypeProfile (5121/5121 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                                @ 14   java.lang.Class::copyConstructors (38 bytes)   callee is too large
                              @ 163   java.lang.Class::getConstructors (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredConstructors (85 bytes)   callee is too large
                                @ 14   java.lang.Class::copyConstructors (38 bytes)   callee is too large
                              @ 178   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 186  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 191  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 196   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 199  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 204  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 209   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 212  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 217  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 220  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 225   org.springframework.beans.factory.BeanCreationException::<init> (15 bytes)   not inlineable
                              @ 242   org.springframework.beans.factory.support.AbstractBeanDefinition::hasConstructorArgumentValues (23 bytes)
                                @ 11   org.springframework.beans.factory.config.ConstructorArgumentValues::isEmpty (30 bytes)
                                  @ 4   java.util.Map::isEmpty (0 bytes)   no static binding
                                  @ 16   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 256   java.lang.reflect.Constructor::getParameterCount (6 bytes)
               !              @ 312   org.springframework.beans.factory.support.ConstructorResolver::instantiate (75 bytes)   callee is too large
                              @ 315   org.springframework.beans.BeanWrapperImpl::setBeanInstance (35 bytes)
                                @ 20   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 28   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 31   org.springframework.beans.BeanWrapperImpl::setIntrospectionClass (24 bytes)
                                  @ 11  org/springframework/beans/CachedIntrospectionResults::getBeanClass (not loaded)   not inlineable
                              @ 326   org.springframework.beans.factory.support.AbstractBeanDefinition::getResolvedAutowireMode (59 bytes)   callee is too large
                              @ 357   org.springframework.beans.factory.support.AbstractBeanDefinition::getConstructorArgumentValues (23 bytes)
                                @ 12   org.springframework.beans.factory.config.ConstructorArgumentValues::<init> (27 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                    @ 1   java.util.HashMap::<init> (11 bytes)
                                      @ 1   java.util.AbstractMap::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 20   java.util.ArrayList::<init> (12 bytes)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                              @ 366   org.springframework.beans.factory.config.ConstructorArgumentValues::<init> (27 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                @ 20   java.util.ArrayList::<init> (12 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 380   org.springframework.beans.factory.support.ConstructorResolver::resolveConstructorArguments (344 bytes)   callee is too large
                              @ 387   org.springframework.beans.factory.support.AutowireUtils::sortConstructors (10 bytes)
                                @ 1   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                  @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                                @ 6   java.util.Arrays::sort (37 bytes)   callee is too large
                              @ 428   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 476   org.springframework.beans.factory.support.ConstructorResolver$ConstructorPropertiesChecker::evaluate (67 bytes)   callee is too large
                              @ 490   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::getParameterNameDiscoverer (5 bytes)
                              @ 504   org.springframework.core.ParameterNameDiscoverer::getParameterNames (0 bytes)   not inlineable
               !              @ 525   org.springframework.beans.factory.support.ConstructorResolver::getUserDeclaredConstructor (28 bytes)
                                @ 1   java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
                                @ 6   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                  @ 1   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   java.lang.String::contains (20 bytes)
                                    @ 2   java.lang.String::toString (2 bytes)
                                    @ 7   java.lang.String::indexOf (7 bytes)
                                      @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                  @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                                @ 17   java.lang.reflect.Constructor::getParameterTypes (11 bytes)
                                  @ 4   java.lang.Object::clone (0 bytes)   no static binding
                                @ 20   java.lang.Class::getDeclaredConstructor (16 bytes)
                                  @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                  @ 12   java.lang.Class::getConstructor0 (103 bytes)   callee is too large
               !              @ 542   org.springframework.beans.factory.support.ConstructorResolver::createArgumentArray (641 bytes)   callee is too large
                              @ 556   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 572  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 577  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 582  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 587  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 591  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 596  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 601  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 604  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 607   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 621  java/util/LinkedList::<init> (not loaded)   not inlineable
                              @ 630  java/util/LinkedList::add (not loaded)   not inlineable
                              @ 655   org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder::<init> (25 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 661   org.springframework.beans.factory.support.AbstractBeanDefinition::isLenientConstructorResolution (5 bytes)
                              @ 671   org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder::getTypeDifferenceWeight (33 bytes)
                                @ 5   org.springframework.util.MethodInvoker::getTypeDifferenceWeight (122 bytes)   callee is too large
                                @ 14   org.springframework.util.MethodInvoker::getTypeDifferenceWeight (122 bytes)   callee is too large
                              @ 681   org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder::getAssignabilityWeight (67 bytes)   callee is too large
                              @ 739   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 748   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 758   java.util.Set::add (0 bytes)   no static binding
                              @ 782  java/util/LinkedList::removeLast (not loaded)   not inlineable
                              @ 792  java/util/LinkedList::iterator (not loaded)   not inlineable
                              @ 799   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 809   java.util.Iterator::next (0 bytes)   no static binding
               !m             @ 825   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::onSuppressedException (36 bytes)   callee is too large
                              @ 839   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 845   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
                              @ 855   org.springframework.beans.factory.support.AbstractBeanDefinition::isLenientConstructorResolution (5 bytes)
                              @ 866   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 874  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 879  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 883  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 888  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 893  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 896  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 899   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
               !              @ 1   org.springframework.util.ReflectionUtils::getDeclaredMethods (186 bytes)   already compiled into a big method
               !m             @ 918   org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder::storeCache (56 bytes)   callee is too large
                              @ 933   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
               !              @ 945   org.springframework.beans.factory.support.ConstructorResolver::instantiate (75 bytes)   callee is too large
                              @ 948   org.springframework.beans.BeanWrapperImpl::setBeanInstance (35 bytes)
                                @ 20   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 28   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 31   org.springframework.beans.BeanWrapperImpl::setIntrospectionClass (24 bytes)
                                  @ 11  org/springframework/beans/CachedIntrospectionResults::getBeanClass (not loaded)   not inlineable
                              @ 2   java.util.ArrayList::rangeCheckForAdd (26 bytes)   inline (hot)
                              @ 6   java.util.ArrayList::toArray (12 bytes)   inline (hot)
                               \-> TypeProfile (5124/5124 counts) = java/util/ArrayList
                                @ 8   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                  @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 24   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                    @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                      @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
                              @ 67   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 1   org.springframework.beans.AbstractPropertyAccessor::<init> (15 bytes)
                                @ 1   org.springframework.beans.TypeConverterSupport::<init> (5 bytes)
                                  @ 1   org.springframework.beans.PropertyEditorRegistrySupport::<init> (15 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 21   org.springframework.beans.PropertyEditorRegistrySupport::registerDefaultEditors (6 bytes)
                              @ 30   org.springframework.beans.TypeConverterDelegate::<init> (7 bytes)
                                @ 3   org.springframework.beans.TypeConverterDelegate::<init> (15 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 9   org.springframework.beans.factory.ListableBeanFactory::containsBeanDefinition (0 bytes)   not inlineable
                              @ 22   org.springframework.beans.factory.support.DefaultListableBeanFactory::getBeanDefinition (78 bytes)   callee is too large
                              @ 29   org.springframework.beans.factory.config.BeanDefinition::getRole (0 bytes)   no static binding
                              @ 2   java.lang.Object::getClass (0 bytes)   intrinsic
               !m             @ 5   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor::findLifecycleMetadata (87 bytes)   callee is too large
                              @ 8   org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata::hasDestroyMethods (33 bytes)
                                @ 19   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 19   java.util.Collection::isEmpty (0 bytes)   no static binding
                              @ 5   java.util.Collections$UnmodifiableMap::<init> (22 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 5   java.util.Arrays::sort (24 bytes)
                                @ 0   java.util.Arrays$LegacyMergeSort::access$000 (4 bytes)
                                @ 20  java/util/ComparableTimSort::sort (not loaded)   not inlineable
                              @ 11   java.util.Arrays$LegacyMergeSort::access$000 (4 bytes)
                              @ 33   java.util.TimSort::sort (229 bytes)   callee is too large
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 4   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::lambda$registerDependentBean$2 (10 bytes)
                                @ 6   java.util.LinkedHashSet::<init> (9 bytes)
                                  @ 5   java.util.HashSet::<init> (18 bytes)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                        @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 12   org.springframework.beans.factory.config.ConstructorArgumentValues::<init> (27 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                                @ 9   java.util.LinkedHashMap::<init> (10 bytes)
                                  @ 1   java.util.HashMap::<init> (11 bytes)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                @ 20   java.util.ArrayList::<init> (12 bytes)
                                  @ 1   java.util.AbstractList::<init> (10 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 116   org.springframework.beans.factory.InjectionPoint::obtainMethodParameter (22 bytes)   inline (hot)
                                @ 14   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                              @ 119   org.springframework.core.MethodParameter::getNestedParameterType (122 bytes)   inline (hot)
                                @ 118   org.springframework.core.MethodParameter::getParameterType (59 bytes)   inline (hot)
                                  @ 43   java.lang.reflect.Constructor::getParameterTypes (11 bytes)   inline (hot)
                                   \-> TypeProfile (734/734 counts) = java/lang/reflect/Constructor
                                    @ 4   java.lang.Object::clone (0 bytes)   native method
                                    @ 4   java.lang.Object::clone (0 bytes)   (intrinsic)
                              @ 2   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 157   org.springframework.asm.Type::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 174   org.springframework.asm.Type::<init> (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                              @ 187   org.springframework.asm.Type::<init> (26 bytes)   call site not reached
                              @ 6   java.util.LinkedHashSet::<init> (9 bytes)
                                @ 5   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getCustomTypeConverter (5 bytes)
                              @ 34   org.springframework.beans.factory.support.BeanDefinitionValueResolver::<init> (26 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 41   org.springframework.beans.factory.config.ConstructorArgumentValues::getArgumentCount (20 bytes)
                                @ 4   java.util.Map::size (0 bytes)   no static binding
                                @ 13   java.util.List::size (0 bytes)   no static binding
                              @ 48   org.springframework.beans.factory.config.ConstructorArgumentValues::getIndexedArgumentValues (8 bytes)
                                @ 4   java.util.Collections::unmodifiableMap (9 bytes)
                                  @ 5   java.util.Collections$UnmodifiableMap::<init> (22 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 51   java.util.Collections$UnmodifiableMap::entrySet (32 bytes)
                                @ 16   java.util.Map::entrySet (0 bytes)   no static binding
                                @ 21   java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::<init> (6 bytes)
                                  @ 2   java.util.Collections$UnmodifiableSet::<init> (6 bytes)
                                    @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 56   java.util.Set::iterator (0 bytes)   no static binding
                              @ 65   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 75   java.util.Iterator::next (0 bytes)   no static binding
                              @ 87   java.util.Map$Entry::getKey (0 bytes)   not inlineable
                              @ 95   java.lang.Integer::intValue (5 bytes)
                              @ 110   org.springframework.beans.factory.support.AbstractBeanDefinition::getResourceDescription (21 bytes)
                                @ 11   org.springframework.core.io.Resource::getDescription (0 bytes)   no static binding
                              @ 118  java/lang/StringBuilder::<init> (not loaded)   not inlineable
                              @ 123  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 128  java/lang/StringBuilder::append (not loaded)   not inlineable
                              @ 131  java/lang/StringBuilder::toString (not loaded)   not inlineable
                              @ 134   org.springframework.beans.factory.BeanCreationException::<init> (84 bytes)   not inlineable
                              @ 153   java.util.Map$Entry::getValue (0 bytes)   not inlineable
                              @ 165  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::isConverted (not loaded)   not inlineable
                              @ 177   org.springframework.beans.factory.config.ConstructorArgumentValues::addIndexedArgumentValue (30 bytes)
                                @ 11   org.springframework.util.Assert::isTrue (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 17   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 22   java.lang.Integer::valueOf (32 bytes)   callee is too large
                                @ 26   org.springframework.beans.factory.config.ConstructorArgumentValues::addOrMergeIndexedArgumentValue (75 bytes)   callee is too large
                              @ 189  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getValue (not loaded)   not inlineable
               !              @ 192   org.springframework.beans.factory.support.BeanDefinitionValueResolver::resolveValueIfNecessary (478 bytes)   callee is too large
                              @ 205  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getType (not loaded)   not inlineable
                              @ 210  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getName (not loaded)   not inlineable
                              @ 213  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::<init> (not loaded)   not inlineable
                              @ 222  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::setSource (not loaded)   not inlineable
                              @ 231   org.springframework.beans.factory.config.ConstructorArgumentValues::addIndexedArgumentValue (30 bytes)
                                @ 11   org.springframework.util.Assert::isTrue (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 17   org.springframework.util.Assert::notNull (14 bytes)
                                @ 22   java.lang.Integer::valueOf (32 bytes)   callee is too large
                                @ 26   org.springframework.beans.factory.config.ConstructorArgumentValues::addOrMergeIndexedArgumentValue (75 bytes)   callee is too large
                              @ 239   org.springframework.beans.factory.config.ConstructorArgumentValues::getGenericArgumentValues (8 bytes)
                                @ 4   java.util.Collections::unmodifiableList (27 bytes)
                                  @ 12   java.util.Collections$UnmodifiableRandomAccessList::<init> (6 bytes)
                                    @ 2   java.util.Collections$UnmodifiableList::<init> (11 bytes)
                                      @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)   callee is too large
                                  @ 23   java.util.Collections$UnmodifiableList::<init> (11 bytes)
                                    @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                      @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 242   java.util.List::iterator (0 bytes)   no static binding
                              @ 251   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 261   java.util.Iterator::next (0 bytes)   no static binding
                              @ 273  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::isConverted (not loaded)   not inlineable
                              @ 283   org.springframework.beans.factory.config.ConstructorArgumentValues::addGenericArgumentValue (25 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                  @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                                @ 11   java.util.List::contains (0 bytes)   no static binding
                                @ 21   org.springframework.beans.factory.config.ConstructorArgumentValues::addOrMergeGenericArgumentValue (115 bytes)   callee is too large
                              @ 295  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getValue (not loaded)   not inlineable
               !              @ 298   org.springframework.beans.factory.support.BeanDefinitionValueResolver::resolveValueIfNecessary (478 bytes)   callee is too large
                              @ 311  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getType (not loaded)   not inlineable
                              @ 316  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::getName (not loaded)   not inlineable
                              @ 319  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::<init> (not loaded)   not inlineable
                              @ 328  org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder::setSource (not loaded)   not inlineable
                              @ 335   org.springframework.beans.factory.config.ConstructorArgumentValues::addGenericArgumentValue (25 bytes)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 11   java.util.List::contains (0 bytes)   no static binding
                                @ 21   org.springframework.beans.factory.config.ConstructorArgumentValues::addOrMergeGenericArgumentValue (115 bytes)   callee is too large
                              @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                               \-> TypeProfile (6145/6145 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                              @ 4   java.util.Collections::unmodifiableMap (9 bytes)
                                @ 5   java.util.Collections$UnmodifiableMap::<init> (22 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 16   java.util.Map::entrySet (0 bytes)   no static binding
                              @ 21   java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::<init> (6 bytes)
                                @ 2   java.util.Collections$UnmodifiableSet::<init> (6 bytes)
                                  @ 2   java.util.Collections$UnmodifiableCollection::<init> (22 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                                    @ 12   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                              @ 6   java.util.AbstractList$Itr::<init> (6 bytes)   unloaded signature classes
                              @ 0   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 12   org.springframework.util.ClassUtils::isAssignable (81 bytes)   inline (hot)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 9   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 14   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                                @ 23   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                                @ 56   java.util.IdentityHashMap::get (60 bytes)   inline (hot)
                                  @ 1   java.util.IdentityHashMap::maskNull (12 bytes)   inline (hot)
                                  @ 17   java.util.IdentityHashMap::hash (18 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 52   java.util.IdentityHashMap::nextKeyIndex (15 bytes)   inline (hot)
                              @ 12   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::predictBeanType (126 bytes)   already compiled into a big method
                              @ 23   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)
                                @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)
                                  @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   callee is too large
                                    @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   callee is too large
                                  @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)
                                    @ 1   java.lang.ref.SoftReference::get (29 bytes)   callee is too large
                                @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)
                              @ 24   java.lang.Class::getDeclaredMethods (18 bytes)
                                @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                                @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   callee is too large
                                @ 14   java.lang.Class::copyMethods (36 bytes)   callee is too large
                              @ 29   org.springframework.util.ReflectionUtils::findConcreteMethodsOnInterfaces (100 bytes)   callee is too large
                              @ 40   java.util.List::size (0 bytes)   no static binding
                              @ 56   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 64   java.util.List::iterator (0 bytes)   no static binding
                              @ 73   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 83   java.util.Iterator::next (0 bytes)   no static binding
                              @ 126   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)
                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   callee is too large
                              @ 144   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 149   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 153   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 156   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 161   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 165   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 168   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 173   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 176   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 180   java.lang.IllegalStateException::<init> (7 bytes)   don't inline Throwable constructors
                              @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                               \-> TypeProfile (8681/8681 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                  @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                              @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)
                                @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                                @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)
                              @ 1   org.springframework.util.ReflectionUtils::lambda$static$1 (29 bytes)
                                @ 1   java.lang.reflect.Method::isBridge (16 bytes)
                                  @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                                @ 8   java.lang.reflect.Method::isSynthetic (5 bytes)
                                  @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)
                                    @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                                    @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)
                                @ 15   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 1   java.lang.reflect.Method::isBridge (16 bytes)
                                @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                              @ 8   java.lang.reflect.Method::isSynthetic (5 bytes)
                                @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)
                                  @ 1   java.lang.reflect.Method::getModifiers (5 bytes)
                                  @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)
                              @ 15   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 7   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)
                                @ 9   java.lang.IllegalArgumentException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 7   java.lang.Class::isInterface (0 bytes)   native method
               !              @ 15   org.springframework.util.ClassUtils::isVisible (26 bytes)
                                @ 7   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
               !                @ 22   org.springframework.util.ClassUtils::isLoadable (21 bytes)
                                  @ 3   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                              @ 22   java.util.Collections::singleton (9 bytes)
                                @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                              @ 30   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 41   java.lang.Class::getInterfaces (41 bytes)   callee is too large
               !              @ 75   org.springframework.util.ClassUtils::isVisible (26 bytes)
                                @ 7   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
               !                @ 22   org.springframework.util.ClassUtils::isLoadable (21 bytes)
                                  @ 3   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   java.lang.ClassLoader::loadClass (7 bytes)   no static binding
                              @ 84   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 97   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 4   java.util.LinkedHashMap::<init> (10 bytes)
                                @ 1   java.util.HashMap::<init> (11 bytes)
                                  @ 1   java.util.AbstractMap::<init> (5 bytes)
                                    @ 1   java.lang.Object::<init> (1 bytes)
                              @ 12   java.util.LinkedHashSet::<init> (10 bytes)
                                @ 6   java.util.HashSet::<init> (18 bytes)
                                  @ 1   java.util.AbstractSet::<init> (5 bytes)
                                    @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
                                  @ 11   java.util.LinkedHashMap::<init> (12 bytes)
                                    @ 3   java.util.HashMap::<init> (98 bytes)   callee is too large
                              @ 20   java.lang.reflect.Proxy::isProxyClass (25 bytes)
                                @ 3   java.lang.Class::isAssignableFrom (0 bytes)   native method
                                @ 13   java.lang.reflect.WeakCache::containsValue (27 bytes)
                                  @ 1   java.util.Objects::requireNonNull (14 bytes)
                                    @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                  @ 6   java.lang.reflect.WeakCache::expungeStaleEntries (31 bytes)   callee is too large
                                  @ 18  java/lang/reflect/WeakCache$LookupValue::<init> (not loaded)   not inlineable
                                  @ 21   java.util.concurrent.ConcurrentMap::containsKey (10 bytes)   no static binding
                              @ 27   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::contains (20 bytes)
                                  @ 2   java.lang.String::toString (2 bytes)
                                  @ 7   java.lang.String::indexOf (7 bytes)
                                    @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 35   java.util.HashSet::add (20 bytes)
                                @ 8   java.util.HashMap::put (13 bytes)
                                  @ 2   java.util.HashMap::hash (20 bytes)
                                    @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                                  @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 43   org.springframework.util.ClassUtils::getAllInterfacesForClassAsSet (6 bytes)
                                @ 2   org.springframework.util.ClassUtils::getAllInterfacesForClassAsSet (106 bytes)   callee is too large
                              @ 46   java.util.AbstractCollection::addAll (42 bytes)   callee is too large
                              @ 53   java.util.HashSet::iterator (13 bytes)
                                @ 4   java.util.HashMap::keySet (25 bytes)   no static binding
                                @ 7   java.util.Set::iterator (0 bytes)   no static binding
                              @ 62   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 72   java.util.Iterator::next (0 bytes)   no static binding
                              @ 102   java.lang.invoke.LambdaForm$MH/1394010463::linkToTargetMethod (11 bytes)   force inline by annotation
                                @ 7   java.lang.invoke.LambdaForm$DMH/1476011703::invokeStatic_L3_L (18 bytes)   force inline by annotation
                                  @ 1   java.lang.invoke.DirectMethodHandle::internalMemberName (8 bytes)   force inline by annotation
                                  @ 14   org.springframework.core.MethodIntrospector$$Lambda$38/657069980::get$Lambda (11 bytes)
                                    @ 7   org.springframework.core.MethodIntrospector$$Lambda$38/657069980::<init> (20 bytes)
                                      @ 1   java.lang.Object::<init> (1 bytes)
               !              @ 110   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   callee is too large
                              @ 3   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 13   java.lang.reflect.WeakCache::containsValue (27 bytes)
                                @ 1   java.util.Objects::requireNonNull (14 bytes)
                                  @ 8   java.lang.NullPointerException::<init> (5 bytes)   don't inline Throwable constructors
                                @ 6   java.lang.reflect.WeakCache::expungeStaleEntries (31 bytes)
               !m                 @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)   callee is too large
                                  @ 24   java.lang.reflect.WeakCache$CacheKey::expungeFrom (60 bytes)   callee is too large
                                @ 18  java/lang/reflect/WeakCache$LookupValue::<init> (not loaded)   not inlineable
                                @ 21   java.util.concurrent.ConcurrentMap::containsKey (10 bytes)   no static binding
                              @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)   inline (hot)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   inline (hot)
                                  @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 9   java.lang.String::startsWith (7 bytes)   inline (hot)
                                    @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                  @ 21   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
               !m                 @ 26   java.util.concurrent.ConcurrentHashMap::computeIfAbsent (493 bytes)   too big
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)   inline (hot)
                                  @ 7   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                   \-> TypeProfile (14190/14190 counts) = java/util/concurrent/ConcurrentHashMap
                                    @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                    @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                      @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                    @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
               !m             @ 9   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   already compiled into a big method
                              @ 21   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 83   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)   inline (hot)
                                @ 7   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 92   org.springframework.core.ResolvableType::isInstance (21 bytes)   inline (hot)
                                @ 6   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 9   org.springframework.core.ResolvableType$1::isAssignableFrom (24 bytes)   inline (hot)
                                 \-> TypeProfile (1077/1077 counts) = org/springframework/core/ResolvableType$1
                                  @ 12   org.springframework.util.ClassUtils::isAssignable (81 bytes)   inline (hot)
                                    @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                    @ 9   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                    @ 14   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                                    @ 23   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                                    @ 56   java.util.IdentityHashMap::get (60 bytes)   inline (hot)
                                      @ 1   java.util.IdentityHashMap::maskNull (12 bytes)   inline (hot)
                                      @ 17   java.util.IdentityHashMap::hash (18 bytes)   inline (hot)
                                        @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                      @ 52   java.util.IdentityHashMap::nextKeyIndex (15 bytes)   inline (hot)
                              @ 101   org.springframework.core.ResolvableType::hasGenerics (14 bytes)   executed < MinInliningThreshold times
                              @ 221   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)   inline (hot)
                                @ 5   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                                 \-> TypeProfile (9550/9550 counts) = java/util/concurrent/ConcurrentHashMap
                                  @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                    @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                    @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                      @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                    @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 238   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)   accessor
                              @ 272   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)   already compiled into a big method
                              @ 278   org.springframework.core.ResolvableType::resolve (5 bytes)   accessor
                              @ 329   org.springframework.beans.factory.support.RootBeanDefinition::getDecoratedDefinition (5 bytes)   accessor
                              @ 407   org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory::predictBeanType (126 bytes)   already compiled into a big method
                              @ 423   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                              @ 458   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)   inline (hot)
                                @ 7   java.lang.String::startsWith (7 bytes)   inline (hot)
                                  @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                              @ 525   org.springframework.core.ResolvableType::resolve (5 bytes)   accessor
                              @ 536   org.springframework.core.ResolvableType$1::isAssignableFrom (33 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (16/16 counts) = org/springframework/core/ResolvableType$1
                              @ 543   org.springframework.core.ResolvableType$1::isAssignableFrom (24 bytes)   inline (hot)
                               \-> TypeProfile (7663/7663 counts) = org/springframework/core/ResolvableType$1
                                @ 12   org.springframework.util.ClassUtils::isAssignable (81 bytes)   inline (hot)
                                  @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 9   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 14   java.lang.Class::isAssignableFrom (0 bytes)   (intrinsic)
                                  @ 23   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                                  @ 56   java.util.IdentityHashMap::get (60 bytes)   inline (hot)
                                    @ 1   java.util.IdentityHashMap::maskNull (12 bytes)   inline (hot)
                                    @ 17   java.util.IdentityHashMap::hash (18 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                    @ 52   java.util.IdentityHashMap::nextKeyIndex (15 bytes)   inline (hot)
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
               !m             @ 9   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::getSingleton (117 bytes)   callee is too large
                              @ 18   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 34   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 45   org.springframework.beans.factory.support.FactoryBeanRegistrySupport::getTypeForFactoryBean (50 bytes)   callee is too large
                              @ 50   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 55   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 67   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 77   org.springframework.beans.factory.support.AbstractBeanFactory::originalBeanName (37 bytes)   callee is too large
                              @ 80   org.springframework.beans.factory.BeanFactory::getType (0 bytes)   not inlineable
                              @ 88   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 95   org.springframework.beans.factory.support.RootBeanDefinition::getDecoratedDefinition (5 bytes)
                              @ 106   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 115   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanName (5 bytes)
                              @ 120   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanDefinition (5 bytes)
               !m             @ 125   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 133   org.springframework.beans.factory.config.BeanDefinitionHolder::getBeanName (5 bytes)
                              @ 142   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 156   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 173   org.springframework.beans.factory.support.AbstractBeanFactory::predictBeanType (31 bytes)   no static binding
                              @ 187   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 194   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 204   org.springframework.beans.factory.support.AbstractBeanFactory::getTypeForFactoryBean (199 bytes)   no static binding
                              @ 212   org.springframework.beans.factory.BeanFactoryUtils::isFactoryDereference (19 bytes)
                                @ 7   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 2   org.springframework.util.ClassUtils::getAllInterfacesForClassAsSet (106 bytes)   callee is too large
                              @ 7   org.springframework.core.MethodIntrospector$$Lambda$38/657069980::<init> (20 bytes)
                                @ 1   java.lang.Object::<init> (1 bytes)
                              @ 1   java.lang.Object::<init> (1 bytes)
                              @ 3   java.lang.String::intern (0 bytes)   native method
                              @ 26   java.lang.reflect.Method::getName (5 bytes)
                              @ 37   java.lang.reflect.Method::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 40   java.lang.Class::arrayContentsEq (70 bytes)   callee is too large
                              @ 51   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 56   java.lang.reflect.Method::getReturnType (5 bytes)
                              @ 59   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 82   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::<init> (5 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 86   sun.reflect.ReflectionFactory::copyMethod (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyMethod (5 bytes)
                                  @ 1   java.lang.reflect.Method::copy (84 bytes)   callee is too large
                              @ 2   org.springframework.beans.factory.support.AbstractBeanFactory::transformedBeanName (9 bytes)
                                @ 2   org.springframework.beans.factory.BeanFactoryUtils::transformedBeanName (35 bytes)   callee is too large
                                @ 5   org.springframework.core.SimpleAliasRegistry::canonicalName (28 bytes)
                                  @ 7   java.util.Map::get (0 bytes)   no static binding
                              @ 8   org.springframework.beans.factory.support.AbstractBeanFactory::containsBeanDefinition (0 bytes)   no static binding
                              @ 15   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 25   org.springframework.beans.factory.support.AbstractBeanFactory::getParentBeanFactory (5 bytes)
                              @ 32   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (44 bytes)   callee is too large
                              @ 40   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedLocalBeanDefinition (31 bytes)
                                @ 5   java.util.Map::get (0 bytes)   no static binding
                                @ 24   org.springframework.beans.factory.support.AbstractBeanFactory::getBeanDefinition (0 bytes)   no static binding
                                @ 27   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (8 bytes)
               !m                 @ 4   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (343 bytes)   callee is too large
                              @ 8   org.springframework.beans.factory.ListableBeanFactory::containsBeanDefinition (0 bytes)   not inlineable
                              @ 18   org.springframework.beans.factory.support.AbstractBeanFactory::getMergedBeanDefinition (44 bytes)   callee is too large
                              @ 28   org.springframework.beans.factory.config.BeanDefinition::getAttribute (10 bytes)   no static binding
                              @ 45   org.springframework.beans.factory.BeanFactory::getType (0 bytes)   not inlineable
                              @ 5   java.util.Set::contains (0 bytes)   no static binding
                              @ 14   org.springframework.context.event.EventListenerMethodProcessor::isSpringContainerClass (30 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::startsWith (7 bytes)
                                  @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                                @ 13   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                  @ 1   java.lang.Class::getName (21 bytes)
                                    @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                  @ 6   java.lang.String::contains (20 bytes)
                                    @ 2   java.lang.String::toString (2 bytes)
                                    @ 7   java.lang.String::indexOf (7 bytes)
                                      @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                  @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                                @ 18   org.springframework.core.annotation.AnnotatedElementUtils::isAnnotated (28 bytes)
                                  @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)   no static binding
                                  @ 21   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (22 bytes)
                                    @ 6   java.util.Collections::singleton (9 bytes)
                                      @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                        @ 1   java.util.AbstractSet::<init> (5 bytes)
                                          @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                            @ 1   java.lang.Object::<init> (1 bytes)
               !                    @ 18   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (54 bytes)   callee is too large
                                  @ 24   java.lang.Boolean::equals (29 bytes)   callee is too large
                              @ 23   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                              @ 28   org.springframework.core.MethodIntrospector::selectMethods (118 bytes)   callee is too large
                              @ 41   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 57   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 62   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 66   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 71   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 74   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 79   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 85   org.springframework.util.CollectionUtils::isEmpty (19 bytes)
                                @ 5   java.util.Map::isEmpty (0 bytes)   no static binding
                              @ 96   java.util.Set::add (0 bytes)   no static binding
                              @ 106   org.apache.commons.logging.LogAdapter$JavaUtilLog::isTraceEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 122   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 127   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 131   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 134   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 137   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 140   org.apache.commons.logging.LogAdapter$JavaUtilLog::trace (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 166   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 187   org.springframework.util.Assert::state (14 bytes)
                                @ 9   java.lang.IllegalStateException::<init> (6 bytes)   don't inline Throwable constructors
                              @ 191   java.util.Map::keySet (0 bytes)   no static binding
                              @ 196   java.util.Set::iterator (0 bytes)   no static binding
                              @ 205   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 215   java.util.Iterator::next (0 bytes)   no static binding
                              @ 227   java.util.List::iterator (0 bytes)   no static binding
                              @ 236   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 246   java.util.Iterator::next (0 bytes)   no static binding
                              @ 260   org.springframework.context.event.DefaultEventListenerFactory::supportsMethod (2 bytes)
                              @ 273   org.springframework.context.ConfigurableApplicationContext::getType (10 bytes)   no static binding
                              @ 278  org/springframework/aop/support/AopUtils::selectInvocableMethod (not loaded)   not inlineable
                              @ 289   org.springframework.context.event.DefaultEventListenerFactory::createApplicationListener (11 bytes)
                                @ 7  org/springframework/context/event/ApplicationListenerMethodAdapter::<init> (not loaded)   not inlineable
                              @ 315  org/springframework/context/event/ApplicationListenerMethodAdapter::init (not loaded)   not inlineable
                              @ 322   org.springframework.context.ConfigurableApplicationContext::addApplicationListener (0 bytes)   no static binding
                              @ 340   org.apache.commons.logging.LogAdapter$JavaUtilLog::isDebugEnabled (11 bytes)
                                @ 7   java.util.logging.Logger::isLoggable (25 bytes)
                                  @ 1   java.util.logging.Level::intValue (5 bytes)
                              @ 356   java.lang.StringBuilder::<init> (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::<init> (12 bytes)
                                  @ 1   java.lang.Object::<init> (1 bytes)
                              @ 360   java.util.Map::size (0 bytes)   no static binding
                              @ 365   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 370   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 374   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 379   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 383   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 386   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::<init> (82 bytes)   callee is too large
                              @ 389   org.apache.commons.logging.LogAdapter$JavaUtilLog::debug (10 bytes)
                                @ 6   org.apache.commons.logging.LogAdapter$JavaUtilLog::log (90 bytes)   callee is too large
                              @ 0   org.springframework.core.ResolvableType::access$200 (4 bytes)
                              @ 1   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 6   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 13   org.springframework.util.ClassUtils::getUserClass (31 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 6   java.lang.String::contains (20 bytes)
                                  @ 2   java.lang.String::toString (2 bytes)
                                  @ 7   java.lang.String::indexOf (7 bytes)
                                    @ 3   java.lang.String::indexOf (25 bytes)   callee is too large
                                @ 13   java.lang.Class::getSuperclass (0 bytes)   native method
                              @ 18   org.springframework.core.annotation.AnnotatedElementUtils::isAnnotated (28 bytes)
                                @ 2   java.lang.reflect.AnnotatedElement::isAnnotationPresent (16 bytes)   no static binding
                                @ 21   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (22 bytes)
                                  @ 6   java.util.Collections::singleton (9 bytes)
                                    @ 5   java.util.Collections$SingletonSet::<init> (10 bytes)
                                      @ 1   java.util.AbstractSet::<init> (5 bytes)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)
                                          @ 1   java.lang.Object::<init> (1 bytes)
               !                  @ 18   org.springframework.core.annotation.AnnotatedElementUtils::searchWithGetSemantics (54 bytes)   callee is too large
                                @ 24   java.lang.Boolean::equals (29 bytes)
                                  @ 15   java.lang.Boolean::booleanValue (5 bytes)
                              @ 1   org.springframework.util.ReflectionUtils::lambda$static$1 (29 bytes)   inline (hot)
                                @ 1   java.lang.reflect.Method::isBridge (16 bytes)   inline (hot)
                                  @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                @ 8   java.lang.reflect.Method::isSynthetic (5 bytes)   inline (hot)
                                  @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                    @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)   inline (hot)
                                @ 15   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                              @ 12   java.lang.Class::isInterface (0 bytes)   native method
                              @ 22   java.lang.Class::isInterface (0 bytes)   native method
                              @ 39   sun.invoke.util.VerifyType::isNullType (18 bytes)
                              @ 46   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 59   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 67   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 72   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 81   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 93   sun.invoke.util.Wrapper::isSubwordOrInt (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::isIntegral (23 bytes)
                                  @ 1   sun.invoke.util.Wrapper::isNumeric (16 bytes)
                                @ 8   sun.invoke.util.Wrapper::isSingleWord (15 bytes)
                              @ 98   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 104   sun.invoke.util.Wrapper::isSubwordOrInt (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::isIntegral (23 bytes)
                                  @ 1   sun.invoke.util.Wrapper::isNumeric (16 bytes)
                                @ 8   sun.invoke.util.Wrapper::isSingleWord (15 bytes)                              @ 6   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                  @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                    @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                    @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)

                              @ 114   sun.invoke.util.Wrapper::isSubwordOrInt (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::isIntegral (23 bytes)
                                  @ 1   sun.invoke.util.Wrapper::isNumeric (16 bytes)
                                @ 8   sun.invoke.util.Wrapper::isSingleWord (15 bytes)
                              @ 124   sun.invoke.util.Wrapper::isSigned (13 bytes)
                              @ 131   sun.invoke.util.Wrapper::isSigned (13 bytes)
                              @ 141   sun.invoke.util.Wrapper::bitWidth (11 bytes)
                              @ 145   sun.invoke.util.Wrapper::bitWidth (11 bytes)
                              @ 6   org.springframework.beans.factory.support.AbstractBeanFactory::isFactoryBean (65 bytes)   too big
                              @ 14   org.springframework.beans.factory.support.DefaultSingletonBeanRegistry::containsSingleton (11 bytes)   already compiled into a medium method
                              @ 1   org.springframework.core.ResolvableType::getGenerics (148 bytes)   no static binding
                              @ 5   java.util.Map::isEmpty (0 bytes)   no static binding
                              @ 11   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 25   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                              @ 11   java.util.concurrent.ConcurrentHashMap::containsKey (14 bytes)   inline (hot)
                               \-> TypeProfile (6555/6555 counts) = java/util/concurrent/ConcurrentHashMap
                                @ 2   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                  @ 1   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                  @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                    @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                  @ 73   java.lang.String::equals (81 bytes)   (intrinsic)
                                  @ 149   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 6   org.springframework.asm.ClassReader::readUnsignedShort (26 bytes)   inline (hot)
                              @ 31   org.springframework.asm.ClassReader::readUTF8 (23 bytes)   already compiled into a medium method
                              @ 46   org.springframework.asm.ClassReader::readElementValue (1237 bytes)   too big
                              @ 69   org.springframework.asm.ClassReader::readElementValue (1237 bytes)   too big
               !              @ 82   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::visitEnd (286 bytes)   inline (hot)
               !              @ 82   org.springframework.core.type.classreading.RecursiveAnnotationArrayVisitor::visitEnd (114 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (3503/3506 counts) = org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor
                                @ 1   org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor::visitEnd (8 bytes)   inline (hot)
                                  @ 4   org.springframework.core.annotation.AnnotationUtils::registerDefaultValues (179 bytes)   inline (hot)
                                    @ 1   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)   accessor
                                    @ 10   java.lang.Class::getModifiers (0 bytes)   (intrinsic)
                                    @ 13   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                    @ 20   org.springframework.core.annotation.AnnotationUtils::getAttributeMethods (91 bytes)   already compiled into a big method
                                    @ 23   java.util.ArrayList::iterator (9 bytes)   inline (hot)
                                     \-> TypeProfile (3551/3551 counts) = java/util/ArrayList
                                      @ 5   java.util.ArrayList$Itr::<init> (26 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 30   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                     \-> TypeProfile (7100/7100 counts) = java/util/ArrayList$Itr
                                      @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                    @ 39   java.util.ArrayList$Itr::next (66 bytes)   inline (hot)
                                      @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                                      @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
                                    @ 49   java.lang.reflect.Method::getName (5 bytes)   accessor
                                    @ 55   java.lang.reflect.Method::getDefaultValue (81 bytes)   already compiled into a big method
                                    @ 68   java.util.HashMap::containsKey (18 bytes)   inline (hot)
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 168   org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder::<init> (10 bytes)   inline (hot)
                                      @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 171   java.util.HashMap::put (13 bytes)   inline (hot)
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                        @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                        @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                          @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                            @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                        @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 203   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                          @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                            @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                        @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                        @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                        @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                          @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                                    @ 30   java.util.ArrayList$Itr::hasNext (20 bytes)   inline (hot)
                                      @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
                                @ 8   org.springframework.core.annotation.AnnotationAttributes::annotationType (5 bytes)   accessor
                                @ 24   org.springframework.util.LinkedMultiValueMap::get (6 bytes)   inline (hot)
                                 \-> TypeProfile (3559/3559 counts) = org/springframework/util/LinkedMultiValueMap
                                  @ 2   org.springframework.util.LinkedMultiValueMap::get (14 bytes)   inline (hot)
                                    @ 5   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                     \-> TypeProfile (18945/18945 counts) = java/util/LinkedHashMap
                                      @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                        @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                        @ 59   java.lang.String::equals (81 bytes)   (intrinsic)
                                        @ 126   java.lang.String::equals (81 bytes)   (intrinsic)
                                @ 49   org.springframework.util.LinkedMultiValueMap::add (28 bytes)   inline (hot)
                                 \-> TypeProfile (3559/3559 counts) = org/springframework/util/LinkedMultiValueMap
                                  @ 5   java.lang.invoke.LambdaForm$MH/1870252780::linkToTargetMethod (8 bytes)   force inline by annotation
                                    @ 4   java.lang.invoke.LambdaForm$MH/519569038::identity_L (8 bytes)   force inline by annotation
                                  @ 10   java.util.HashMap::computeIfAbsent (309 bytes)   inline (hot)
                                   \-> TypeProfile (5808/5808 counts) = java/util/LinkedHashMap
                                    @ 13   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 57   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 196   org.springframework.util.LinkedMultiValueMap$$Lambda$12/701141022::apply (5 bytes)   inline (hot)
                                     \-> TypeProfile (5692/5692 counts) = org/springframework/util/LinkedMultiValueMap$$Lambda$12
                                      @ 1   org.springframework.util.LinkedMultiValueMap::lambda$add$0 (8 bytes)   inline (hot)
                                        @ 4   java.util.LinkedList::<init> (10 bytes)   inline (hot)
                                          @ 1   java.util.AbstractSequentialList::<init> (5 bytes)   inline (hot)
                                            @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                              @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 263   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                      @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                    @ 303   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                      @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
                                  @ 21   java.util.LinkedList::add (7 bytes)   inline (hot)
                                    @ 2   java.util.LinkedList::linkLast (59 bytes)   inline (hot)
                                      @ 12   java.util.LinkedList$Node::<init> (20 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 69   java.lang.Class::getName (21 bytes)   inline (hot)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 72   org.springframework.core.annotation.AnnotationUtils::isInJavaLangAnnotationPackage (19 bytes)   inline (hot)
                                  @ 7   java.lang.String::startsWith (7 bytes)   inline (hot)
                                    @ 3   java.lang.String::startsWith (72 bytes)   inline (hot)
                                @ 79   java.lang.Class::getAnnotations (11 bytes)   inline (hot)
                                  @ 1   java.lang.Class::annotationData (44 bytes)   inline (hot)
                                    @ 26   java.lang.Class::createAnnotationData (192 bytes)   too big
                                    @ 33   java.lang.Class$Atomic::casAnnotationData (13 bytes)   executed < MinInliningThreshold times
                                  @ 7   sun.reflect.annotation.AnnotationParser::toArray (18 bytes)   inline (hot)
                                    @ 1   java.util.LinkedHashMap::values (25 bytes)   inline (hot)
                                    @ 1   java.util.Collections$EmptyMap::values (4 bytes)   inline (hot)
                                     \-> TypeProfile (841/18313 counts) = java/util/Collections$EmptyMap
                                     \-> TypeProfile (17472/18313 counts) = java/util/LinkedHashMap
                                      @ 0   java.util.Collections::emptySet (4 bytes)   inline (hot)
                                      @ 14   java.util.LinkedHashMap$LinkedValues::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 9   java.util.AbstractCollection::toArray (147 bytes)   inline (hot)
                                    @ 9   java.util.Collections$EmptySet::toArray (11 bytes)   inline (hot)
                                     \-> TypeProfile (841/18313 counts) = java/util/Collections$EmptySet
                                     \-> TypeProfile (17472/18313 counts) = java/util/LinkedHashMap$LinkedValues
                                      @ 1   java.util.LinkedHashMap$LinkedValues::size (8 bytes)   inline (hot)
                                      @ 16   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 19   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                                      @ 23   java.lang.reflect.Array::newInstance (6 bytes)   inline (hot)
                                        @ 2   java.lang.reflect.Array::newArray (0 bytes)   (intrinsic)
                                      @ 34   java.util.LinkedHashMap$LinkedValues::iterator (12 bytes)   inline (hot)
                                        @ 8   java.util.LinkedHashMap$LinkedValueIterator::<init> (11 bytes)   inline (hot)
                                          @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                            @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 51   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                       \-> TypeProfile (34491/35715 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                      @ 114   java.util.LinkedHashMap$LinkedValueIterator::next (8 bytes)   inline (hot)
                                       \-> TypeProfile (34491/35715 counts) = java/util/LinkedHashMap$LinkedValueIterator
                                        @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                @ 84   org.springframework.util.ObjectUtils::isEmpty (15 bytes)   inline (hot)
                                @ 94   java.util.LinkedHashSet::<init> (10 bytes)   inline (hot)
                                  @ 6   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                        @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
               !                @ 129   org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor::recursivelyCollectMetaAnnotations (155 bytes)   already compiled into a big method
                                @ 140   java.util.HashSet::isEmpty (8 bytes)   inline (hot)
                                  @ 4   java.util.HashMap::isEmpty (13 bytes)   inline (hot)
                                @ 154   java.util.HashSet::size (8 bytes)   inline (hot)
                                  @ 4   java.util.HashMap::size (5 bytes)   accessor
                                @ 159   java.util.LinkedHashSet::<init> (9 bytes)   inline (hot)
                                  @ 5   java.util.HashSet::<init> (18 bytes)   inline (hot)
                                    @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 11   java.util.LinkedHashMap::<init> (12 bytes)   inline (hot)
                                      @ 3   java.util.HashMap::<init> (98 bytes)   inline (hot)
                                        @ 1   java.util.AbstractMap::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 51   java.lang.Float::isNaN (12 bytes)   inline (hot)
                                        @ 91   java.util.HashMap::tableSizeFor (59 bytes)   inline (hot)
                                @ 166   java.util.HashSet::iterator (13 bytes)   inline (hot)
                                  @ 4   java.util.LinkedHashMap::keySet (25 bytes)   inline (hot)
                                  @ 4   java.util.HashMap::keySet (25 bytes)   inline (hot)
                                   \-> TypeProfile (2739/16775 counts) = java/util/HashMap
                                   \-> TypeProfile (14036/16775 counts) = java/util/LinkedHashMap
                                    @ 14   java.util.HashMap$KeySet::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 14   java.util.LinkedHashMap$LinkedKeySet::<init> (10 bytes)   inline (hot)
                                      @ 6   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 7   java.util.LinkedHashMap$LinkedKeySet::iterator (12 bytes)   inline (hot)
                                  @ 7   java.util.HashMap$KeySet::iterator (12 bytes)   inline (hot)
                                   \-> TypeProfile (2739/16775 counts) = java/util/HashMap$KeySet
                                   \-> TypeProfile (14036/16775 counts) = java/util/LinkedHashMap$LinkedKeySet
                                    @ 8   java.util.HashMap$KeyIterator::<init> (11 bytes)   inline (hot)
                                      @ 7   java.util.HashMap$HashIterator::<init> (79 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 8   java.util.LinkedHashMap$LinkedKeyIterator::<init> (11 bytes)   inline (hot)
                                      @ 7   java.util.LinkedHashMap$LinkedHashIterator::<init> (31 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                @ 175   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                 \-> TypeProfile (5321/5321 counts) = java/util/LinkedHashMap$LinkedKeyIterator
                                @ 185   java.util.LinkedHashMap$LinkedKeyIterator::next (8 bytes)   inline (hot)
                                  @ 1   java.util.LinkedHashMap$LinkedHashIterator::nextNode (54 bytes)   inline (hot)
                                  @ 4   java.util.HashMap$Node::getKey (5 bytes)   accessor
               !                @ 199   com.sun.proxy.$Proxy3::annotationType (29 bytes)   inline (hot)
               !                @ 199   com.sun.proxy.$Proxy5::annotationType (29 bytes)   inline (hot)
                                 \-> TypeProfile (1773/3547 counts) = com/sun/proxy/$Proxy5
                                 \-> TypeProfile (1774/3547 counts) = com/sun/proxy/$Proxy3
                                  @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                                   \-> TypeProfile (5686/5686 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                                  @ 9   sun.reflect.annotation.AnnotationInvocationHandler::invoke (277 bytes)   already compiled into a big method
                                   \-> TypeProfile (5688/5688 counts) = sun/reflect/annotation/AnnotationInvocationHandler
                                @ 204   java.lang.Class::getName (21 bytes)   inline (hot)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 207   java.util.HashSet::add (20 bytes)   inline (hot)
                                  @ 8   java.util.HashMap::put (13 bytes)   inline (hot)
                                    @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                      @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                      @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                      @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 203   java.lang.String::equals (81 bytes)   (intrinsic)
                                      @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   inline (hot)
                                       \-> TypeProfile (385/413 counts) = java/util/HashMap
                                      @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                @ 175   java.util.LinkedHashMap$LinkedHashIterator::hasNext (13 bytes)   inline (hot)
                                @ 221   java.lang.Class::getName (21 bytes)   inline (hot)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 226   java.util.HashMap::put (13 bytes)   inline (hot)
                                 \-> TypeProfile (1774/1774 counts) = java/util/LinkedHashMap
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 9   java.util.HashMap::putVal (300 bytes)   inline (hot)
                                    @ 20   java.util.HashMap::resize (359 bytes)   hot method too big
                                    @ 56   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                      @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                    @ 91   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 203   java.lang.String::equals (81 bytes)   (intrinsic)
                                    @ 152   java.util.LinkedHashMap::newNode (23 bytes)   inline (hot)
                                      @ 9   java.util.LinkedHashMap$Entry::<init> (10 bytes)   inline (hot)
                                        @ 6   java.util.HashMap$Node::<init> (26 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                      @ 17   java.util.LinkedHashMap::linkNodeLast (33 bytes)   inline (hot)
                                    @ 253   java.util.LinkedHashMap::afterNodeAccess (116 bytes)   inline (hot)
                                    @ 288   java.util.HashMap::resize (359 bytes)   already compiled into a medium method
                                    @ 295   java.util.LinkedHashMap::afterNodeInsertion (40 bytes)   inline (hot)
                                      @ 15   java.util.LinkedHashMap::removeEldestEntry (2 bytes)   inline (hot)
               !              @ 1   org.springframework.util.ReflectionUtils::getDeclaredMethods (186 bytes)   inline (hot)
                                @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                  @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                    @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                      @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                        @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                        @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                      @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                      @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                        @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                        @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                        @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                          @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                           \-> TypeProfile (7879/7879 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                          @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                            @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                          @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                          @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                             \-> TypeProfile (741/760 counts) = java/lang/String
                                            @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                            @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                    @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                     \-> TypeProfile (23892/23892 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                      @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                        @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                                @ 24   java.lang.Class::getDeclaredMethods (18 bytes)   inline (hot)
                                  @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   (intrinsic)
                                  @ 6   java.lang.Class::checkMemberAccess (49 bytes)   too big
                                  @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   too big
                                  @ 14   java.lang.Class::copyMethods (36 bytes)   too big
                                @ 29   org.springframework.util.ReflectionUtils::findConcreteMethodsOnInterfaces (100 bytes)   inline (hot)
                                  @ 3   java.lang.Class::getInterfaces (41 bytes)   too big
                                  @ 27   java.lang.Class::getMethods (17 bytes)   executed < MinInliningThreshold times
                                  @ 56   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                  @ 59   java.lang.reflect.Modifier::isAbstract (14 bytes)   inline (hot)
                                  @ 73   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                    @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                      @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                  @ 80   java.util.ArrayList::add (29 bytes)   already compiled into a medium method
                                @ 126   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                  @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                    @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                      @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                        @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                          @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                            @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                          @ 4   java.util.EnumSet::noneOf (63 bytes)   inline (hot)
                                            @ 1   java.util.EnumSet::getUniverse (10 bytes)   inline (hot)
                                              @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                              @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)   inline (hot)
                                               \-> TypeProfile (2389/2389 counts) = java/lang/System$2
               !                                @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   inline (hot)
                                            @ 49   java.util.RegularEnumSet::<init> (12 bytes)   inline (hot)
                                              @ 3   java.util.EnumSet::<init> (15 bytes)   inline (hot)
                                                @ 1   java.util.AbstractSet::<init> (5 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractCollection::<init> (5 bytes)   inlining too deep
                                          @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                          @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                              @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                    @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                      @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                        @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                        @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                      @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                      @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                        @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                        @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                        @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                        @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                        @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                          @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                           \-> TypeProfile (7879/7879 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                          @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                            @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                          @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                          @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                             \-> TypeProfile (741/760 counts) = java/lang/String
                                            @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                            @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                          @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                        @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                          @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                            @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                              @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                        @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                          @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                          @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   inline (hot)
                                            @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)   inline (hot)
                                              @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                            @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)   accessor
                                            @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   inline (hot)
                                              @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                                              @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                                @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inline (hot)
                                                  @ 3   java.lang.ref.Reference::<init> (25 bytes)   inlining too deep
                                            @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)   accessor
                                            @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)   inline (hot)
                                        @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                        @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                          @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                            @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                            @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                        @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                        @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                        @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
                              @ 37   org.springframework.util.ReflectionUtils$$Lambda$5/1170794006::matches (5 bytes)   inline (hot)
                               \-> TypeProfile (4180/4180 counts) = org/springframework/util/ReflectionUtils$$Lambda$5
                                @ 1   org.springframework.util.ReflectionUtils::lambda$static$1 (29 bytes)   inline (hot)
                                  @ 1   java.lang.reflect.Method::isBridge (16 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                  @ 8   java.lang.reflect.Method::isSynthetic (5 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)   inline (hot)
                                      @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                      @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)   inline (hot)
                                  @ 15   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                              @ 51   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$25/1433208870::doWith (13 bytes)   inline (hot)
                              @ 51   org.springframework.core.MethodIntrospector$$Lambda$38/657069980::doWith (17 bytes)   executed < MinInliningThreshold times
                               \-> TypeProfile (10032/10036 counts) = org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor$$Lambda$25
               !                @ 9   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::lambda$determineCandidateConstructors$0 (89 bytes)   inline (hot)
                                  @ 3   java.lang.reflect.Method::getAnnotation (6 bytes)   inline (hot)
                                    @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)   inline (hot)
                                      @ 1   java.util.Objects::requireNonNull (14 bytes)   inline (hot)
              s                       @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   already compiled into a big method
                                      @ 11   java.util.Collections$EmptyMap::get (2 bytes)   inline (hot)
                                      @ 11   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                       \-> TypeProfile (2084/8476 counts) = java/util/LinkedHashMap
                                       \-> TypeProfile (6392/8476 counts) = java/util/Collections$EmptyMap
                                        @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                          @ 9   java.lang.Object::hashCode (0 bytes)   native method
                                          @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                        @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                          @ 59   java.lang.Object::equals (11 bytes)   inline (hot)
                                          @ 126   java.lang.Object::equals (11 bytes)   inline (hot)
                                      @ 16   java.lang.Class::cast (27 bytes)   inline (hot)
                                        @ 6   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 109   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                              @ 116   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
               !              @ 121   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   inline (hot)
               !                @ 1   org.springframework.util.ReflectionUtils::getDeclaredMethods (186 bytes)   inline (hot)
                                  @ 3   org.springframework.util.Assert::notNull (14 bytes)   inline (hot)
                                  @ 10   org.springframework.util.ConcurrentReferenceHashMap::get (19 bytes)   inline (hot)
                                    @ 2   org.springframework.util.ConcurrentReferenceHashMap::getEntryIfAvailable (24 bytes)   inline (hot)
                                      @ 5   org.springframework.util.ConcurrentReferenceHashMap::getReference (18 bytes)   inline (hot)
                                        @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                          @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                          @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                        @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
                                        @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::getReference (52 bytes)   inline (hot)
               !                          @ 9   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                          @ 31   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                          @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                            @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                             \-> TypeProfile (7879/7879 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                            @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                              @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                            @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                            @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                               \-> TypeProfile (741/760 counts) = java/lang/String
                                              @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                              @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                              @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                      @ 14   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                       \-> TypeProfile (23892/23892 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                        @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                          @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                    @ 11   org.springframework.util.ConcurrentReferenceHashMap$Entry::getValue (5 bytes)   accessor
                                  @ 24   java.lang.Class::getDeclaredMethods (18 bytes)   inline (hot)
                                    @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   (intrinsic)
                                    @ 6   java.lang.Class::checkMemberAccess (49 bytes)   too big
                                    @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   too big
                                    @ 14   java.lang.Class::copyMethods (36 bytes)   too big
                                  @ 29   org.springframework.util.ReflectionUtils::findConcreteMethodsOnInterfaces (100 bytes)   inline (hot)
                                    @ 3   java.lang.Class::getInterfaces (41 bytes)   too big
                                    @ 27   java.lang.Class::getMethods (17 bytes)   executed < MinInliningThreshold times
                                    @ 56   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                    @ 59   java.lang.reflect.Modifier::isAbstract (14 bytes)   inline (hot)
                                    @ 73   java.util.ArrayList::<init> (12 bytes)   inline (hot)
                                      @ 1   java.util.AbstractList::<init> (10 bytes)   inline (hot)
                                        @ 1   java.util.AbstractCollection::<init> (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                    @ 80   java.util.ArrayList::add (29 bytes)   already compiled into a medium method
                                  @ 126   org.springframework.util.ConcurrentReferenceHashMap::put (8 bytes)   inline (hot)
                                    @ 4   org.springframework.util.ConcurrentReferenceHashMap::put (32 bytes)   inline (hot)
                                      @ 25   org.springframework.util.ConcurrentReferenceHashMap$1::<init> (23 bytes)   inline (hot)
                                        @ 19   org.springframework.util.ConcurrentReferenceHashMap$Task::<init> (34 bytes)   inline (hot)
                                          @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 27   java.util.EnumSet::of (51 bytes)   inline (hot)
                                            @ 1   java.lang.Enum::getDeclaringClass (22 bytes)   inline (hot)
                                              @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 6   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                            @ 4   java.util.EnumSet::noneOf (63 bytes)   inline (hot)
                                              @ 1   java.util.EnumSet::getUniverse (10 bytes)   inline (hot)
                                                @ 0   sun.misc.SharedSecrets::getJavaLangAccess (4 bytes)   inline (hot)
                                                @ 4   java.lang.System$2::getEnumConstantsShared (8 bytes)   inline (hot)
                                                 \-> TypeProfile (2389/2389 counts) = java/lang/System$2
               !                                  @ 1   java.lang.Class::getEnumConstantsShared (73 bytes)   inlining too deep
                                              @ 49   java.util.RegularEnumSet::<init> (12 bytes)   inline (hot)
                                                @ 3   java.util.EnumSet::<init> (15 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractSet::<init> (5 bytes)   inlining too deep
                                            @ 10   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                              @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                                @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                                @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                            @ 39   java.util.RegularEnumSet::add (9 bytes)   inline (hot)
                                              @ 5   java.util.RegularEnumSet::add (40 bytes)   inline (hot)
                                                @ 2   java.util.EnumSet::typeCheck (59 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                                @ 17   java.lang.Enum::ordinal (5 bytes)   accessor
                                      @ 28   org.springframework.util.ConcurrentReferenceHashMap::doTask (18 bytes)   inline (hot)
                                        @ 2   org.springframework.util.ConcurrentReferenceHashMap::getHash (64 bytes)   inline (hot)
                                          @ 5   java.lang.Object::hashCode (0 bytes)   native method
                                          @ 5   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                        @ 8   org.springframework.util.ConcurrentReferenceHashMap::getSegmentForHash (23 bytes)   inline (hot)
               !                        @ 14   org.springframework.util.ConcurrentReferenceHashMap$Segment::doTask (178 bytes)   inline (hot)
                                          @ 4   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                          @ 13   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
               !                          @ 22   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   hot method too big
                                          @ 29   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                          @ 51   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                          @ 60   org.springframework.util.ConcurrentReferenceHashMap$Segment::getIndex (7 bytes)   inline (hot)
                                          @ 79   org.springframework.util.ConcurrentReferenceHashMap$Segment::findInChain (66 bytes)   inline (hot)
                                            @ 10   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getHash (5 bytes)   accessor
                                             \-> TypeProfile (7879/7879 counts) = org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
                                            @ 21   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::get (8 bytes)   inline (hot)
                                              @ 1   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                            @ 35   org.springframework.util.ConcurrentReferenceHashMap$Entry::getKey (5 bytes)   accessor
                                            @ 43   org.springframework.util.ObjectUtils::nullSafeEquals (55 bytes)   inline (hot)
                                               \-> TypeProfile (741/760 counts) = java/lang/String
                                              @ 19   java.lang.String::equals (81 bytes)   (intrinsic)
                                              @ 28   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 31   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                              @ 38   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Class::isArray (0 bytes)   (intrinsic)
                                            @ 54   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::getNext (5 bytes)   accessor
                                          @ 113   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::<init> (37 bytes)   inline (hot)
                                            @ 33   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (6 bytes)   inline (hot)
                                              @ 2   org.springframework.util.ConcurrentReferenceHashMap$Entries::<init> (10 bytes)   inline (hot)
                                                @ 6   java.lang.Object::<init> (1 bytes)   inline (hot)
                                          @ 125   org.springframework.util.ConcurrentReferenceHashMap$1::execute (53 bytes)   inline (hot)
                                            @ 40   org.springframework.util.Assert::state (14 bytes)   inline (hot)
                                            @ 48   org.springframework.util.ConcurrentReferenceHashMap$Segment$1::add (55 bytes)   inline (hot)
                                              @ 9   org.springframework.util.ConcurrentReferenceHashMap$Entry::<init> (15 bytes)   inline (hot)
                                                @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
                                              @ 17   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$300 (5 bytes)   accessor
                                              @ 29   org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager::createReference (43 bytes)   inline (hot)
                                                @ 4   org.springframework.util.ConcurrentReferenceHashMap::access$700 (5 bytes)   accessor
                                                @ 39   org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference::<init> (18 bytes)   inline (hot)
                                                  @ 4   java.lang.ref.SoftReference::<init> (14 bytes)   inlining too deep
                                              @ 37   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$400 (5 bytes)   accessor
                                              @ 50   org.springframework.util.ConcurrentReferenceHashMap$Segment::access$508 (12 bytes)   inline (hot)
                                          @ 131   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                            @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                          @ 138   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   inline (hot)
                                            @ 5   java.util.RegularEnumSet::contains (57 bytes)   inline (hot)
                                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                              @ 41   java.lang.Enum::ordinal (5 bytes)   accessor
                                          @ 156   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   call site not reached
                                          @ 163   org.springframework.util.ConcurrentReferenceHashMap$Task::hasOption (9 bytes)   call site not reached
               !                          @ 172   org.springframework.util.ConcurrentReferenceHashMap$Segment::restructureIfNecessary (354 bytes)   already compiled into a medium method
                                @ 37   org.springframework.util.ReflectionUtils$$Lambda$5/1170794006::matches (5 bytes)   inline (hot)
                                 \-> TypeProfile (4180/4180 counts) = org/springframework/util/ReflectionUtils$$Lambda$5
                                  @ 1   org.springframework.util.ReflectionUtils::lambda$static$1 (29 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Method::isBridge (16 bytes)   inline (hot)
                                      @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                    @ 8   java.lang.reflect.Method::isSynthetic (5 bytes)   inline (hot)
                                      @ 1   java.lang.reflect.Executable::isSynthetic (8 bytes)   inline (hot)
                                        @ 1   java.lang.reflect.Method::getModifiers (5 bytes)   accessor
                                        @ 4   java.lang.reflect.Modifier::isSynthetic (14 bytes)   inline (hot)
                                    @ 15   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                @ 51   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$$Lambda$25/1433208870::doWith (13 bytes)   inline (hot)
                                @ 51   org.springframework.core.MethodIntrospector$$Lambda$38/657069980::doWith (17 bytes)   executed < MinInliningThreshold times
                                 \-> TypeProfile (10032/10036 counts) = org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor$$Lambda$25
               !                  @ 9   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor::lambda$determineCandidateConstructors$0 (89 bytes)   inline (hot)
                                    @ 3   java.lang.reflect.Method::getAnnotation (6 bytes)   inline (hot)
                                      @ 2   java.lang.reflect.Executable::getAnnotation (23 bytes)   inline (hot)
                                        @ 1   java.util.Objects::requireNonNull (14 bytes)   inline (hot)
              s                         @ 7   java.lang.reflect.Executable::declaredAnnotations (59 bytes)   already compiled into a big method
                                        @ 11   java.util.Collections$EmptyMap::get (2 bytes)   inline (hot)
                                        @ 11   java.util.LinkedHashMap::get (33 bytes)   inline (hot)
                                         \-> TypeProfile (2084/8476 counts) = java/util/LinkedHashMap
                                         \-> TypeProfile (6392/8476 counts) = java/util/Collections$EmptyMap
                                          @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                            @ 9   java.lang.Object::hashCode (0 bytes)   native method
                                            @ 9   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                                          @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                            @ 59   java.lang.Object::equals (11 bytes)   inline (hot)
                                            @ 126   java.lang.Object::equals (11 bytes)   inline (hot)
                                        @ 16   java.lang.Class::cast (27 bytes)   inline (hot)
                                          @ 6   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                                @ 109   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
                                @ 116   java.lang.Class::getSuperclass (0 bytes)   (intrinsic)
               !                @ 121   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   recursive inlining is too deep
                                @ 128   java.lang.Class::isInterface (0 bytes)   (intrinsic)
                                @ 135   java.lang.Class::getInterfaces (41 bytes)   too big
               !                @ 166   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   too big
                              @ 128   java.lang.Class::isInterface (0 bytes)   (intrinsic)
                              @ 135   java.lang.Class::getInterfaces (41 bytes)   too big
               !              @ 166   org.springframework.util.ReflectionUtils::doWithMethods (176 bytes)   too big
                              @ 7   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 10   java.lang.Class::isArray (0 bytes)   (intrinsic)
                              @ 179   java.lang.String::hashCode (55 bytes)   inline (hot)
                              @ 179   java.lang.Object::hashCode (0 bytes)   native method
                               \-> TypeProfile (12/1760 counts) = java/lang/Class
                               \-> TypeProfile (1748/1760 counts) = java/lang/String
                              @ 179   java.lang.Object::hashCode (0 bytes)   (intrinsic)
                              @ 33   jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)   hot method too big
